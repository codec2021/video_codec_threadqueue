; Listing generated by Microsoft (R) Optimizing Compiler Version 19.26.28806.0 

	TITLE	F:\open_codec_learn_2021\kvazaar-master\src\cli.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05DFJCHPDH@input@				; `string'
PUBLIC	??_C@_06DKIGHACF@output@			; `string'
PUBLIC	??_C@_05GFCDIDHO@debug@				; `string'
PUBLIC	??_C@_05IGKADHGO@width@				; `string'
PUBLIC	??_C@_06LNLHEAAG@height@			; `string'
PUBLIC	??_C@_06OLAPKHEJ@frames@			; `string'
PUBLIC	??_C@_02HKLCFNHM@qp@				; `string'
PUBLIC	??_C@_06FBOEEHNL@period@			; `string'
PUBLIC	??_C@_03GCDGINBO@ref@				; `string'
PUBLIC	??_C@_0L@OMIMLMPG@vps?9period@			; `string'
PUBLIC	??_C@_09JFPMGDJC@input?9res@			; `string'
PUBLIC	??_C@_09FAGKMCMB@input?9fps@			; `string'
PUBLIC	??_C@_07KBNBPJMI@deblock@			; `string'
PUBLIC	??_C@_0L@POIEBAHK@no?9deblock@			; `string'
PUBLIC	??_C@_03MEBPJOO@sao@				; `string'
PUBLIC	??_C@_06KLBDJIAO@no?9sao@			; `string'
PUBLIC	??_C@_04HLCEBPLD@rdoq@				; `string'
PUBLIC	??_C@_07NLIJKPKK@no?9rdoq@			; `string'
PUBLIC	??_C@_08NLKLMLIL@signhide@			; `string'
PUBLIC	??_C@_0M@POJLEMMC@no?9signhide@			; `string'
PUBLIC	??_C@_03MIABAOBE@smp@				; `string'
PUBLIC	??_C@_06GPFDGPPE@no?9smp@			; `string'
PUBLIC	??_C@_03DCBBJBAA@amp@				; `string'
PUBLIC	??_C@_06JFEDPAOA@no?9amp@			; `string'
PUBLIC	??_C@_02FGFKDEHA@rd@				; `string'
PUBLIC	??_C@_0BC@NIDONDCE@full?9intra?9search@		; `string'
PUBLIC	??_C@_0BF@MPDNLGM@no?9full?9intra?9search@	; `string'
PUBLIC	??_C@_0P@KCEICG@transform?9skip@		; `string'
PUBLIC	??_C@_0BC@OFJOADKK@no?9transform?9skip@		; `string'
PUBLIC	??_C@_0P@GBNNMAAH@tr?9depth?9intra@		; `string'
PUBLIC	??_C@_02FIDLOBHM@me@				; `string'
PUBLIC	??_C@_05DLBDLGJF@subme@				; `string'
PUBLIC	??_C@_0BB@JEPLFBLL@source?9scan?9type@		; `string'
PUBLIC	??_C@_03PDCNJFPC@sar@				; `string'
PUBLIC	??_C@_08EKPNNHHH@overscan@			; `string'
PUBLIC	??_C@_0M@PKCLCCAL@videoformat@			; `string'
PUBLIC	??_C@_05CCGOGOBM@range@				; `string'
PUBLIC	??_C@_09LGJOCOCA@colorprim@			; `string'
PUBLIC	??_C@_08LGNJOGGB@transfer@			; `string'
PUBLIC	??_C@_0M@PKPDAFGD@colormatrix@			; `string'
PUBLIC	??_C@_09DOAGBPBM@chromaloc@			; `string'
PUBLIC	??_C@_03OIKLEJN@aud@				; `string'
PUBLIC	??_C@_06KJNINFHN@no?9aud@			; `string'
PUBLIC	??_C@_07DDNHNHBH@cqmfile@			; `string'
PUBLIC	??_C@_04EDECCOGL@seek@				; `string'
PUBLIC	??_C@_05HBFCGPPC@tiles@				; `string'
PUBLIC	??_C@_0BC@GPFMDGBM@tiles?9width?9split@		; `string'
PUBLIC	??_C@_0BD@PHGKEHDC@tiles?9height?9split@	; `string'
PUBLIC	??_C@_03FDJNKJGA@wpp@				; `string'
PUBLIC	??_C@_06PEMPMIIA@no?9wpp@			; `string'
PUBLIC	??_C@_03NPOHHFEC@owf@				; `string'
PUBLIC	??_C@_06DHJKELDJ@slices@			; `string'
PUBLIC	??_C@_07NFPADACG@threads@			; `string'
PUBLIC	??_C@_05CDPJMNMF@cpuid@				; `string'
PUBLIC	??_C@_08EHDCMILF@no?9cpuid@			; `string'
PUBLIC	??_C@_0P@PGOKPLMD@pu?9depth?9inter@		; `string'
PUBLIC	??_C@_0P@IOGMAPKE@pu?9depth?9intra@		; `string'
PUBLIC	??_C@_04NIDJFNBE@info@				; `string'
PUBLIC	??_C@_07HIJEONAN@no?9info@			; `string'
PUBLIC	??_C@_03BEPOBKLC@gop@				; `string'
PUBLIC	??_C@_06CGCIAMGP@bipred@			; `string'
PUBLIC	??_C@_09HGEJLGFG@no?9bipred@			; `string'
PUBLIC	??_C@_07MNHELNBG@bitrate@			; `string'
PUBLIC	??_C@_06OFAGBOBG@preset@			; `string'
PUBLIC	??_C@_06FFHEEO@mv?9rdo@				; `string'
PUBLIC	??_C@_09FADEMOHH@no?9mv?9rdo@			; `string'
PUBLIC	??_C@_04OGMFBKAB@psnr@				; `string'
PUBLIC	??_C@_07EGGIKKBI@no?9psnr@			; `string'
PUBLIC	??_C@_07CPCPJPKL@version@			; `string'
PUBLIC	??_C@_04PCJFHION@help@				; `string'
PUBLIC	??_C@_0L@BEBFLDMD@loop?9input@			; `string'
PUBLIC	??_C@_0O@GDODIHNK@mv?9constraint@		; `string'
PUBLIC	??_C@_04OIJGJDKO@hash@				; `string'
PUBLIC	??_C@_0BF@MFJMPGDP@cu?9split?9termination@	; `string'
PUBLIC	??_C@_06LAEHEPPF@crypto@			; `string'
PUBLIC	??_C@_03ICHNJLJF@key@				; `string'
PUBLIC	??_C@_0BF@EGFOFOM@me?9early?9termination@	; `string'
PUBLIC	??_C@_0N@IJEFOOGB@intra?9rdo?9et@		; `string'
PUBLIC	??_C@_0BA@BPGBBGGH@no?9intra?9rdo?9et@		; `string'
PUBLIC	??_C@_08PIMDPPGO@lossless@			; `string'
PUBLIC	??_C@_0M@NNPDHICH@no?9lossless@			; `string'
PUBLIC	??_C@_04IDIAAMCH@tmvp@				; `string'
PUBLIC	??_C@_07CDCNLMDO@no?9tmvp@			; `string'
PUBLIC	??_C@_09CNMMAOKA@rdoq?9skip@			; `string'
PUBLIC	??_C@_0N@CCOJMHBD@no?9rdoq?9skip@		; `string'
PUBLIC	??_C@_0P@FLCBIFAI@input?9bitdepth@		; `string'
PUBLIC	??_C@_0N@MACMGKGI@input?9format@		; `string'
PUBLIC	??_C@_0P@MLHFGKE@implicit?9rdpcm@		; `string'
PUBLIC	??_C@_0BC@OJILBNCI@no?9implicit?9rdpcm@		; `string'
PUBLIC	??_C@_03OIDJBEAH@roi@				; `string'
PUBLIC	??_C@_07LCMEECMI@erp?9aqp@			; `string'
PUBLIC	??_C@_0L@ONJBKLHK@no?9erp?9aqp@			; `string'
PUBLIC	??_C@_05KJNJLLGA@level@				; `string'
PUBLIC	??_C@_0M@MGLOGJPN@force?9level@			; `string'
PUBLIC	??_C@_09OOKJLFAD@high?9tier@			; `string'
PUBLIC	??_C@_08FPEEAHBF@me?9steps@			; `string'
PUBLIC	??_C@_0BD@NKHCCIBG@fast?9residual?9cost@	; `string'
PUBLIC	??_C@_0N@BFIGBNPD@set?9qp?9in?9cu@		; `string'
PUBLIC	??_C@_08COBIOIDI@open?9gop@			; `string'
PUBLIC	??_C@_0M@LCIGPHB@no?9open?9gop@			; `string'
PUBLIC	??_C@_03OPNODGAD@vaq@				; `string'
PUBLIC	??_C@_06EIIMFHOD@no?9vaq@			; `string'
PUBLIC	??_C@_0N@DFHCBDAC@scaling?9list@		; `string'
PUBLIC	??_C@_09NDDHJBDO@max?9merge@			; `string'
PUBLIC	??_C@_0L@CKGBKFNE@early?9skip@			; `string'
PUBLIC	??_C@_0O@HIAGGCCL@no?9early?9skip@		; `string'
PUBLIC	??_C@_0BC@NCEMMCMO@ml?9pu?9depth?9intra@	; `string'
PUBLIC	??_C@_0P@OELGANC@partial?9coding@		; `string'
PUBLIC	??_C@_0P@MOHBBPPH@zero?9coeff?9rdo@		; `string'
PUBLIC	??_C@_0BC@CLENFEHL@no?9zero?9coeff?9rdo@	; `string'
PUBLIC	??_C@_0BA@MNBIMPFK@intra?9qp?9offset@		; `string'
PUBLIC	??_C@_0N@LLEHIFIF@rc?9algorithm@		; `string'
PUBLIC	??_C@_0L@FHDAPBPN@intra?9bits@			; `string'
PUBLIC	??_C@_0O@FFHDGAC@no?9intra?9bits@		; `string'
PUBLIC	??_C@_0P@EOCPJIEH@clip?9neighbour@		; `string'
PUBLIC	??_C@_0BC@KLBDNDML@no?9clip?9neighbour@		; `string'
PUBLIC	??_C@_0BC@FCLHPMHP@input?9file?9format@		; `string'
PUBLIC	??_C@_0BC@MDLEJHHN@stats?9file?9prefix@		; `string'
PUBLIC	??_C@_0BB@KFGIMMCK@fast?9coeff?9table@		; `string'
PUBLIC	??_C@_0BA@LKPIHKKB@fastrd?9sampling@		; `string'
PUBLIC	??_C@_0BG@LLPHFMAP@fastrd?9accuracy?9check@	; `string'
PUBLIC	??_C@_0O@MBFJKMHN@fastrd?9outdir@		; `string'
msvcjmc	SEGMENT
__ED9CC025_corecrt_memcpy_s@h DB 01H
__875914C9_corecrt_wstring@h DB 01H
__731387C4_string@h DB 01H
__1850469A_corecrt_stdio_config@h DB 01H
__01D10305_corecrt_wstdio@h DB 01H
__9FF75F13_stdio@h DB 01H
__40DF0D2D_ctype@h DB 01H
__E58AAB0B_cli@c DB 01H
msvcjmc	ENDS
;	COMDAT ??_C@_0O@MBFJKMHN@fastrd?9outdir@
CONST	SEGMENT
??_C@_0O@MBFJKMHN@fastrd?9outdir@ DB 'fastrd-outdir', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LLPHFMAP@fastrd?9accuracy?9check@
CONST	SEGMENT
??_C@_0BG@LLPHFMAP@fastrd?9accuracy?9check@ DB 'fastrd-accuracy-check', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LKPIHKKB@fastrd?9sampling@
CONST	SEGMENT
??_C@_0BA@LKPIHKKB@fastrd?9sampling@ DB 'fastrd-sampling', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KFGIMMCK@fast?9coeff?9table@
CONST	SEGMENT
??_C@_0BB@KFGIMMCK@fast?9coeff?9table@ DB 'fast-coeff-table', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MDLEJHHN@stats?9file?9prefix@
CONST	SEGMENT
??_C@_0BC@MDLEJHHN@stats?9file?9prefix@ DB 'stats-file-prefix', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FCLHPMHP@input?9file?9format@
CONST	SEGMENT
??_C@_0BC@FCLHPMHP@input?9file?9format@ DB 'input-file-format', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KLBDNDML@no?9clip?9neighbour@
CONST	SEGMENT
??_C@_0BC@KLBDNDML@no?9clip?9neighbour@ DB 'no-clip-neighbour', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EOCPJIEH@clip?9neighbour@
CONST	SEGMENT
??_C@_0P@EOCPJIEH@clip?9neighbour@ DB 'clip-neighbour', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FFHDGAC@no?9intra?9bits@
CONST	SEGMENT
??_C@_0O@FFHDGAC@no?9intra?9bits@ DB 'no-intra-bits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FHDAPBPN@intra?9bits@
CONST	SEGMENT
??_C@_0L@FHDAPBPN@intra?9bits@ DB 'intra-bits', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LLEHIFIF@rc?9algorithm@
CONST	SEGMENT
??_C@_0N@LLEHIFIF@rc?9algorithm@ DB 'rc-algorithm', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MNBIMPFK@intra?9qp?9offset@
CONST	SEGMENT
??_C@_0BA@MNBIMPFK@intra?9qp?9offset@ DB 'intra-qp-offset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CLENFEHL@no?9zero?9coeff?9rdo@
CONST	SEGMENT
??_C@_0BC@CLENFEHL@no?9zero?9coeff?9rdo@ DB 'no-zero-coeff-rdo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MOHBBPPH@zero?9coeff?9rdo@
CONST	SEGMENT
??_C@_0P@MOHBBPPH@zero?9coeff?9rdo@ DB 'zero-coeff-rdo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OELGANC@partial?9coding@
CONST	SEGMENT
??_C@_0P@OELGANC@partial?9coding@ DB 'partial-coding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NCEMMCMO@ml?9pu?9depth?9intra@
CONST	SEGMENT
??_C@_0BC@NCEMMCMO@ml?9pu?9depth?9intra@ DB 'ml-pu-depth-intra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HIAGGCCL@no?9early?9skip@
CONST	SEGMENT
??_C@_0O@HIAGGCCL@no?9early?9skip@ DB 'no-early-skip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CKGBKFNE@early?9skip@
CONST	SEGMENT
??_C@_0L@CKGBKFNE@early?9skip@ DB 'early-skip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NDDHJBDO@max?9merge@
CONST	SEGMENT
??_C@_09NDDHJBDO@max?9merge@ DB 'max-merge', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DFHCBDAC@scaling?9list@
CONST	SEGMENT
??_C@_0N@DFHCBDAC@scaling?9list@ DB 'scaling-list', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06EIIMFHOD@no?9vaq@
CONST	SEGMENT
??_C@_06EIIMFHOD@no?9vaq@ DB 'no-vaq', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OPNODGAD@vaq@
CONST	SEGMENT
??_C@_03OPNODGAD@vaq@ DB 'vaq', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LCIGPHB@no?9open?9gop@
CONST	SEGMENT
??_C@_0M@LCIGPHB@no?9open?9gop@ DB 'no-open-gop', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08COBIOIDI@open?9gop@
CONST	SEGMENT
??_C@_08COBIOIDI@open?9gop@ DB 'open-gop', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BFIGBNPD@set?9qp?9in?9cu@
CONST	SEGMENT
??_C@_0N@BFIGBNPD@set?9qp?9in?9cu@ DB 'set-qp-in-cu', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NKHCCIBG@fast?9residual?9cost@
CONST	SEGMENT
??_C@_0BD@NKHCCIBG@fast?9residual?9cost@ DB 'fast-residual-cost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FPEEAHBF@me?9steps@
CONST	SEGMENT
??_C@_08FPEEAHBF@me?9steps@ DB 'me-steps', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09OOKJLFAD@high?9tier@
CONST	SEGMENT
??_C@_09OOKJLFAD@high?9tier@ DB 'high-tier', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MGLOGJPN@force?9level@
CONST	SEGMENT
??_C@_0M@MGLOGJPN@force?9level@ DB 'force-level', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05KJNJLLGA@level@
CONST	SEGMENT
??_C@_05KJNJLLGA@level@ DB 'level', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ONJBKLHK@no?9erp?9aqp@
CONST	SEGMENT
??_C@_0L@ONJBKLHK@no?9erp?9aqp@ DB 'no-erp-aqp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LCMEECMI@erp?9aqp@
CONST	SEGMENT
??_C@_07LCMEECMI@erp?9aqp@ DB 'erp-aqp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OIDJBEAH@roi@
CONST	SEGMENT
??_C@_03OIDJBEAH@roi@ DB 'roi', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OJILBNCI@no?9implicit?9rdpcm@
CONST	SEGMENT
??_C@_0BC@OJILBNCI@no?9implicit?9rdpcm@ DB 'no-implicit-rdpcm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MLHFGKE@implicit?9rdpcm@
CONST	SEGMENT
??_C@_0P@MLHFGKE@implicit?9rdpcm@ DB 'implicit-rdpcm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MACMGKGI@input?9format@
CONST	SEGMENT
??_C@_0N@MACMGKGI@input?9format@ DB 'input-format', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FLCBIFAI@input?9bitdepth@
CONST	SEGMENT
??_C@_0P@FLCBIFAI@input?9bitdepth@ DB 'input-bitdepth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CCOJMHBD@no?9rdoq?9skip@
CONST	SEGMENT
??_C@_0N@CCOJMHBD@no?9rdoq?9skip@ DB 'no-rdoq-skip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CNMMAOKA@rdoq?9skip@
CONST	SEGMENT
??_C@_09CNMMAOKA@rdoq?9skip@ DB 'rdoq-skip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CDCNLMDO@no?9tmvp@
CONST	SEGMENT
??_C@_07CDCNLMDO@no?9tmvp@ DB 'no-tmvp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IDIAAMCH@tmvp@
CONST	SEGMENT
??_C@_04IDIAAMCH@tmvp@ DB 'tmvp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NNPDHICH@no?9lossless@
CONST	SEGMENT
??_C@_0M@NNPDHICH@no?9lossless@ DB 'no-lossless', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PIMDPPGO@lossless@
CONST	SEGMENT
??_C@_08PIMDPPGO@lossless@ DB 'lossless', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BPGBBGGH@no?9intra?9rdo?9et@
CONST	SEGMENT
??_C@_0BA@BPGBBGGH@no?9intra?9rdo?9et@ DB 'no-intra-rdo-et', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IJEFOOGB@intra?9rdo?9et@
CONST	SEGMENT
??_C@_0N@IJEFOOGB@intra?9rdo?9et@ DB 'intra-rdo-et', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EGFOFOM@me?9early?9termination@
CONST	SEGMENT
??_C@_0BF@EGFOFOM@me?9early?9termination@ DB 'me-early-termination', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03ICHNJLJF@key@
CONST	SEGMENT
??_C@_03ICHNJLJF@key@ DB 'key', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06LAEHEPPF@crypto@
CONST	SEGMENT
??_C@_06LAEHEPPF@crypto@ DB 'crypto', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MFJMPGDP@cu?9split?9termination@
CONST	SEGMENT
??_C@_0BF@MFJMPGDP@cu?9split?9termination@ DB 'cu-split-termination', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04OIJGJDKO@hash@
CONST	SEGMENT
??_C@_04OIJGJDKO@hash@ DB 'hash', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GDODIHNK@mv?9constraint@
CONST	SEGMENT
??_C@_0O@GDODIHNK@mv?9constraint@ DB 'mv-constraint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BEBFLDMD@loop?9input@
CONST	SEGMENT
??_C@_0L@BEBFLDMD@loop?9input@ DB 'loop-input', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCJFHION@help@
CONST	SEGMENT
??_C@_04PCJFHION@help@ DB 'help', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPCPJPKL@version@
CONST	SEGMENT
??_C@_07CPCPJPKL@version@ DB 'version', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EGGIKKBI@no?9psnr@
CONST	SEGMENT
??_C@_07EGGIKKBI@no?9psnr@ DB 'no-psnr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OGMFBKAB@psnr@
CONST	SEGMENT
??_C@_04OGMFBKAB@psnr@ DB 'psnr', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09FADEMOHH@no?9mv?9rdo@
CONST	SEGMENT
??_C@_09FADEMOHH@no?9mv?9rdo@ DB 'no-mv-rdo', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FFHEEO@mv?9rdo@
CONST	SEGMENT
??_C@_06FFHEEO@mv?9rdo@ DB 'mv-rdo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OFAGBOBG@preset@
CONST	SEGMENT
??_C@_06OFAGBOBG@preset@ DB 'preset', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MNHELNBG@bitrate@
CONST	SEGMENT
??_C@_07MNHELNBG@bitrate@ DB 'bitrate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HGEJLGFG@no?9bipred@
CONST	SEGMENT
??_C@_09HGEJLGFG@no?9bipred@ DB 'no-bipred', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06CGCIAMGP@bipred@
CONST	SEGMENT
??_C@_06CGCIAMGP@bipred@ DB 'bipred', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03BEPOBKLC@gop@
CONST	SEGMENT
??_C@_03BEPOBKLC@gop@ DB 'gop', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07HIJEONAN@no?9info@
CONST	SEGMENT
??_C@_07HIJEONAN@no?9info@ DB 'no-info', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04NIDJFNBE@info@
CONST	SEGMENT
??_C@_04NIDJFNBE@info@ DB 'info', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IOGMAPKE@pu?9depth?9intra@
CONST	SEGMENT
??_C@_0P@IOGMAPKE@pu?9depth?9intra@ DB 'pu-depth-intra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PGOKPLMD@pu?9depth?9inter@
CONST	SEGMENT
??_C@_0P@PGOKPLMD@pu?9depth?9inter@ DB 'pu-depth-inter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EHDCMILF@no?9cpuid@
CONST	SEGMENT
??_C@_08EHDCMILF@no?9cpuid@ DB 'no-cpuid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CDPJMNMF@cpuid@
CONST	SEGMENT
??_C@_05CDPJMNMF@cpuid@ DB 'cpuid', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07NFPADACG@threads@
CONST	SEGMENT
??_C@_07NFPADACG@threads@ DB 'threads', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DHJKELDJ@slices@
CONST	SEGMENT
??_C@_06DHJKELDJ@slices@ DB 'slices', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NPOHHFEC@owf@
CONST	SEGMENT
??_C@_03NPOHHFEC@owf@ DB 'owf', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06PEMPMIIA@no?9wpp@
CONST	SEGMENT
??_C@_06PEMPMIIA@no?9wpp@ DB 'no-wpp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FDJNKJGA@wpp@
CONST	SEGMENT
??_C@_03FDJNKJGA@wpp@ DB 'wpp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PHGKEHDC@tiles?9height?9split@
CONST	SEGMENT
??_C@_0BD@PHGKEHDC@tiles?9height?9split@ DB 'tiles-height-split', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GPFMDGBM@tiles?9width?9split@
CONST	SEGMENT
??_C@_0BC@GPFMDGBM@tiles?9width?9split@ DB 'tiles-width-split', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05HBFCGPPC@tiles@
CONST	SEGMENT
??_C@_05HBFCGPPC@tiles@ DB 'tiles', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04EDECCOGL@seek@
CONST	SEGMENT
??_C@_04EDECCOGL@seek@ DB 'seek', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07DDNHNHBH@cqmfile@
CONST	SEGMENT
??_C@_07DDNHNHBH@cqmfile@ DB 'cqmfile', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KJNINFHN@no?9aud@
CONST	SEGMENT
??_C@_06KJNINFHN@no?9aud@ DB 'no-aud', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OIKLEJN@aud@
CONST	SEGMENT
??_C@_03OIKLEJN@aud@ DB 'aud', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09DOAGBPBM@chromaloc@
CONST	SEGMENT
??_C@_09DOAGBPBM@chromaloc@ DB 'chromaloc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PKPDAFGD@colormatrix@
CONST	SEGMENT
??_C@_0M@PKPDAFGD@colormatrix@ DB 'colormatrix', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LGNJOGGB@transfer@
CONST	SEGMENT
??_C@_08LGNJOGGB@transfer@ DB 'transfer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09LGJOCOCA@colorprim@
CONST	SEGMENT
??_C@_09LGJOCOCA@colorprim@ DB 'colorprim', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CCGOGOBM@range@
CONST	SEGMENT
??_C@_05CCGOGOBM@range@ DB 'range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PKCLCCAL@videoformat@
CONST	SEGMENT
??_C@_0M@PKCLCCAL@videoformat@ DB 'videoformat', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EKPNNHHH@overscan@
CONST	SEGMENT
??_C@_08EKPNNHHH@overscan@ DB 'overscan', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03PDCNJFPC@sar@
CONST	SEGMENT
??_C@_03PDCNJFPC@sar@ DB 'sar', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JEPLFBLL@source?9scan?9type@
CONST	SEGMENT
??_C@_0BB@JEPLFBLL@source?9scan?9type@ DB 'source-scan-type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05DLBDLGJF@subme@
CONST	SEGMENT
??_C@_05DLBDLGJF@subme@ DB 'subme', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FIDLOBHM@me@
CONST	SEGMENT
??_C@_02FIDLOBHM@me@ DB 'me', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GBNNMAAH@tr?9depth?9intra@
CONST	SEGMENT
??_C@_0P@GBNNMAAH@tr?9depth?9intra@ DB 'tr-depth-intra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OFJOADKK@no?9transform?9skip@
CONST	SEGMENT
??_C@_0BC@OFJOADKK@no?9transform?9skip@ DB 'no-transform-skip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KCEICG@transform?9skip@
CONST	SEGMENT
??_C@_0P@KCEICG@transform?9skip@ DB 'transform-skip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MPDNLGM@no?9full?9intra?9search@
CONST	SEGMENT
??_C@_0BF@MPDNLGM@no?9full?9intra?9search@ DB 'no-full-intra-search', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NIDONDCE@full?9intra?9search@
CONST	SEGMENT
??_C@_0BC@NIDONDCE@full?9intra?9search@ DB 'full-intra-search', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02FGFKDEHA@rd@
CONST	SEGMENT
??_C@_02FGFKDEHA@rd@ DB 'rd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06JFEDPAOA@no?9amp@
CONST	SEGMENT
??_C@_06JFEDPAOA@no?9amp@ DB 'no-amp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DCBBJBAA@amp@
CONST	SEGMENT
??_C@_03DCBBJBAA@amp@ DB 'amp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06GPFDGPPE@no?9smp@
CONST	SEGMENT
??_C@_06GPFDGPPE@no?9smp@ DB 'no-smp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MIABAOBE@smp@
CONST	SEGMENT
??_C@_03MIABAOBE@smp@ DB 'smp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@POJLEMMC@no?9signhide@
CONST	SEGMENT
??_C@_0M@POJLEMMC@no?9signhide@ DB 'no-signhide', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NLKLMLIL@signhide@
CONST	SEGMENT
??_C@_08NLKLMLIL@signhide@ DB 'signhide', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NLIJKPKK@no?9rdoq@
CONST	SEGMENT
??_C@_07NLIJKPKK@no?9rdoq@ DB 'no-rdoq', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HLCEBPLD@rdoq@
CONST	SEGMENT
??_C@_04HLCEBPLD@rdoq@ DB 'rdoq', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06KLBDJIAO@no?9sao@
CONST	SEGMENT
??_C@_06KLBDJIAO@no?9sao@ DB 'no-sao', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MEBPJOO@sao@
CONST	SEGMENT
??_C@_03MEBPJOO@sao@ DB 'sao', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@POIEBAHK@no?9deblock@
CONST	SEGMENT
??_C@_0L@POIEBAHK@no?9deblock@ DB 'no-deblock', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KBNBPJMI@deblock@
CONST	SEGMENT
??_C@_07KBNBPJMI@deblock@ DB 'deblock', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FAGKMCMB@input?9fps@
CONST	SEGMENT
??_C@_09FAGKMCMB@input?9fps@ DB 'input-fps', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JFPMGDJC@input?9res@
CONST	SEGMENT
??_C@_09JFPMGDJC@input?9res@ DB 'input-res', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OMIMLMPG@vps?9period@
CONST	SEGMENT
??_C@_0L@OMIMLMPG@vps?9period@ DB 'vps-period', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03GCDGINBO@ref@
CONST	SEGMENT
??_C@_03GCDGINBO@ref@ DB 'ref', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FBOEEHNL@period@
CONST	SEGMENT
??_C@_06FBOEEHNL@period@ DB 'period', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02HKLCFNHM@qp@
CONST	SEGMENT
??_C@_02HKLCFNHM@qp@ DB 'qp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06OLAPKHEJ@frames@
CONST	SEGMENT
??_C@_06OLAPKHEJ@frames@ DB 'frames', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LNLHEAAG@height@
CONST	SEGMENT
??_C@_06LNLHEAAG@height@ DB 'height', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IGKADHGO@width@
CONST	SEGMENT
??_C@_05IGKADHGO@width@ DB 'width', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GFCDIDHO@debug@
CONST	SEGMENT
??_C@_05GFCDIDHO@debug@ DB 'debug', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06DKIGHACF@output@
CONST	SEGMENT
??_C@_06DKIGHACF@output@ DB 'output', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DFJCHPDH@input@
CONST	SEGMENT
??_C@_05DFJCHPDH@input@ DB 'input', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_short_options DB 'i:o:d:w:h:n:q:p:r:', 00H
	ORG $+5
_long_options DD FLAT:??_C@_05DFJCHPDH@input@
	DD	01H
	DD	00H
	DD	069H
	DD	FLAT:??_C@_06DKIGHACF@output@
	DD	01H
	DD	00H
	DD	06fH
	DD	FLAT:??_C@_05GFCDIDHO@debug@
	DD	01H
	DD	00H
	DD	064H
	DD	FLAT:??_C@_05IGKADHGO@width@
	DD	01H
	DD	00H
	DD	077H
	DD	FLAT:??_C@_06LNLHEAAG@height@
	DD	01H
	DD	00H
	DD	068H
	DD	FLAT:??_C@_06OLAPKHEJ@frames@
	DD	01H
	DD	00H
	DD	06eH
	DD	FLAT:??_C@_02HKLCFNHM@qp@
	DD	01H
	DD	00H
	DD	071H
	DD	FLAT:??_C@_06FBOEEHNL@period@
	DD	01H
	DD	00H
	DD	070H
	DD	FLAT:??_C@_03GCDGINBO@ref@
	DD	01H
	DD	00H
	DD	072H
	DD	FLAT:??_C@_0L@OMIMLMPG@vps?9period@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09JFPMGDJC@input?9res@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09FAGKMCMB@input?9fps@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07KBNBPJMI@deblock@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0L@POIEBAHK@no?9deblock@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03MEBPJOO@sao@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06KLBDJIAO@no?9sao@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04HLCEBPLD@rdoq@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07NLIJKPKK@no?9rdoq@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_08NLKLMLIL@signhide@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@POJLEMMC@no?9signhide@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03MIABAOBE@smp@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06GPFDGPPE@no?9smp@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03DCBBJBAA@amp@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06JFEDPAOA@no?9amp@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_02FGFKDEHA@rd@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@NIDONDCE@full?9intra?9search@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BF@MPDNLGM@no?9full?9intra?9search@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0P@KCEICG@transform?9skip@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@OFJOADKK@no?9transform?9skip@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0P@GBNNMAAH@tr?9depth?9intra@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_02FIDLOBHM@me@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05DLBDLGJF@subme@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BB@JEPLFBLL@source?9scan?9type@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03PDCNJFPC@sar@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_08EKPNNHHH@overscan@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@PKCLCCAL@videoformat@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05CCGOGOBM@range@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09LGJOCOCA@colorprim@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_08LGNJOGGB@transfer@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@PKPDAFGD@colormatrix@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09DOAGBPBM@chromaloc@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03OIKLEJN@aud@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06KJNINFHN@no?9aud@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07DDNHNHBH@cqmfile@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04EDECCOGL@seek@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05HBFCGPPC@tiles@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@GPFMDGBM@tiles?9width?9split@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BD@PHGKEHDC@tiles?9height?9split@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03FDJNKJGA@wpp@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06PEMPMIIA@no?9wpp@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03NPOHHFEC@owf@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06DHJKELDJ@slices@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07NFPADACG@threads@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05CDPJMNMF@cpuid@
	DD	02H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_08EHDCMILF@no?9cpuid@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0P@PGOKPLMD@pu?9depth?9inter@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0P@IOGMAPKE@pu?9depth?9intra@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04NIDJFNBE@info@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07HIJEONAN@no?9info@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03BEPOBKLC@gop@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06CGCIAMGP@bipred@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09HGEJLGFG@no?9bipred@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07MNHELNBG@bitrate@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06OFAGBOBG@preset@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06FFHEEO@mv?9rdo@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09FADEMOHH@no?9mv?9rdo@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04OGMFBKAB@psnr@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07EGGIKKBI@no?9psnr@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07CPCPJPKL@version@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04PCJFHION@help@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0L@BEBFLDMD@loop?9input@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0O@GDODIHNK@mv?9constraint@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04OIJGJDKO@hash@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BF@MFJMPGDP@cu?9split?9termination@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06LAEHEPPF@crypto@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03ICHNJLJF@key@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BF@EGFOFOM@me?9early?9termination@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0N@IJEFOOGB@intra?9rdo?9et@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BA@BPGBBGGH@no?9intra?9rdo?9et@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_08PIMDPPGO@lossless@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@NNPDHICH@no?9lossless@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04IDIAAMCH@tmvp@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07CDCNLMDO@no?9tmvp@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09CNMMAOKA@rdoq?9skip@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0N@CCOJMHBD@no?9rdoq?9skip@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0P@FLCBIFAI@input?9bitdepth@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0N@MACMGKGI@input?9format@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0P@MLHFGKE@implicit?9rdpcm@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@OJILBNCI@no?9implicit?9rdpcm@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03OIDJBEAH@roi@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07LCMEECMI@erp?9aqp@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0L@ONJBKLHK@no?9erp?9aqp@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05KJNJLLGA@level@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@MGLOGJPN@force?9level@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09OOKJLFAD@high?9tier@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_08FPEEAHBF@me?9steps@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BD@NKHCCIBG@fast?9residual?9cost@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0N@BFIGBNPD@set?9qp?9in?9cu@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_08COBIOIDI@open?9gop@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@LCIGPHB@no?9open?9gop@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03OPNODGAD@vaq@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06EIIMFHOD@no?9vaq@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0N@DFHCBDAC@scaling?9list@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09NDDHJBDO@max?9merge@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0L@CKGBKFNE@early?9skip@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0O@HIAGGCCL@no?9early?9skip@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@NCEMMCMO@ml?9pu?9depth?9intra@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0P@OELGANC@partial?9coding@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0P@MOHBBPPH@zero?9coeff?9rdo@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@CLENFEHL@no?9zero?9coeff?9rdo@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BA@MNBIMPFK@intra?9qp?9offset@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0N@LLEHIFIF@rc?9algorithm@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0L@FHDAPBPN@intra?9bits@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0O@FFHDGAC@no?9intra?9bits@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0P@EOCPJIEH@clip?9neighbour@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@KLBDNDML@no?9clip?9neighbour@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@FCLHPMHP@input?9file?9format@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@MDLEJHHN@stats?9file?9prefix@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BB@KFGIMMCK@fast?9coeff?9table@
	DD	01H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BA@LKPIHKKB@fastrd?9sampling@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BG@LLPHFMAP@fastrd?9accuracy?9check@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0O@MBFJKMHN@fastrd?9outdir@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	__vsscanf_l
PUBLIC	_sscanf
PUBLIC	_cmdline_opts_parse
PUBLIC	_cmdline_opts_free
PUBLIC	_print_usage
PUBLIC	_print_version
PUBLIC	_print_help
PUBLIC	_print_frame_info
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_08MHEBOPLH@?$CFdx?$CFd?$CF?$CKs@		; `string'
PUBLIC	??_C@_04KCCKCODH@?4y4m@				; `string'
PUBLIC	??_C@_04HKEEACFK@?4yuv@				; `string'
PUBLIC	??_C@_0CO@OBCHOMBF@Input?5error?3?5More?5than?5one?5inpu@ ; `string'
PUBLIC	??_C@_0CP@JCJFLGMJ@Input?5error?3?5More?5than?5one?5outp@ ; `string'
PUBLIC	??_C@_0DF@OEJJGLKH@Input?5error?3?5More?5than?5one?5debu@ ; `string'
PUBLIC	??_C@_0BJ@ODNINGIA@invalid?5argument?3?5?$CFs?$DN?$CFs?6@ ; `string'
PUBLIC	??_C@_0CJ@HAGMBFIL@Input?5error?3?5Extra?5argument?5fou@ ; `string'
PUBLIC	??_C@_0CO@GHFOIOEE@Input?5error?3?5vps_period?5must?5be@ ; `string'
PUBLIC	??_C@_0GN@MONMHAHB@Kvazaar?5usage?3?5?9i?5and?5?9?9input?9r@ ; `string'
PUBLIC	??_C@_0CN@IPONMLFI@Kvazaar?52?41?40?6Kvazaar?5license?3?5@ ; `string'
PUBLIC	??_C@_0EEOA@OJJFLKGH@Usage?3?6kvazaar?5?9i?5?$DMinput?$DO?5?9?9inp@ ; `string'
PUBLIC	??_C@_03KCKBGKKJ@BPI@				; `string'
PUBLIC	??_C@_0DA@DINMEMCD@POC?5?$CF4d?5QP?5?$CF2d?5AVG?5QP?5?$CF?41f?5?$CI?$CFc?9@ ; `string'
PUBLIC	??_C@_0BO@MFMKFKOI@?5PSNR?5Y?5?$CF2?44f?5U?5?$CF2?44f?5V?5?$CF2?44f@ ; `string'
PUBLIC	??_C@_05GGHPIDAH@?5?$FLL0?5@			; `string'
PUBLIC	??_C@_03JDANDILB@?$CFd?5@			; `string'
PUBLIC	??_C@_06JBBBPJK@?$FN?5?$FLL1?5@			; `string'
PUBLIC	??_C@_01LBDDMOBJ@?$FN@				; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
EXTRN	__imp__calloc:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__atoi:PROC
EXTRN	_strrchr:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	__imp__strdup:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp____stdio_common_vsscanf:PROC
EXTRN	_getopt_long:PROC
EXTRN	__imp__isdigit:PROC
EXTRN	__imp__tolower:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	_optarg:DWORD
EXTRN	_optind:DWORD
EXTRN	__fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LBDDMOBJ@?$FN@
CONST	SEGMENT
??_C@_01LBDDMOBJ@?$FN@ DB ']', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06JBBBPJK@?$FN?5?$FLL1?5@
CONST	SEGMENT
??_C@_06JBBBPJK@?$FN?5?$FLL1?5@ DB '] [L1 ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03JDANDILB@?$CFd?5@
CONST	SEGMENT
??_C@_03JDANDILB@?$CFd?5@ DB '%d ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GGHPIDAH@?5?$FLL0?5@
CONST	SEGMENT
??_C@_05GGHPIDAH@?5?$FLL0?5@ DB ' [L0 ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MFMKFKOI@?5PSNR?5Y?5?$CF2?44f?5U?5?$CF2?44f?5V?5?$CF2?44f@
CONST	SEGMENT
??_C@_0BO@MFMKFKOI@?5PSNR?5Y?5?$CF2?44f?5U?5?$CF2?44f?5V?5?$CF2?44f@ DB ' '
	DB	'PSNR Y %2.4f U %2.4f V %2.4f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@DINMEMCD@POC?5?$CF4d?5QP?5?$CF2d?5AVG?5QP?5?$CF?41f?5?$CI?$CFc?9@
CONST	SEGMENT
??_C@_0DA@DINMEMCD@POC?5?$CF4d?5QP?5?$CF2d?5AVG?5QP?5?$CF?41f?5?$CI?$CFc?9@ DB 'P'
	DB	'OC %4d QP %2d AVG QP %.1f (%c-frame) %10d bits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03KCKBGKKJ@BPI@
CONST	SEGMENT
??_C@_03KCKBGKKJ@BPI@ DB 'BPI', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EEOA@OJJFLKGH@Usage?3?6kvazaar?5?9i?5?$DMinput?$DO?5?9?9inp@
CONST	SEGMENT
??_C@_0EEOA@OJJFLKGH@Usage?3?6kvazaar?5?9i?5?$DMinput?$DO?5?9?9inp@ DB 'U'
	DB	'sage:', 0aH, 'kvazaar -i <input> --input-res <width>x<height>'
	DB	' -o <output>', 0aH, 0aH, 'Required:', 0aH, '  -i, --input <fi'
	DB	'lename>     : Input file', 0aH, '      --input-res <res>     '
	DB	' : Input resolution [auto]', 0aH, '                          '
	DB	'         - auto: Detect from file name.', 0aH, '             '
	DB	'                      - <int>x<int>: width times height', 0aH
	DB	'  -o, --output <filename>    : Output file', 0aH, 0aH, 'Prese'
	DB	'ts:', 0aH, '      --preset <preset>      : Set options to a p'
	DB	'reset [medium]', 0aH, '                                   - u'
	DB	'ltrafast, superfast, veryfast, faster,', 0aH, '              '
	DB	'                       fast, medium, slow, slower, veryslow', 0aH
	DB	'                                     placebo', 0aH, 0aH, 'Inp'
	DB	'ut:', 0aH, '  -n, --frames <integer>     : Number of frames t'
	DB	'o code [all]', 0aH, '      --seek <integer>       : First fra'
	DB	'me to code [0]', 0aH, '      --input-fps <num>[/<denom>] : Fr'
	DB	'ame rate of the input video [25]', 0aH, '      --source-scan-'
	DB	'type <string> : Source scan type [progressive]', 0aH, '      '
	DB	'                             - progressive: Progressive scan', 0aH
	DB	'                                   - tff: Top field first', 0aH
	DB	'                                   - bff: Bottom field first', 0aH
	DB	'      --input-format <string> : P420 or P400 [P420]', 0aH, ' '
	DB	'     --input-bitdepth <int> : 8-16 [8]', 0aH, '      --loop-i'
	DB	'nput           : Re-read input file forever.', 0aH, '      --'
	DB	'input-file-format <string> : Input file format [auto]', 0aH, ' '
	DB	'                                   - auto: Check the file end'
	DB	'ing for format', 0aH, '                                    - '
	DB	'y4m (skips frame headers)', 0aH, '                           '
	DB	'         - yuv', 0aH, 0aH, 'Options:', 0aH, '      --help    '
	DB	'             : Print this help message and exit.', 0aH, '    '
	DB	'  --version              : Print version information and exit'
	DB	'.', 0aH, '      --(no-)aud             : Use access unit deli'
	DB	'miters. [disabled]', 0aH, '      --debug <filename>     : Out'
	DB	'put internal reconstruction.', 0aH, '      --(no-)cpuid      '
	DB	'     : Enable runtime CPU optimizations. [enabled]', 0aH, '  '
	DB	'    --hash <string>        : Decoded picture hash [checksum]', 0aH
	DB	'                                   - none: 0 bytes', 0aH, '  '
	DB	'                                 - checksum: 18 bytes', 0aH, ' '
	DB	'                                  - md5: 56 bytes', 0aH, '   '
	DB	'   --(no-)psnr            : Calculate PSNR for frames. [enabl'
	DB	'ed]', 0aH, '      --(no-)info            : Add encoder info S'
	DB	'EI. [enabled]', 0aH, '      --crypto <string>      : Selectiv'
	DB	'e encryption. Crypto support must be', 0aH, '                '
	DB	'               enabled at compile-time. Can be ''on'' or ''of'
	DB	'f'' or', 0aH, '                               a list of featu'
	DB	'res separated with a ''+''. [off]', 0aH, '                   '
	DB	'                - on: Enable all encryption features.', 0aH, ' '
	DB	'                                  - off: Disable selective en'
	DB	'cryption.', 0aH, '                                   - mvs: M'
	DB	'otion vector magnitudes.', 0aH, '                            '
	DB	'       - mv_signs: Motion vector signs.', 0aH, '             '
	DB	'                      - trans_coeffs: Coefficient magnitudes.'
	DB	0aH, '                                   - trans_coeff_signs: '
	DB	'Coefficient signs.', 0aH, '                                  '
	DB	' - intra_pred_modes: Intra prediction modes.', 0aH, '      --'
	DB	'key <string>         : Encryption key [16,213,27,56,255,127,2'
	DB	'42,112,', 0aH, '                                             '
	DB	'  97,126,197,204,25,59,38,30]', 0aH, '      --stats-file-pref'
	DB	'ix    : A prefix used for stats files that include', 0aH, '  '
	DB	'                             bits, lambda, distortion, and qp'
	DB	' for each ctu.', 0aH, '                               These a'
	DB	're meant for debugging and are not', 0aH, '                  '
	DB	'             written unless the prefix is defined.', 0aH, 0aH
	DB	'Video structure:', 0aH, '  -q, --qp <integer>         : Quant'
	DB	'ization parameter [22]', 0aH, '  -p, --period <integer>     :'
	DB	' Period of intra pictures [64]', 0aH, '                      '
	DB	'             - 0: Only first picture is intra.', 0aH, '      '
	DB	'                             - 1: All pictures are intra.', 0aH
	DB	'                                   - N: Every Nth picture is '
	DB	'intra.', 0aH, '      --vps-period <integer> : How often the v'
	DB	'ideo parameter set is re-sent [0]', 0aH, '                   '
	DB	'                - 0: Only send VPS with the first frame.', 0aH
	DB	'                                   - N: Send VPS with every N'
	DB	'th intra frame.', 0aH, '  -r, --ref <integer>        : Number'
	DB	' of reference frames, in range 1..15 [4]', 0aH, '      --gop '
	DB	'<string>         : GOP structure [lp-g4d3t1]', 0aH, '        '
	DB	'                           -  0: Disabled', 0aH, '           '
	DB	'                        -  8: B-frame pyramid of length 8', 0aH
	DB	'                                   - 16: B-frame pyramid of l'
	DB	'ength 16', 0aH, '                                   - lp-<str'
	DB	'ing>: Low-delay P/B-frame GOP', 0aH, '                       '
	DB	'              (e.g. lp-g8d4t2, see README)', 0aH, '      --in'
	DB	'tra-qp-offset <int>: QP offset for intra frames [-51..51] [au'
	DB	'to]', 0aH, '                                   - N: Set QP of'
	DB	'fset to N.', 0aH, '                                   - auto:'
	DB	' Select offset automatically based', 0aH, '                  '
	DB	'                   on GOP length.', 0aH, '      --(no-)open-g'
	DB	'op        : Use open GOP configuration. [enabled]', 0aH, '   '
	DB	'   --cqmfile <filename>   : Read custom quantization matrices'
	DB	' from a file.', 0aH, '      --scaling-list <string>: Set scal'
	DB	'ing list mode. [off]', 0aH, '                                '
	DB	'   - off: Disable scaling lists.', 0aH, '                    '
	DB	'               - custom: use custom list (with --cqmfile).', 0aH
	DB	'                                   - default: Use default lis'
	DB	'ts.', 0aH, '      --bitrate <integer>    : Target bitrate [0]'
	DB	0aH, '                                   - 0: Disable rate con'
	DB	'trol.', 0aH, '                                   - N: Target '
	DB	'N bits per second.', 0aH, '      --rc-algorithm <string>: Sel'
	DB	'ect used rc-algorithm. [lambda]', 0aH, '                     '
	DB	'              - lambda: rate control from:', 0aH, '          '
	DB	'                           DOI: 10.1109/TIP.2014.2336550 ', 0aH
	DB	'                                   - oba: DOI: 10.1109/TCSVT.'
	DB	'2016.2589878', 0aH, '      --(no-)intra-bits      : Use Hadam'
	DB	'ard cost based allocation for intra', 0aH, '                 '
	DB	'              frames. Default on for gop 8 and off for lp-gop'
	DB	0aH, '      --(no-)clip-neighbour  : On oba based rate control'
	DB	' whether to clip ', 0aH, '                               lamb'
	DB	'da values to same frame''s ctus or previous''.', 0aH, '      '
	DB	'                         Default on for RA GOPS and disabled '
	DB	'for LP.', 0aH, '      --(no-)lossless        : Use lossless c'
	DB	'oding. [disabled]', 0aH, '      --mv-constraint <string> : Co'
	DB	'nstrain movement vectors. [none]', 0aH, '                    '
	DB	'               - none: No constraint', 0aH, '                '
	DB	'                   - frametile: Constrain within the tile.', 0aH
	DB	'                                   - frametilemargin: Constra'
	DB	'in even more.', 0aH, '      --roi <filename>       : Use a de'
	DB	'lta QP map for region of interest.', 0aH, '                  '
	DB	'             Reads an array of delta QP values from a text', 0aH
	DB	'                               file. The file format is: widt'
	DB	'h and height of', 0aH, '                               the QP'
	DB	' delta map followed by width*height delta', 0aH, '           '
	DB	'                    QP values in raster order. The map can be'
	DB	' of any', 0aH, '                               size and will '
	DB	'be scaled to the video size.', 0aH, '      --set-qp-in-cu    '
	DB	'     : Set QP at CU level keeping pic_init_qp_minus26.', 0aH, ' '
	DB	'                              in PPS and slice_qp_delta in sl'
	DB	'ize header zero.', 0aH, '      --(no-)erp-aqp         : Use a'
	DB	'daptive QP for 360 degree video with', 0aH, '                '
	DB	'               equirectangular projection. [disabled]', 0aH, ' '
	DB	'     --level <number>       : Use the given HEVC level in the'
	DB	' output and give', 0aH, '                               an er'
	DB	'ror if level limits are exceeded. [6.2]', 0aH, '             '
	DB	'                      - 1, 2, 2.1, 3, 3.1, 4, 4.1, 5, 5.1, 5.'
	DB	'2, 6,', 0aH, '                                     6.1, 6.2', 0aH
	DB	'      --force-level <number> : Same as --level but warnings i'
	DB	'nstead of errors.', 0aH, '      --high-tier            : Used'
	DB	' with --level. Use high tier bitrate limits', 0aH, '         '
	DB	'                      instead of the main tier limits during '
	DB	'encoding.', 0aH, '                               High tier re'
	DB	'quires level 4 or higher.', 0aH, '      --(no-)vaq <integer> '
	DB	'  : Enable variance adaptive quantization with given', 0aH, ' '
	DB	'                              strength, in range 1..20. Recom'
	DB	'mended: 5.', 0aH, '                               [disabled]', 0aH
	DB	0aH, 'Compression tools:', 0aH, '      --(no-)deblock <beta:tc'
	DB	'> : Deblocking filter. [0:0]', 0aH, '                        '
	DB	'           - beta: Between -6 and 6', 0aH, '                 '
	DB	'                  - tc: Between -6 and 6', 0aH, '      --sao '
	DB	'<string>         : Sample Adaptive Offset [full]', 0aH, '    '
	DB	'                               - off: SAO disabled', 0aH, '  '
	DB	'                                 - band: Band offset only', 0aH
	DB	'                                   - edge: Edge offset only', 0aH
	DB	'                                   - full: Full SAO', 0aH, ' '
	DB	'     --(no-)rdoq            : Rate-distortion optimized quant'
	DB	'ization [enabled]', 0aH, '      --(no-)rdoq-skip       : Skip'
	DB	' RDOQ for 4x4 blocks. [disabled]', 0aH, '      --(no-)signhid'
	DB	'e        : Sign hiding [disabled]', 0aH, '      --(no-)smp   '
	DB	'          : Symmetric motion partition [disabled]', 0aH, '   '
	DB	'   --(no-)amp             : Asymmetric motion partition [disa'
	DB	'bled]', 0aH, '      --rd <integer>         : Intra mode searc'
	DB	'h complexity [0]', 0aH, '                                   -'
	DB	' 0: Skip intra if inter is good enough.', 0aH, '             '
	DB	'                      - 1: Rough intra mode search with SATD.'
	DB	0aH, '                                   - 2: Refine intra mod'
	DB	'e search with SSE.', 0aH, '                                  '
	DB	' - 3: Try all intra modes and enable intra', 0aH, '          '
	DB	'                              chroma mode search.', 0aH, '   '
	DB	'   --(no-)mv-rdo          : Rate-distortion optimized motion '
	DB	'vector costs', 0aH, '                               [disabled'
	DB	']', 0aH, '      --(no-)zero-coeff-rdo  : If a CU is set inter'
	DB	', check if forcing zero', 0aH, '                             '
	DB	'  residual improves the RD cost. [enabled]', 0aH, '      --(n'
	DB	'o-)full-intra-search : Try all intra modes during rough searc'
	DB	'h.', 0aH, '                               [disabled]', 0aH, ' '
	DB	'     --(no-)transform-skip  : Try transform skip [disabled]', 0aH
	DB	'      --me <string>          : Integer motion estimation algo'
	DB	'rithm [hexbs]', 0aH, '                                   - he'
	DB	'xbs: Hexagon Based Search', 0aH, '                           '
	DB	'        - tz:    Test Zone Search', 0aH, '                   '
	DB	'                - full:  Full Search', 0aH, '                '
	DB	'                   - full8, full16, full32, full64', 0aH, '  '
	DB	'                                 - dia:   Diamond Search', 0aH
	DB	'      --me-steps <integer>   : Motion estimation search step '
	DB	'limit. Only', 0aH, '                               affects '''
	DB	'hexbs'' and ''dia''. [-1]', 0aH, '      --subme <integer>    '
	DB	'  : Fractional pixel motion estimation level [4]', 0aH, '    '
	DB	'                               - 0: Integer motion estimation'
	DB	' only', 0aH, '                                   - 1: + 1/2-p'
	DB	'ixel horizontal and vertical', 0aH, '                        '
	DB	'           - 2: + 1/2-pixel diagonal', 0aH, '                '
	DB	'                   - 3: + 1/4-pixel horizontal and vertical', 0aH
	DB	'                                   - 4: + 1/4-pixel diagonal', 0aH
	DB	'      --pu-depth-inter <int>-<int> : Inter prediction units s'
	DB	'izes [0-3]', 0aH, '                                   - 0, 1,'
	DB	' 2, 3: from 64x64 to 8x8', 0aH, '                            '
	DB	'       - Accepts a list of values separated by '',''', 0aH, ' '
	DB	'                                    for setting separate dept'
	DB	'hs per GOP layer', 0aH, '                                    '
	DB	' (values can be omitted to use the first', 0aH, '            '
	DB	'                         value for the respective layer).', 0aH
	DB	'      --pu-depth-intra <int>-<int> : Intra prediction units s'
	DB	'izes [1-4]', 0aH, '                                   - 0, 1,'
	DB	' 2, 3, 4: from 64x64 to 4x4', 0aH, '                         '
	DB	'          - Accepts a list of values separated by '',''', 0aH
	DB	'                                     for setting separate dep'
	DB	'ths per GOP layer', 0aH, '                                   '
	DB	'  (values can be omitted to use the first', 0aH, '           '
	DB	'                          value for the respective layer).', 0aH
	DB	'      --ml-pu-depth-intra    : Predict the pu-depth-intra usi'
	DB	'ng machine', 0aH, '                                learning t'
	DB	'rees, overrides the', 0aH, '                                -'
	DB	'-pu-depth-intra parameter. [disabled]', 0aH, '      --tr-dept'
	DB	'h-intra <int> : Transform split depth for intra blocks [0]', 0aH
	DB	'      --(no-)bipred          : Bi-prediction [disabled]', 0aH
	DB	'      --cu-split-termination <string> : CU split search termi'
	DB	'nation [zero]', 0aH, '                                   - of'
	DB	'f: Don''t terminate early.', 0aH, '                          '
	DB	'         - zero: Terminate when residual is zero.', 0aH, '   '
	DB	'   --me-early-termination <string> : Motion estimation termin'
	DB	'ation [on]', 0aH, '                                   - off: '
	DB	'Don''t terminate early.', 0aH, '                             '
	DB	'      - on: Terminate early.', 0aH, '                        '
	DB	'           - sensitive: Terminate even earlier.', 0aH, '     '
	DB	' --fast-residual-cost <int> : Skip CABAC cost for residual co'
	DB	'efficients', 0aH, '                                   when QP'
	DB	' is below the limit. [0]', 0aH, '      --fast-coeff-table <st'
	DB	'ring> : Read custom weights for residual', 0aH, '            '
	DB	'                        coefficients from a file instead of u'
	DB	'sing', 0aH, '                                    defaults [de'
	DB	'fault]', 0aH, '      --fast-rd-sampling : Enable learning dat'
	DB	'a sampling for fast coefficient', 0aH, '                     '
	DB	'      table generation', 0aH, '      --fastrd-accuracy-check '
	DB	': Evaluate the accuracy of fast coefficient', 0aH, '         '
	DB	'                       prediction', 0aH, '      --fastrd-outd'
	DB	'ir : Directory to which to output sampled data or accuracy', 0aH
	DB	'                        data, into <fastrd-outdir>/0.txt to 5'
	DB	'0.txt, one file', 0aH, '                        for each QP t'
	DB	'hat blocks were estimated on', 0aH, '      --(no-)intra-rdo-e'
	DB	't    : Check intra modes in rdo stage only until', 0aH, '    '
	DB	'                           a zero coefficient CU is found. [d'
	DB	'isabled]', 0aH, '      --(no-)early-skip      : Try to find s'
	DB	'kip cu from merge candidates.', 0aH, '                       '
	DB	'        Perform no further search if skip is found.', 0aH, ' '
	DB	'                              For rd=0..1: Try the first cand'
	DB	'idate.', 0aH, '                               For rd=2.. : Tr'
	DB	'y the best candidate based', 0aH, '                          '
	DB	'                  on luma satd cost. [enabled]', 0aH, '      '
	DB	'--max-merge <integer>  : Maximum number of merge candidates, '
	DB	'1..5 [5]', 0aH, '      --(no-)implicit-rdpcm  : Implicit resi'
	DB	'dual DPCM. Currently only supported', 0aH, '                 '
	DB	'              with lossless coding. [disabled]', 0aH, '      '
	DB	'--(no-)tmvp            : Temporal motion vector prediction [e'
	DB	'nabled]', 0aH, 0aH, 'Parallel processing:', 0aH, '      --thr'
	DB	'eads <integer>    : Number of threads to use [auto]', 0aH, ' '
	DB	'                                  - 0: Process everything wit'
	DB	'h main thread.', 0aH, '                                   - N'
	DB	': Use N threads for encoding.', 0aH, '                       '
	DB	'            - auto: Select automatically.', 0aH, '      --owf'
	DB	' <integer>        : Frame-level parallelism [auto]', 0aH, '  '
	DB	'                                 - N: Process N+1 frames at a'
	DB	' time.', 0aH, '                                   - auto: Sel'
	DB	'ect automatically.', 0aH, '      --(no-)wpp             : Wav'
	DB	'efront parallel processing. [enabled]', 0aH, '               '
	DB	'                Enabling tiles automatically disables WPP.', 0aH
	DB	'                               To enable WPP with tiles, re-e'
	DB	'nable it after', 0aH, '                               enablin'
	DB	'g tiles. Enabling wpp with tiles is,', 0aH, '                '
	DB	'               however, an experimental feature since it is', 0aH
	DB	'                               not supported in any HEVC prof'
	DB	'ile.', 0aH, '      --tiles <int>x<int>    : Split picture int'
	DB	'o width x height uniform tiles.', 0aH, '      --tiles-width-s'
	DB	'plit <string>|u<int> :', 0aH, '                              '
	DB	'     - <string>: A comma-separated list of tile', 0aH, '     '
	DB	'                                          column pixel coordi'
	DB	'nates.', 0aH, '                                   - u<int>: N'
	DB	'umber of tile columns of uniform', 0aH, '                    '
	DB	'                         width.', 0aH, '      --tiles-height-'
	DB	'split <string>|u<int> :', 0aH, '                             '
	DB	'      - <string>: A comma-separated list of tile row', 0aH, ' '
	DB	'                                              column pixel co'
	DB	'ordinates.', 0aH, '                                   - u<int'
	DB	'>: Number of tile rows of uniform', 0aH, '                   '
	DB	'                          height.', 0aH, '      --slices <str'
	DB	'ing>      : Control how slices are used.', 0aH, '            '
	DB	'                       - tiles: Put tiles in independent slic'
	DB	'es.', 0aH, '                                   - wpp: Put row'
	DB	's in dependent slices.', 0aH, '                              '
	DB	'     - tiles+wpp: Do both.', 0aH, '      --partial-coding <x-'
	DB	'offset>!<y-offset>!<slice-width>!<slice-height>', 0aH, '     '
	DB	'                        : Encode partial frame.', 0aH, '     '
	DB	'                          Parts must be merged to form a vali'
	DB	'd bitstream.', 0aH, '                               X and Y a'
	DB	're CTU offsets.', 0aH, '                               Slice '
	DB	'width and height must be divisible by CTU', 0aH, '           '
	DB	'                    in pixels unless it is the last CTU row/c'
	DB	'olumn.', 0aH, '                               This parameter '
	DB	'is used by kvaShare.', 0aH, 0aH, 'Video Usability Information'
	DB	':', 0aH, '      --sar <width:height>   : Specify sample aspec'
	DB	't ratio', 0aH, '      --overscan <string>    : Specify crop o'
	DB	'verscan setting [undef]', 0aH, '                             '
	DB	'      - undef, show, crop', 0aH, '      --videoformat <string'
	DB	'> : Specify video format [undef]', 0aH, '                    '
	DB	'               - undef, component, pal, ntsc, secam, mac', 0aH
	DB	'      --range <string>       : Specify color range [tv]', 0aH
	DB	'                                   - tv, pc', 0aH, '      --c'
	DB	'olorprim <string>   : Specify color primaries [undef]', 0aH, ' '
	DB	'                                  - undef, bt709, bt470m, bt4'
	DB	'70bg,', 0aH, '                                     smpte170m,'
	DB	' smpte240m, film, bt2020', 0aH, '      --transfer <string>   '
	DB	' : Specify transfer characteristics [undef]', 0aH, '         '
	DB	'                          - undef, bt709, bt470m, bt470bg,', 0aH
	DB	'                                     smpte170m, smpte240m, li'
	DB	'near, log100,', 0aH, '                                     lo'
	DB	'g316, iec61966-2-4, bt1361e,', 0aH, '                        '
	DB	'             iec61966-2-1, bt2020-10, bt2020-12', 0aH, '     '
	DB	' --colormatrix <string> : Specify color matrix setting [undef'
	DB	']', 0aH, '                                   - undef, bt709, '
	DB	'fcc, bt470bg, smpte170m,', 0aH, '                            '
	DB	'         smpte240m, GBR, YCgCo, bt2020nc, bt2020c', 0aH, '   '
	DB	'   --chromaloc <integer>  : Specify chroma sample location (0'
	DB	' to 5) [0]', 0aH, 0aH, 'Deprecated parameters: (might be remo'
	DB	'ved at some point)', 0aH, '  -w, --width <integer>       : Us'
	DB	'e --input-res.', 0aH, '  -h, --height <integer>      : Use --'
	DB	'input-res.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@IPONMLFI@Kvazaar?52?41?40?6Kvazaar?5license?3?5@
CONST	SEGMENT
??_C@_0CN@IPONMLFI@Kvazaar?52?41?40?6Kvazaar?5license?3?5@ DB 'Kvazaar 2.'
	DB	'1.0', 0aH, 'Kvazaar license: 3-clause BSD', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GN@MONMHAHB@Kvazaar?5usage?3?5?9i?5and?5?9?9input?9r@
CONST	SEGMENT
??_C@_0GN@MONMHAHB@Kvazaar?5usage?3?5?9i?5and?5?9?9input?9r@ DB 'Kvazaar '
	DB	'usage: -i and --input-res to set input, -o to set output', 0aH
	DB	'               --help for more information', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GHFOIOEE@Input?5error?3?5vps_period?5must?5be@
CONST	SEGMENT
??_C@_0CO@GHFOIOEE@Input?5error?3?5vps_period?5must?5be@ DB 'Input error:'
	DB	' vps_period must be non-negative', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HAGMBFIL@Input?5error?3?5Extra?5argument?5fou@
CONST	SEGMENT
??_C@_0CJ@HAGMBFIL@Input?5error?3?5Extra?5argument?5fou@ DB 'Input error:'
	DB	' Extra argument found: "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ODNINGIA@invalid?5argument?3?5?$CFs?$DN?$CFs?6@
CONST	SEGMENT
??_C@_0BJ@ODNINGIA@invalid?5argument?3?5?$CFs?$DN?$CFs?6@ DB 'invalid arg'
	DB	'ument: %s=%s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@OEJJGLKH@Input?5error?3?5More?5than?5one?5debu@
CONST	SEGMENT
??_C@_0DF@OEJJGLKH@Input?5error?3?5More?5than?5one?5debu@ DB 'Input error'
	DB	': More than one debug output file given.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@JCJFLGMJ@Input?5error?3?5More?5than?5one?5outp@
CONST	SEGMENT
??_C@_0CP@JCJFLGMJ@Input?5error?3?5More?5than?5one?5outp@ DB 'Input error'
	DB	': More than one output file given.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@OBCHOMBF@Input?5error?3?5More?5than?5one?5inpu@
CONST	SEGMENT
??_C@_0CO@OBCHOMBF@Input?5error?3?5More?5than?5one?5inpu@ DB 'Input error'
	DB	': More than one input file given.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKEEACFK@?4yuv@
CONST	SEGMENT
??_C@_04HKEEACFK@?4yuv@ DB '.yuv', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KCCKCODH@?4y4m@
CONST	SEGMENT
??_C@_04KCCKCODH@?4y4m@ DB '.y4m', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08MHEBOPLH@?$CFdx?$CFd?$CF?$CKs@
CONST	SEGMENT
??_C@_08MHEBOPLH@?$CFdx?$CFd?$CF?$CKs@ DB '%dx%d%*s', 00H ; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\cli.c
;	COMDAT _detect_file_format
_TEXT	SEGMENT
_i$1 = -32						; size = 4
_ending_lower_case$ = -20				; size = 4
_sub_str$ = -8						; size = 4
_file_name$ = 8						; size = 4
_detect_file_format PROC				; COMDAT

; 211  : static int detect_file_format(const char *file_name) {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E58AAB0B_cli@c
	call	@__CheckForDebuggerJustMyCode@4

; 212  :   if (!file_name) return 0;

	cmp	DWORD PTR _file_name$[ebp], 0
	jne	SHORT $LN5@detect_fil
	xor	eax, eax
	jmp	$LN1@detect_fil
$LN5@detect_fil:

; 213  : 
; 214  :   // Find the last dot in the file name.
; 215  :   // If delim is not found, return 0
; 216  :   char* sub_str = (char*)strrchr(file_name, '.');

	push	46					; 0000002eH
	mov	eax, DWORD PTR _file_name$[ebp]
	push	eax
	call	_strrchr
	add	esp, 8
	mov	DWORD PTR _sub_str$[ebp], eax

; 217  :   if (!sub_str) return 0;

	cmp	DWORD PTR _sub_str$[ebp], 0
	jne	SHORT $LN6@detect_fil
	xor	eax, eax
	jmp	$LN1@detect_fil
$LN6@detect_fil:

; 218  :   if (strlen(sub_str) != 4) return 0;

	mov	eax, DWORD PTR _sub_str$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 4
	je	SHORT $LN7@detect_fil
	xor	eax, eax
	jmp	$LN1@detect_fil
$LN7@detect_fil:

; 219  :   char ending_lower_case[4];
; 220  :   for(int i = 0; i < 4; i++){

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@detect_fil
$LN2@detect_fil:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@detect_fil:
	cmp	DWORD PTR _i$1[ebp], 4
	jge	SHORT $LN3@detect_fil

; 221  :     ending_lower_case[i] = tolower(sub_str[i]);

	mov	eax, DWORD PTR _sub_str$[ebp]
	add	eax, DWORD PTR _i$1[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	esi, esp
	push	ecx
	call	DWORD PTR __imp__tolower
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _i$1[ebp]
	mov	BYTE PTR _ending_lower_case$[ebp+edx], al

; 222  :   }

	jmp	SHORT $LN2@detect_fil
$LN3@detect_fil:

; 223  : 
; 224  :   // KVZ_FILE_FORMAT
; 225  :   if (strncmp(ending_lower_case, ".y4m", 4) == 0) return 1;

	mov	esi, esp
	push	4
	push	OFFSET ??_C@_04KCCKCODH@?4y4m@
	lea	eax, DWORD PTR _ending_lower_case$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN8@detect_fil
	mov	eax, 1
	jmp	SHORT $LN1@detect_fil
	jmp	SHORT $LN9@detect_fil
$LN8@detect_fil:

; 226  :   else if (strncmp(ending_lower_case, ".yuv", 4) == 0) return 2;

	mov	esi, esp
	push	4
	push	OFFSET ??_C@_04HKEEACFK@?4yuv@
	lea	eax, DWORD PTR _ending_lower_case$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN9@detect_fil
	mov	eax, 2
	jmp	SHORT $LN1@detect_fil
$LN9@detect_fil:

; 227  : 
; 228  :   return 0;

	xor	eax, eax
$LN1@detect_fil:

; 229  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@detect_fil
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@detect_fil:
	DD	1
	DD	$LN13@detect_fil
$LN13@detect_fil:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@detect_fil
$LN12@detect_fil:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	0
_detect_file_format ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\cli.c
;	COMDAT _select_input_res_auto
_TEXT	SEGMENT
tv89 = -220						; size = 4
tv86 = -220						; size = 4
tv78 = -220						; size = 4
_success$ = -20						; size = 4
_sub_str$ = -8						; size = 4
_file_name$ = 8						; size = 4
_out_width$ = 12					; size = 4
_out_height$ = 16					; size = 4
_select_input_res_auto PROC				; COMDAT

; 182  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E58AAB0B_cli@c
	call	@__CheckForDebuggerJustMyCode@4

; 183  :   if (!file_name) return 0;

	cmp	DWORD PTR _file_name$[ebp], 0
	jne	SHORT $LN8@select_inp
	xor	eax, eax
	jmp	$LN1@select_inp
$LN8@select_inp:

; 184  : 
; 185  :   // Find the last delimiter char ( / or \ ). Hope the other kind is not used in the name.
; 186  :   // If delim is not found, set pointer to the beginning.
; 187  :   unsigned char* sub_str = (unsigned char*)MAX(strrchr(file_name, '/'), strrchr(file_name, '\\'));

	push	47					; 0000002fH
	mov	eax, DWORD PTR _file_name$[ebp]
	push	eax
	call	_strrchr
	add	esp, 8
	mov	esi, eax
	push	92					; 0000005cH
	mov	ecx, DWORD PTR _file_name$[ebp]
	push	ecx
	call	_strrchr
	add	esp, 8
	cmp	esi, eax
	jbe	SHORT $LN13@select_inp
	push	47					; 0000002fH
	mov	edx, DWORD PTR _file_name$[ebp]
	push	edx
	call	_strrchr
	add	esp, 8
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN14@select_inp
$LN13@select_inp:
	push	92					; 0000005cH
	mov	eax, DWORD PTR _file_name$[ebp]
	push	eax
	call	_strrchr
	add	esp, 8
	mov	DWORD PTR tv78[ebp], eax
$LN14@select_inp:
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR _sub_str$[ebp], ecx

; 188  :   if (!sub_str) sub_str = (unsigned char*)file_name;

	cmp	DWORD PTR _sub_str$[ebp], 0
	jne	SHORT $LN9@select_inp
	mov	eax, DWORD PTR _file_name$[ebp]
	mov	DWORD PTR _sub_str$[ebp], eax
$LN9@select_inp:

; 189  : 
; 190  :   int success = 0;

	mov	DWORD PTR _success$[ebp], 0
$LN4@select_inp:

; 191  :   // Try if the substring starts with "<int>x<int>" without either of them being 0
; 192  :   do {
; 193  :     success = (sscanf((char*)sub_str, "%dx%d%*s", out_width, out_height) == 2);

	mov	eax, DWORD PTR _out_height$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out_width$[ebp]
	push	ecx
	push	OFFSET ??_C@_08MHEBOPLH@?$CFdx?$CFd?$CF?$CKs@
	mov	edx, DWORD PTR _sub_str$[ebp]
	push	edx
	call	_sscanf
	add	esp, 16					; 00000010H
	cmp	eax, 2
	jne	SHORT $LN15@select_inp
	mov	DWORD PTR tv86[ebp], 1
	jmp	SHORT $LN16@select_inp
$LN15@select_inp:
	mov	DWORD PTR tv86[ebp], 0
$LN16@select_inp:
	mov	eax, DWORD PTR tv86[ebp]
	mov	DWORD PTR _success$[ebp], eax

; 194  :     success &= (*out_width > 0 && *out_height > 0);

	mov	eax, DWORD PTR _out_width$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN17@select_inp
	mov	ecx, DWORD PTR _out_height$[ebp]
	cmp	DWORD PTR [ecx], 0
	jle	SHORT $LN17@select_inp
	mov	DWORD PTR tv89[ebp], 1
	jmp	SHORT $LN18@select_inp
$LN17@select_inp:
	mov	DWORD PTR tv89[ebp], 0
$LN18@select_inp:
	mov	edx, DWORD PTR _success$[ebp]
	and	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR _success$[ebp], edx
$LN7@select_inp:

; 195  :     // Move to the next char until a digit is found or the string ends
; 196  :     do{
; 197  :       ++sub_str;

	mov	eax, DWORD PTR _sub_str$[ebp]
	add	eax, 1
	mov	DWORD PTR _sub_str$[ebp], eax

; 198  :     } while (*sub_str != 0 && !isdigit(*sub_str));

	mov	eax, DWORD PTR _sub_str$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@select_inp
	mov	eax, DWORD PTR _sub_str$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	esi, esp
	push	ecx
	call	DWORD PTR __imp__isdigit
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN7@select_inp
$LN2@select_inp:

; 199  :     // Continue until "<int>x<int>" is found or the string ends
; 200  :   } while (*sub_str != 0 && !success);

	mov	eax, DWORD PTR _sub_str$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@select_inp
	cmp	DWORD PTR _success$[ebp], 0
	je	$LN4@select_inp
$LN3@select_inp:

; 201  : 
; 202  :   return success;

	mov	eax, DWORD PTR _success$[ebp]
$LN1@select_inp:

; 203  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_select_input_res_auto ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\cli.c
;	COMDAT _print_frame_info
_TEXT	SEGMENT
_j$1 = -20						; size = 4
_j$2 = -8						; size = 4
_info$ = 8						; size = 4
_frame_psnr$ = 12					; size = 4
_bytes$ = 16						; size = 4
_print_psnr$ = 20					; size = 1
_avg_qp$ = 24						; size = 8
_print_frame_info PROC					; COMDAT

; 686  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E58AAB0B_cli@c
	call	@__CheckForDebuggerJustMyCode@4

; 687  :   fprintf(stderr, "POC %4d QP %2d AVG QP %.1f (%c-frame) %10d bits",

	mov	eax, DWORD PTR _bytes$[ebp]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	cdq
	mov	ecx, 3
	idiv	ecx
	movsx	edx, BYTE PTR ??_C@_03KCKBGKKJ@BPI@[edx]
	push	edx
	sub	esp, 8
	movsd	xmm0, QWORD PTR _avg_qp$[ebp]
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET ??_C@_0DA@DINMEMCD@POC?5?$CF4d?5QP?5?$CF2d?5AVG?5QP?5?$CF?41f?5?$CI?$CFc?9@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 32					; 00000020H

; 688  :           info->poc,
; 689  :           info->qp,
; 690  :           avg_qp,
; 691  :           "BPI"[info->slice_type % 3],
; 692  :           bytes << 3);
; 693  : 
; 694  :   if (print_psnr) {

	movzx	eax, BYTE PTR _print_psnr$[ebp]
	test	eax, eax
	je	SHORT $LN8@print_fram

; 695  :     fprintf(stderr, " PSNR Y %2.4f U %2.4f V %2.4f",

	mov	eax, 8
	shl	eax, 1
	mov	ecx, DWORD PTR _frame_psnr$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [ecx+eax]
	movsd	QWORD PTR [esp], xmm0
	mov	edx, 8
	shl	edx, 0
	mov	eax, DWORD PTR _frame_psnr$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [eax+edx]
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, 8
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _frame_psnr$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [eax+edx]
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BO@MFMKFKOI@?5PSNR?5Y?5?$CF2?44f?5U?5?$CF2?44f?5V?5?$CF2?44f@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 32					; 00000020H
$LN8@print_fram:

; 696  :             frame_psnr[0], frame_psnr[1], frame_psnr[2]);
; 697  :   }
; 698  : 
; 699  :   if (info->slice_type != KVZ_SLICE_I) {

	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax+12], 2
	je	$LN9@print_fram

; 700  :     // Print reference picture lists
; 701  :     fprintf(stderr, " [L0 ");

	push	OFFSET ??_C@_05GGHPIDAH@?5?$FLL0?5@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 8

; 702  :     for (int j = 0; j < info->ref_list_len[0]; j++) {

	mov	DWORD PTR _j$2[ebp], 0
	jmp	SHORT $LN4@print_fram
$LN2@print_fram:
	mov	eax, DWORD PTR _j$2[ebp]
	add	eax, 1
	mov	DWORD PTR _j$2[ebp], eax
$LN4@print_fram:
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR _j$2[ebp]
	cmp	eax, DWORD PTR [edx+ecx+144]
	jge	SHORT $LN3@print_fram

; 703  :       fprintf(stderr, "%d ", info->ref_list[0][j]);

	mov	eax, 64					; 00000040H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _info$[ebp]
	lea	eax, DWORD PTR [edx+ecx+16]
	mov	ecx, DWORD PTR _j$2[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	push	edx
	push	OFFSET ??_C@_03JDANDILB@?$CFd?5@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 704  :     }

	jmp	SHORT $LN2@print_fram
$LN3@print_fram:

; 705  :     fprintf(stderr, "] [L1 ");

	push	OFFSET ??_C@_06JBBBPJK@?$FN?5?$FLL1?5@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 8

; 706  :     for (int j = 0; j < info->ref_list_len[1]; j++) {

	mov	DWORD PTR _j$1[ebp], 0
	jmp	SHORT $LN7@print_fram
$LN5@print_fram:
	mov	eax, DWORD PTR _j$1[ebp]
	add	eax, 1
	mov	DWORD PTR _j$1[ebp], eax
$LN7@print_fram:
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR _j$1[ebp]
	cmp	edx, DWORD PTR [ecx+eax+144]
	jge	SHORT $LN6@print_fram

; 707  :       fprintf(stderr, "%d ", info->ref_list[1][j]);

	mov	eax, 64					; 00000040H
	shl	eax, 0
	mov	ecx, DWORD PTR _info$[ebp]
	lea	edx, DWORD PTR [ecx+eax+16]
	mov	eax, DWORD PTR _j$1[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	push	OFFSET ??_C@_03JDANDILB@?$CFd?5@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 708  :     }

	jmp	SHORT $LN5@print_fram
$LN6@print_fram:

; 709  :     fprintf(stderr, "]");

	push	OFFSET ??_C@_01LBDDMOBJ@?$FN@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 8
$LN9@print_fram:

; 710  :   }
; 711  : 
; 712  :   fprintf(stderr, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 8

; 713  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_print_frame_info ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\cli.c
;	COMDAT _print_help
_TEXT	SEGMENT
_print_help PROC					; COMDAT

; 391  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E58AAB0B_cli@c
	call	@__CheckForDebuggerJustMyCode@4

; 392  :   fprintf(stdout,

	push	OFFSET ??_C@_0EEOA@OJJFLKGH@Usage?3?6kvazaar?5?9i?5?$DMinput?$DO?5?9?9inp@
	mov	esi, esp
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 8

; 393  :     "Usage:\n"
; 394  :     "kvazaar -i <input> --input-res <width>x<height> -o <output>\n"
; 395  :     "\n"
; 396  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 397  :     "Required:\n"
; 398  :     "  -i, --input <filename>     : Input file\n"
; 399  :     "      --input-res <res>      : Input resolution [auto]\n"
; 400  :     "                                   - auto: Detect from file name.\n"
; 401  :     "                                   - <int>x<int>: width times height\n"
; 402  :     "  -o, --output <filename>    : Output file\n"
; 403  :     "\n"
; 404  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 405  :     "Presets:\n"
; 406  :     "      --preset <preset>      : Set options to a preset [medium]\n"
; 407  :     "                                   - ultrafast, superfast, veryfast, faster,\n"
; 408  :     "                                     fast, medium, slow, slower, veryslow\n"
; 409  :     "                                     placebo\n"
; 410  :     "\n"
; 411  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 412  :     "Input:\n"
; 413  :     "  -n, --frames <integer>     : Number of frames to code [all]\n"
; 414  :     "      --seek <integer>       : First frame to code [0]\n"
; 415  :     "      --input-fps <num>[/<denom>] : Frame rate of the input video [25]\n"
; 416  :     "      --source-scan-type <string> : Source scan type [progressive]\n"
; 417  :     "                                   - progressive: Progressive scan\n"
; 418  :     "                                   - tff: Top field first\n"
; 419  :     "                                   - bff: Bottom field first\n"
; 420  :     "      --input-format <string> : P420 or P400 [P420]\n"
; 421  :     "      --input-bitdepth <int> : 8-16 [8]\n"
; 422  :     "      --loop-input           : Re-read input file forever.\n"
; 423  :     "      --input-file-format <string> : Input file format [auto]\n"
; 424  :     "                                    - auto: Check the file ending for format\n"
; 425  :     "                                    - y4m (skips frame headers)\n"
; 426  :     "                                    - yuv\n"
; 427  :     "\n"
; 428  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 429  :     "Options:\n"
; 430  :     "      --help                 : Print this help message and exit.\n"
; 431  :     "      --version              : Print version information and exit.\n"
; 432  :     "      --(no-)aud             : Use access unit delimiters. [disabled]\n"
; 433  :     "      --debug <filename>     : Output internal reconstruction.\n"
; 434  :     "      --(no-)cpuid           : Enable runtime CPU optimizations. [enabled]\n"
; 435  :     "      --hash <string>        : Decoded picture hash [checksum]\n"
; 436  :     "                                   - none: 0 bytes\n"
; 437  :     "                                   - checksum: 18 bytes\n"
; 438  :     "                                   - md5: 56 bytes\n"
; 439  :     "      --(no-)psnr            : Calculate PSNR for frames. [enabled]\n"
; 440  :     "      --(no-)info            : Add encoder info SEI. [enabled]\n"
; 441  :     "      --crypto <string>      : Selective encryption. Crypto support must be\n"
; 442  :     "                               enabled at compile-time. Can be 'on' or 'off' or\n"
; 443  :     "                               a list of features separated with a '+'. [off]\n"
; 444  :     "                                   - on: Enable all encryption features.\n"
; 445  :     "                                   - off: Disable selective encryption.\n"
; 446  :     "                                   - mvs: Motion vector magnitudes.\n"
; 447  :     "                                   - mv_signs: Motion vector signs.\n"
; 448  :     "                                   - trans_coeffs: Coefficient magnitudes.\n"
; 449  :     "                                   - trans_coeff_signs: Coefficient signs.\n"
; 450  :     "                                   - intra_pred_modes: Intra prediction modes.\n"
; 451  :     "      --key <string>         : Encryption key [16,213,27,56,255,127,242,112,\n"
; 452  :     "                                               97,126,197,204,25,59,38,30]\n"
; 453  :     "      --stats-file-prefix    : A prefix used for stats files that include\n"
; 454  :     "                               bits, lambda, distortion, and qp for each ctu.\n"
; 455  :     "                               These are meant for debugging and are not\n"
; 456  :     "                               written unless the prefix is defined.\n"
; 457  :     "\n"
; 458  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 459  :     "Video structure:\n"
; 460  :     "  -q, --qp <integer>         : Quantization parameter [22]\n"
; 461  :     "  -p, --period <integer>     : Period of intra pictures [64]\n"
; 462  :     "                                   - 0: Only first picture is intra.\n"
; 463  :     "                                   - 1: All pictures are intra.\n"
; 464  :     "                                   - N: Every Nth picture is intra.\n"
; 465  :     "      --vps-period <integer> : How often the video parameter set is re-sent [0]\n"
; 466  :     "                                   - 0: Only send VPS with the first frame.\n"
; 467  :     "                                   - N: Send VPS with every Nth intra frame.\n"
; 468  :     "  -r, --ref <integer>        : Number of reference frames, in range 1..15 [4]\n"
; 469  :     "      --gop <string>         : GOP structure [lp-g4d3t1]\n"
; 470  :     "                                   -  0: Disabled\n"
; 471  :     "                                   -  8: B-frame pyramid of length 8\n"
; 472  :     "                                   - 16: B-frame pyramid of length 16\n"
; 473  :     "                                   - lp-<string>: Low-delay P/B-frame GOP\n"
; 474  :     "                                     (e.g. lp-g8d4t2, see README)\n"
; 475  :     "      --intra-qp-offset <int>: QP offset for intra frames [-51..51] [auto]\n"
; 476  :     "                                   - N: Set QP offset to N.\n"
; 477  :     "                                   - auto: Select offset automatically based\n"
; 478  :     "                                     on GOP length.\n"
; 479  :     "      --(no-)open-gop        : Use open GOP configuration. [enabled]\n"
; 480  :     "      --cqmfile <filename>   : Read custom quantization matrices from a file.\n"
; 481  :     "      --scaling-list <string>: Set scaling list mode. [off]\n"
; 482  :     "                                   - off: Disable scaling lists.\n"
; 483  :     "                                   - custom: use custom list (with --cqmfile).\n"
; 484  :     "                                   - default: Use default lists.\n"
; 485  :     "      --bitrate <integer>    : Target bitrate [0]\n"
; 486  :     "                                   - 0: Disable rate control.\n"
; 487  :     "                                   - N: Target N bits per second.\n"
; 488  :     "      --rc-algorithm <string>: Select used rc-algorithm. [lambda]\n"
; 489  :     "                                   - lambda: rate control from:\n"
; 490  :     "                                     DOI: 10.1109/TIP.2014.2336550 \n"
; 491  :     "                                   - oba: DOI: 10.1109/TCSVT.2016.2589878\n"
; 492  :     "      --(no-)intra-bits      : Use Hadamard cost based allocation for intra\n"
; 493  :     "                               frames. Default on for gop 8 and off for lp-gop\n"
; 494  :     "      --(no-)clip-neighbour  : On oba based rate control whether to clip \n"
; 495  :     "                               lambda values to same frame's ctus or previous'.\n"
; 496  :     "                               Default on for RA GOPS and disabled for LP.\n"
; 497  :     "      --(no-)lossless        : Use lossless coding. [disabled]\n"
; 498  :     "      --mv-constraint <string> : Constrain movement vectors. [none]\n"
; 499  :     "                                   - none: No constraint\n"
; 500  :     "                                   - frametile: Constrain within the tile.\n"
; 501  :     "                                   - frametilemargin: Constrain even more.\n"
; 502  :     "      --roi <filename>       : Use a delta QP map for region of interest.\n"
; 503  :     "                               Reads an array of delta QP values from a text\n"
; 504  :     "                               file. The file format is: width and height of\n"
; 505  :     "                               the QP delta map followed by width*height delta\n"
; 506  :     "                               QP values in raster order. The map can be of any\n"
; 507  :     "                               size and will be scaled to the video size.\n"
; 508  :     "      --set-qp-in-cu         : Set QP at CU level keeping pic_init_qp_minus26.\n"
; 509  :     "                               in PPS and slice_qp_delta in slize header zero.\n"
; 510  :     "      --(no-)erp-aqp         : Use adaptive QP for 360 degree video with\n"
; 511  :     "                               equirectangular projection. [disabled]\n"
; 512  :     "      --level <number>       : Use the given HEVC level in the output and give\n"
; 513  :     "                               an error if level limits are exceeded. [6.2]\n"
; 514  :     "                                   - 1, 2, 2.1, 3, 3.1, 4, 4.1, 5, 5.1, 5.2, 6,\n"
; 515  :     "                                     6.1, 6.2\n"
; 516  :     "      --force-level <number> : Same as --level but warnings instead of errors.\n"
; 517  :     "      --high-tier            : Used with --level. Use high tier bitrate limits\n"
; 518  :     "                               instead of the main tier limits during encoding.\n"
; 519  :     "                               High tier requires level 4 or higher.\n"
; 520  :     "      --(no-)vaq <integer>   : Enable variance adaptive quantization with given\n"
; 521  :     "                               strength, in range 1..20. Recommended: 5.\n"
; 522  :     "                               [disabled]\n"
; 523  :     "\n"
; 524  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 525  :     "Compression tools:\n"
; 526  :     "      --(no-)deblock <beta:tc> : Deblocking filter. [0:0]\n"
; 527  :     "                                   - beta: Between -6 and 6\n"
; 528  :     "                                   - tc: Between -6 and 6\n"
; 529  :     "      --sao <string>         : Sample Adaptive Offset [full]\n"
; 530  :     "                                   - off: SAO disabled\n"
; 531  :     "                                   - band: Band offset only\n"
; 532  :     "                                   - edge: Edge offset only\n"
; 533  :     "                                   - full: Full SAO\n"
; 534  :     "      --(no-)rdoq            : Rate-distortion optimized quantization [enabled]\n"
; 535  :     "      --(no-)rdoq-skip       : Skip RDOQ for 4x4 blocks. [disabled]\n"
; 536  :     "      --(no-)signhide        : Sign hiding [disabled]\n"
; 537  :     "      --(no-)smp             : Symmetric motion partition [disabled]\n"
; 538  :     "      --(no-)amp             : Asymmetric motion partition [disabled]\n"
; 539  :     "      --rd <integer>         : Intra mode search complexity [0]\n"
; 540  :     "                                   - 0: Skip intra if inter is good enough.\n"
; 541  :     "                                   - 1: Rough intra mode search with SATD.\n"
; 542  :     "                                   - 2: Refine intra mode search with SSE.\n"
; 543  :     "                                   - 3: Try all intra modes and enable intra\n"
; 544  :     "                                        chroma mode search.\n"
; 545  :     "      --(no-)mv-rdo          : Rate-distortion optimized motion vector costs\n"
; 546  :     "                               [disabled]\n"
; 547  :     "      --(no-)zero-coeff-rdo  : If a CU is set inter, check if forcing zero\n"
; 548  :     "                               residual improves the RD cost. [enabled]\n"
; 549  :     "      --(no-)full-intra-search : Try all intra modes during rough search.\n"
; 550  :     "                               [disabled]\n"
; 551  :     "      --(no-)transform-skip  : Try transform skip [disabled]\n"
; 552  :     "      --me <string>          : Integer motion estimation algorithm [hexbs]\n"
; 553  :     "                                   - hexbs: Hexagon Based Search\n"
; 554  :     "                                   - tz:    Test Zone Search\n"
; 555  :     "                                   - full:  Full Search\n"
; 556  :     "                                   - full8, full16, full32, full64\n"
; 557  :     "                                   - dia:   Diamond Search\n"
; 558  :     "      --me-steps <integer>   : Motion estimation search step limit. Only\n"
; 559  :     "                               affects 'hexbs' and 'dia'. [-1]\n"
; 560  :     "      --subme <integer>      : Fractional pixel motion estimation level [4]\n"
; 561  :     "                                   - 0: Integer motion estimation only\n"
; 562  :     "                                   - 1: + 1/2-pixel horizontal and vertical\n"
; 563  :     "                                   - 2: + 1/2-pixel diagonal\n"
; 564  :     "                                   - 3: + 1/4-pixel horizontal and vertical\n"
; 565  :     "                                   - 4: + 1/4-pixel diagonal\n"
; 566  :     "      --pu-depth-inter <int>-<int> : Inter prediction units sizes [0-3]\n"
; 567  :     "                                   - 0, 1, 2, 3: from 64x64 to 8x8\n"
; 568  :     "                                   - Accepts a list of values separated by ','\n"
; 569  :     "                                     for setting separate depths per GOP layer\n"
; 570  :     "                                     (values can be omitted to use the first\n"
; 571  :     "                                     value for the respective layer).\n"
; 572  :     "      --pu-depth-intra <int>-<int> : Intra prediction units sizes [1-4]\n"
; 573  :     "                                   - 0, 1, 2, 3, 4: from 64x64 to 4x4\n"
; 574  :     "                                   - Accepts a list of values separated by ','\n"
; 575  :     "                                     for setting separate depths per GOP layer\n"
; 576  :     "                                     (values can be omitted to use the first\n"
; 577  :     "                                     value for the respective layer).\n"
; 578  :     "      --ml-pu-depth-intra    : Predict the pu-depth-intra using machine\n"
; 579  :     "                                learning trees, overrides the\n"
; 580  :     "                                --pu-depth-intra parameter. [disabled]\n"
; 581  :     "      --tr-depth-intra <int> : Transform split depth for intra blocks [0]\n"
; 582  :     "      --(no-)bipred          : Bi-prediction [disabled]\n"
; 583  :     "      --cu-split-termination <string> : CU split search termination [zero]\n"
; 584  :     "                                   - off: Don't terminate early.\n"
; 585  :     "                                   - zero: Terminate when residual is zero.\n"
; 586  :     "      --me-early-termination <string> : Motion estimation termination [on]\n"
; 587  :     "                                   - off: Don't terminate early.\n"
; 588  :     "                                   - on: Terminate early.\n"
; 589  :     "                                   - sensitive: Terminate even earlier.\n"
; 590  :     "      --fast-residual-cost <int> : Skip CABAC cost for residual coefficients\n"
; 591  :     "                                   when QP is below the limit. [0]\n"
; 592  :     "      --fast-coeff-table <string> : Read custom weights for residual\n"
; 593  :     "                                    coefficients from a file instead of using\n"
; 594  :     "                                    defaults [default]\n"
; 595  :     "      --fast-rd-sampling : Enable learning data sampling for fast coefficient\n"
; 596  :     "                           table generation\n"
; 597  :     "      --fastrd-accuracy-check : Evaluate the accuracy of fast coefficient\n"
; 598  :     "                                prediction\n"
; 599  :     "      --fastrd-outdir : Directory to which to output sampled data or accuracy\n"
; 600  :     "                        data, into <fastrd-outdir>/0.txt to 50.txt, one file\n"
; 601  :     "                        for each QP that blocks were estimated on\n"
; 602  :     "      --(no-)intra-rdo-et    : Check intra modes in rdo stage only until\n"
; 603  :     "                               a zero coefficient CU is found. [disabled]\n"
; 604  :     "      --(no-)early-skip      : Try to find skip cu from merge candidates.\n"
; 605  :     "                               Perform no further search if skip is found.\n"
; 606  :     "                               For rd=0..1: Try the first candidate.\n"
; 607  :     "                               For rd=2.. : Try the best candidate based\n"
; 608  :     "                                            on luma satd cost. [enabled]\n"
; 609  :     "      --max-merge <integer>  : Maximum number of merge candidates, 1..5 [5]\n"
; 610  :     "      --(no-)implicit-rdpcm  : Implicit residual DPCM. Currently only supported\n"
; 611  :     "                               with lossless coding. [disabled]\n"
; 612  :     "      --(no-)tmvp            : Temporal motion vector prediction [enabled]\n"
; 613  :     "\n"
; 614  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 615  :     "Parallel processing:\n"
; 616  :     "      --threads <integer>    : Number of threads to use [auto]\n"
; 617  :     "                                   - 0: Process everything with main thread.\n"
; 618  :     "                                   - N: Use N threads for encoding.\n"
; 619  :     "                                   - auto: Select automatically.\n"
; 620  :     "      --owf <integer>        : Frame-level parallelism [auto]\n"
; 621  :     "                                   - N: Process N+1 frames at a time.\n"
; 622  :     "                                   - auto: Select automatically.\n"
; 623  :     "      --(no-)wpp             : Wavefront parallel processing. [enabled]\n"
; 624  :     "                               Enabling tiles automatically disables WPP.\n"
; 625  :     "                               To enable WPP with tiles, re-enable it after\n"
; 626  :     "                               enabling tiles. Enabling wpp with tiles is,\n"
; 627  :     "                               however, an experimental feature since it is\n"
; 628  :     "                               not supported in any HEVC profile.\n"
; 629  :     "      --tiles <int>x<int>    : Split picture into width x height uniform tiles.\n"
; 630  :     "      --tiles-width-split <string>|u<int> :\n"
; 631  :     "                                   - <string>: A comma-separated list of tile\n"
; 632  :     "                                               column pixel coordinates.\n"
; 633  :     "                                   - u<int>: Number of tile columns of uniform\n"
; 634  :     "                                             width.\n"
; 635  :     "      --tiles-height-split <string>|u<int> :\n"
; 636  :     "                                   - <string>: A comma-separated list of tile row\n"
; 637  :     "                                               column pixel coordinates.\n"
; 638  :     "                                   - u<int>: Number of tile rows of uniform\n"
; 639  :     "                                             height.\n"
; 640  :     "      --slices <string>      : Control how slices are used.\n"
; 641  :     "                                   - tiles: Put tiles in independent slices.\n"
; 642  :     "                                   - wpp: Put rows in dependent slices.\n"
; 643  :     "                                   - tiles+wpp: Do both.\n"
; 644  :     "      --partial-coding <x-offset>!<y-offset>!<slice-width>!<slice-height>\n"
; 645  :     "                             : Encode partial frame.\n" 
; 646  :     "                               Parts must be merged to form a valid bitstream.\n"
; 647  :     "                               X and Y are CTU offsets.\n"
; 648  :     "                               Slice width and height must be divisible by CTU\n"
; 649  :     "                               in pixels unless it is the last CTU row/column.\n"
; 650  :     "                               This parameter is used by kvaShare.\n"
; 651  :     "\n"
; 652  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 653  :     "Video Usability Information:\n"
; 654  :     "      --sar <width:height>   : Specify sample aspect ratio\n"
; 655  :     "      --overscan <string>    : Specify crop overscan setting [undef]\n"
; 656  :     "                                   - undef, show, crop\n"
; 657  :     "      --videoformat <string> : Specify video format [undef]\n"
; 658  :     "                                   - undef, component, pal, ntsc, secam, mac\n"
; 659  :     "      --range <string>       : Specify color range [tv]\n"
; 660  :     "                                   - tv, pc\n"
; 661  :     "      --colorprim <string>   : Specify color primaries [undef]\n"
; 662  :     "                                   - undef, bt709, bt470m, bt470bg,\n"
; 663  :     "                                     smpte170m, smpte240m, film, bt2020\n"
; 664  :     "      --transfer <string>    : Specify transfer characteristics [undef]\n"
; 665  :     "                                   - undef, bt709, bt470m, bt470bg,\n"
; 666  :     "                                     smpte170m, smpte240m, linear, log100,\n"
; 667  :     "                                     log316, iec61966-2-4, bt1361e,\n"
; 668  :     "                                     iec61966-2-1, bt2020-10, bt2020-12\n"
; 669  :     "      --colormatrix <string> : Specify color matrix setting [undef]\n"
; 670  :     "                                   - undef, bt709, fcc, bt470bg, smpte170m,\n"
; 671  :     "                                     smpte240m, GBR, YCgCo, bt2020nc, bt2020c\n"
; 672  :     "      --chromaloc <integer>  : Specify chroma sample location (0 to 5) [0]\n"
; 673  :     "\n"
; 674  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 675  :     "Deprecated parameters: (might be removed at some point)\n"
; 676  :     "  -w, --width <integer>       : Use --input-res.\n"
; 677  :     "  -h, --height <integer>      : Use --input-res.\n");
; 678  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_print_help ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\cli.c
;	COMDAT _print_version
_TEXT	SEGMENT
_print_version PROC					; COMDAT

; 383  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E58AAB0B_cli@c
	call	@__CheckForDebuggerJustMyCode@4

; 384  :   fprintf(stdout,

	push	OFFSET ??_C@_0CN@IPONMLFI@Kvazaar?52?41?40?6Kvazaar?5license?3?5@
	mov	esi, esp
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 8

; 385  :     "Kvazaar " VERSION_STRING "\n"
; 386  :     "Kvazaar license: 3-clause BSD\n");
; 387  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_print_version ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\cli.c
;	COMDAT _print_usage
_TEXT	SEGMENT
_print_usage PROC					; COMDAT

; 375  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E58AAB0B_cli@c
	call	@__CheckForDebuggerJustMyCode@4

; 376  :   fprintf(stdout,

	push	OFFSET ??_C@_0GN@MONMHAHB@Kvazaar?5usage?3?5?9i?5and?5?9?9input?9r@
	mov	esi, esp
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 8

; 377  :     "Kvazaar usage: -i and --input-res to set input, -o to set output\n"
; 378  :     "               --help for more information\n");
; 379  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_print_usage ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\cli.c
;	COMDAT _cmdline_opts_free
_TEXT	SEGMENT
_api$ = 8						; size = 4
_opts$ = 12						; size = 4
_cmdline_opts_free PROC					; COMDAT

; 362  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E58AAB0B_cli@c
	call	@__CheckForDebuggerJustMyCode@4

; 363  :   if (opts) {

	cmp	DWORD PTR _opts$[ebp], 0
	je	$LN2@cmdline_op

; 364  :     FREE_POINTER(opts->input);

	mov	esi, esp
	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _opts$[ebp]
	mov	DWORD PTR [eax], 0

; 365  :     FREE_POINTER(opts->output);

	mov	esi, esp
	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _opts$[ebp]
	mov	DWORD PTR [eax+4], 0

; 366  :     FREE_POINTER(opts->debug);

	mov	esi, esp
	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _opts$[ebp]
	mov	DWORD PTR [eax+8], 0

; 367  :     api->config_destroy(opts->config);

	mov	esi, esp
	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _api$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 368  :     opts->config = NULL;

	mov	eax, DWORD PTR _opts$[ebp]
	mov	DWORD PTR [eax+20], 0
$LN2@cmdline_op:

; 369  :   }
; 370  :   FREE_POINTER(opts);

	mov	esi, esp
	mov	eax, DWORD PTR _opts$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _opts$[ebp], 0

; 371  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_cmdline_opts_free ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\cli.c
;	COMDAT _cmdline_opts_parse
_TEXT	SEGMENT
_name$1 = -68						; size = 4
_i$2 = -56						; size = 4
_c$3 = -44						; size = 4
_long_options_index$4 = -32				; size = 4
_opts$ = -20						; size = 4
_ok$ = -8						; size = 4
_api$ = 8						; size = 4
_argc$ = 12						; size = 4
_argv$ = 16						; size = 4
_cmdline_opts_parse PROC				; COMDAT

; 238  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E58AAB0B_cli@c
	call	@__CheckForDebuggerJustMyCode@4

; 239  :   int ok = 1;

	mov	DWORD PTR _ok$[ebp], 1

; 240  :   cmdline_opts_t *opts = calloc(1, sizeof(cmdline_opts_t));

	mov	esi, esp
	push	28					; 0000001cH
	push	1
	call	DWORD PTR __imp__calloc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _opts$[ebp], eax

; 241  :   if (!opts) {

	cmp	DWORD PTR _opts$[ebp], 0
	jne	SHORT $LN8@cmdline_op

; 242  :     ok = 0;

	mov	DWORD PTR _ok$[ebp], 0

; 243  :     goto done;

	jmp	$done$47
$LN8@cmdline_op:

; 244  :   }
; 245  : 
; 246  :   opts->config = api->config_alloc();

	mov	eax, DWORD PTR _api$[ebp]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _opts$[ebp]
	mov	DWORD PTR [edx+20], eax

; 247  :   if (!opts->config || !api->config_init(opts->config)) {

	mov	eax, DWORD PTR _opts$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN10@cmdline_op
	mov	esi, esp
	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _api$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN9@cmdline_op
$LN10@cmdline_op:

; 248  :     ok = 0;

	mov	DWORD PTR _ok$[ebp], 0

; 249  :     goto done;

	jmp	$done$47
$LN9@cmdline_op:

; 250  :   }
; 251  : 
; 252  :   // Parse command line options
; 253  :   for (optind = 0;;) {

	mov	DWORD PTR _optind, 0
$LN4@cmdline_op:

; 254  :     int long_options_index = -1;

	mov	DWORD PTR _long_options_index$4[ebp], -1

; 255  : 
; 256  :     int c = getopt_long(argc, argv, short_options, long_options, &long_options_index);

	lea	eax, DWORD PTR _long_options_index$4[ebp]
	push	eax
	push	OFFSET _long_options
	push	OFFSET _short_options
	mov	ecx, DWORD PTR _argv$[ebp]
	push	ecx
	mov	edx, DWORD PTR _argc$[ebp]
	push	edx
	call	_getopt_long
	add	esp, 20					; 00000014H
	mov	DWORD PTR _c$3[ebp], eax

; 257  :     if (c == -1)

	cmp	DWORD PTR _c$3[ebp], -1
	jne	SHORT $LN11@cmdline_op

; 258  :       break;

	jmp	$LN3@cmdline_op
$LN11@cmdline_op:

; 259  : 
; 260  :     if (long_options_index < 0) {

	cmp	DWORD PTR _long_options_index$4[ebp], 0
	jge	SHORT $LN12@cmdline_op

; 261  :       int i;
; 262  :       for (i = 0; long_options[i].name; i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN7@cmdline_op
$LN5@cmdline_op:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN7@cmdline_op:
	mov	eax, DWORD PTR _i$2[ebp]
	shl	eax, 4
	cmp	DWORD PTR _long_options[eax], 0
	je	SHORT $LN6@cmdline_op

; 263  :         if (long_options[i].val == c) {

	mov	eax, DWORD PTR _i$2[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _long_options[eax+12]
	cmp	ecx, DWORD PTR _c$3[ebp]
	jne	SHORT $LN13@cmdline_op

; 264  :             long_options_index = i;

	mov	eax, DWORD PTR _i$2[ebp]
	mov	DWORD PTR _long_options_index$4[ebp], eax

; 265  :             break;

	jmp	SHORT $LN6@cmdline_op
$LN13@cmdline_op:

; 266  :         }

	jmp	SHORT $LN5@cmdline_op
$LN6@cmdline_op:

; 267  :       if (long_options_index < 0) {

	cmp	DWORD PTR _long_options_index$4[ebp], 0
	jge	SHORT $LN12@cmdline_op

; 268  :         // getopt_long already printed an error message
; 269  :         ok = 0;

	mov	DWORD PTR _ok$[ebp], 0

; 270  :         goto done;

	jmp	$done$47
$LN12@cmdline_op:

; 271  :       }
; 272  :     }
; 273  : 
; 274  :     const char* name = long_options[long_options_index].name;

	mov	eax, DWORD PTR _long_options_index$4[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _long_options[eax]
	mov	DWORD PTR _name$1[ebp], ecx

; 275  :     if (!strcmp(name, "input")) {

	push	OFFSET ??_C@_05DFJCHPDH@input@
	mov	eax, DWORD PTR _name$1[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN15@cmdline_op

; 276  :       if (opts->input) {

	mov	eax, DWORD PTR _opts$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN17@cmdline_op

; 277  :         fprintf(stderr, "Input error: More than one input file given.\n");

	push	OFFSET ??_C@_0CO@OBCHOMBF@Input?5error?3?5More?5than?5one?5inpu@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 8

; 278  :         ok = 0;

	mov	DWORD PTR _ok$[ebp], 0

; 279  :         goto done;

	jmp	$done$47
$LN17@cmdline_op:

; 280  :       }
; 281  :       opts->input = strdup(optarg);

	mov	esi, esp
	mov	eax, DWORD PTR _optarg
	push	eax
	call	DWORD PTR __imp__strdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _opts$[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	$LN16@cmdline_op
$LN15@cmdline_op:

; 282  :     } else if (!strcmp(name, "output")) {

	push	OFFSET ??_C@_06DKIGHACF@output@
	mov	eax, DWORD PTR _name$1[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN18@cmdline_op

; 283  :       if (opts->output) {

	mov	eax, DWORD PTR _opts$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN20@cmdline_op

; 284  :         fprintf(stderr, "Input error: More than one output file given.\n");

	push	OFFSET ??_C@_0CP@JCJFLGMJ@Input?5error?3?5More?5than?5one?5outp@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 8

; 285  :         ok = 0;

	mov	DWORD PTR _ok$[ebp], 0

; 286  :         goto done;

	jmp	$done$47
$LN20@cmdline_op:

; 287  :       }
; 288  :       opts->output = strdup(optarg);

	mov	esi, esp
	mov	eax, DWORD PTR _optarg
	push	eax
	call	DWORD PTR __imp__strdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _opts$[ebp]
	mov	DWORD PTR [ecx+4], eax
	jmp	$LN16@cmdline_op
$LN18@cmdline_op:

; 289  :     } else if (!strcmp(name, "debug")) {

	push	OFFSET ??_C@_05GFCDIDHO@debug@
	mov	eax, DWORD PTR _name$1[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN21@cmdline_op

; 290  :       if (opts->debug) {

	mov	eax, DWORD PTR _opts$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN23@cmdline_op

; 291  :         fprintf(stderr, "Input error: More than one debug output file given.\n");

	push	OFFSET ??_C@_0DF@OEJJGLKH@Input?5error?3?5More?5than?5one?5debu@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 8

; 292  :         ok = 0;

	mov	DWORD PTR _ok$[ebp], 0

; 293  :         goto done;

	jmp	$done$47
$LN23@cmdline_op:

; 294  :       }
; 295  :       opts->debug = strdup(optarg);

	mov	esi, esp
	mov	eax, DWORD PTR _optarg
	push	eax
	call	DWORD PTR __imp__strdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _opts$[ebp]
	mov	DWORD PTR [ecx+8], eax
	jmp	$LN16@cmdline_op
$LN21@cmdline_op:

; 296  :     } else if (!strcmp(name, "seek")) {

	push	OFFSET ??_C@_04EDECCOGL@seek@
	mov	eax, DWORD PTR _name$1[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN24@cmdline_op

; 297  :       opts->seek = atoi(optarg);

	mov	esi, esp
	mov	eax, DWORD PTR _optarg
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _opts$[ebp]
	mov	DWORD PTR [ecx+12], eax
	jmp	$LN16@cmdline_op
$LN24@cmdline_op:

; 298  :     } else if (!strcmp(name, "frames")) {

	push	OFFSET ??_C@_06OLAPKHEJ@frames@
	mov	eax, DWORD PTR _name$1[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN26@cmdline_op

; 299  :       opts->frames = atoi(optarg);

	mov	esi, esp
	mov	eax, DWORD PTR _optarg
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _opts$[ebp]
	mov	DWORD PTR [ecx+16], eax
	jmp	$LN16@cmdline_op
$LN26@cmdline_op:

; 300  :     } else if (!strcmp(name, "version")) {

	push	OFFSET ??_C@_07CPCPJPKL@version@
	mov	eax, DWORD PTR _name$1[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN28@cmdline_op

; 301  :       opts->version = true;

	mov	eax, DWORD PTR _opts$[ebp]
	mov	BYTE PTR [eax+25], 1

; 302  :       goto done;

	jmp	$done$47
	jmp	$LN16@cmdline_op
$LN28@cmdline_op:

; 303  :     } else if (!strcmp(name, "help")) {

	push	OFFSET ??_C@_04PCJFHION@help@
	mov	eax, DWORD PTR _name$1[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN30@cmdline_op

; 304  :       opts->help = true;

	mov	eax, DWORD PTR _opts$[ebp]
	mov	BYTE PTR [eax+24], 1

; 305  :       goto done;

	jmp	$done$47
	jmp	SHORT $LN16@cmdline_op
$LN30@cmdline_op:

; 306  :     } else if (!strcmp(name, "loop-input")) {

	push	OFFSET ??_C@_0L@BEBFLDMD@loop?9input@
	mov	eax, DWORD PTR _name$1[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN32@cmdline_op

; 307  :       opts->loop_input = true;

	mov	eax, DWORD PTR _opts$[ebp]
	mov	BYTE PTR [eax+26], 1
	jmp	SHORT $LN16@cmdline_op
$LN32@cmdline_op:

; 308  :     } else if (!api->config_parse(opts->config, name, optarg)) {

	mov	esi, esp
	mov	eax, DWORD PTR _optarg
	push	eax
	mov	ecx, DWORD PTR _name$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _opts$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _api$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN16@cmdline_op

; 309  :       fprintf(stderr, "invalid argument: %s=%s\n", name, optarg);

	mov	eax, DWORD PTR _optarg
	push	eax
	mov	ecx, DWORD PTR _name$1[ebp]
	push	ecx
	push	OFFSET ??_C@_0BJ@ODNINGIA@invalid?5argument?3?5?$CFs?$DN?$CFs?6@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H

; 310  :       ok = 0;

	mov	DWORD PTR _ok$[ebp], 0

; 311  :       goto done;

	jmp	$done$47
$LN16@cmdline_op:

; 312  :     }
; 313  :   }

	jmp	$LN4@cmdline_op
$LN3@cmdline_op:

; 314  : 
; 315  :   // Check for extra arguments.
; 316  :   if (argc - optind > 0) {

	mov	eax, DWORD PTR _argc$[ebp]
	sub	eax, DWORD PTR _optind
	test	eax, eax
	jle	SHORT $LN35@cmdline_op

; 317  :     fprintf(stderr, "Input error: Extra argument found: \"%s\"\n", argv[optind]);

	mov	eax, DWORD PTR _optind
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	OFFSET ??_C@_0CJ@HAGMBFIL@Input?5error?3?5Extra?5argument?5fou@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 318  :     ok = 0;

	mov	DWORD PTR _ok$[ebp], 0

; 319  :     goto done;

	jmp	$done$47
$LN35@cmdline_op:

; 320  :   }
; 321  : 
; 322  :   // Check that the required files were defined
; 323  :   if (opts->input == NULL || opts->output == NULL) {

	mov	eax, DWORD PTR _opts$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN37@cmdline_op
	mov	eax, DWORD PTR _opts$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN36@cmdline_op
$LN37@cmdline_op:

; 324  :     ok = 0;

	mov	DWORD PTR _ok$[ebp], 0

; 325  :     goto done;

	jmp	$done$47
$LN36@cmdline_op:

; 326  :   }
; 327  : 
; 328  :   if (opts->config->vps_period < 0) {

	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [ecx+8], 0
	jge	SHORT $LN38@cmdline_op

; 329  :     // Disabling parameter sets is only possible when using Kvazaar as
; 330  :     // a library.
; 331  :     fprintf(stderr, "Input error: vps_period must be non-negative\n");

	push	OFFSET ??_C@_0CO@GHFOIOEE@Input?5error?3?5vps_period?5must?5be@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 8

; 332  :     ok = 0;

	mov	DWORD PTR _ok$[ebp], 0

; 333  :     goto done;

	jmp	$done$47
$LN38@cmdline_op:

; 334  :   }
; 335  : 
; 336  :   // Check the file name for format
; 337  :   if (opts->config->file_format == KVZ_FORMAT_AUTO) {

	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [ecx+2456], 0
	jne	SHORT $LN39@cmdline_op

; 338  :     opts->config->file_format = detect_file_format(opts->input);

	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_detect_file_format
	add	esp, 4
	mov	edx, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+2456], eax
$LN39@cmdline_op:

; 339  :   }
; 340  : 
; 341  :   // Set resolution automatically if necessary
; 342  :   if ((opts->config->file_format == KVZ_FORMAT_AUTO || opts->config->file_format == KVZ_FORMAT_YUV)
; 343  :       && opts->config->width == 0 && opts->config->height == 0) {

	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [ecx+2456], 0
	je	SHORT $LN41@cmdline_op
	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [ecx+2456], 2
	jne	SHORT $done$47
$LN41@cmdline_op:
	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $done$47
	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [ecx+16], 0
	jne	SHORT $done$47

; 344  :     ok = select_input_res_auto(opts->input, &opts->config->width, &opts->config->height);

	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	edx, DWORD PTR _opts$[ebp]
	mov	eax, DWORD PTR [edx+20]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _opts$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_select_input_res_auto
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ok$[ebp], eax
$done$47:

; 345  :     goto done;
; 346  :   }
; 347  : 
; 348  : done:
; 349  :   if (!ok) {

	cmp	DWORD PTR _ok$[ebp], 0
	jne	SHORT $LN42@cmdline_op

; 350  :     cmdline_opts_free(api, opts);

	mov	eax, DWORD PTR _opts$[ebp]
	push	eax
	mov	ecx, DWORD PTR _api$[ebp]
	push	ecx
	call	_cmdline_opts_free
	add	esp, 8

; 351  :     opts = NULL;

	mov	DWORD PTR _opts$[ebp], 0
$LN42@cmdline_op:

; 352  :   }
; 353  : 
; 354  :   return opts;

	mov	eax, DWORD PTR _opts$[ebp]

; 355  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN46@cmdline_op
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN46@cmdline_op:
	DD	1
	DD	$LN45@cmdline_op
$LN45@cmdline_op:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN44@cmdline_op
$LN44@cmdline_op:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	95					; 0000005fH
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	95					; 0000005fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
_cmdline_opts_parse ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sscanf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT

; 2270 :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __9FF75F13_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 2271 :         int _Result;
; 2272 :         va_list _ArgList;
; 2273 :         __crt_va_start(_ArgList, _Format);

	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax

; 2274 :         _Result = _vsscanf_l(_Buffer, _Format, NULL, _ArgList);

	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Buffer$[ebp]
	push	edx
	call	__vsscanf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax

; 2275 :         __crt_va_end(_ArgList);

	mov	DWORD PTR __ArgList$[ebp], 0

; 2276 :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 2277 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsscanf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsscanf_l PROC					; COMDAT

; 2175 :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __9FF75F13_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 2176 :         return __stdio_common_vsscanf(

	mov	esi, esp
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	-1
	mov	eax, DWORD PTR __Buffer$[ebp]
	push	eax
	call	___local_stdio_scanf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2177 :             _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
; 2178 :             _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
; 2179 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _fprintf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT

; 835  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __9FF75F13_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 836  :         int _Result;
; 837  :         va_list _ArgList;
; 838  :         __crt_va_start(_ArgList, _Format);

	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax

; 839  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);

	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Stream$[ebp]
	push	edx
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax

; 840  :         __crt_va_end(_ArgList);

	mov	DWORD PTR __ArgList$[ebp], 0

; 841  :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 842  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 642  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __9FF75F13_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

	mov	esi, esp
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp

; 644  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT

; 96   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __1850469A_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4

; 97   :         static unsigned __int64 _OptionsStorage;
; 98   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 99   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __1850469A_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
