; Listing generated by Microsoft (R) Optimizing Compiler Version 19.26.28806.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05DFJCHPDH@input@				; `string'
PUBLIC	??_C@_06DKIGHACF@output@			; `string'
PUBLIC	??_C@_05GFCDIDHO@debug@				; `string'
PUBLIC	??_C@_05IGKADHGO@width@				; `string'
PUBLIC	??_C@_06LNLHEAAG@height@			; `string'
PUBLIC	??_C@_06OLAPKHEJ@frames@			; `string'
PUBLIC	??_C@_02HKLCFNHM@qp@				; `string'
PUBLIC	??_C@_06FBOEEHNL@period@			; `string'
PUBLIC	??_C@_03GCDGINBO@ref@				; `string'
PUBLIC	??_C@_0L@OMIMLMPG@vps?9period@			; `string'
PUBLIC	??_C@_09JFPMGDJC@input?9res@			; `string'
PUBLIC	??_C@_09FAGKMCMB@input?9fps@			; `string'
PUBLIC	??_C@_07KBNBPJMI@deblock@			; `string'
PUBLIC	??_C@_0L@POIEBAHK@no?9deblock@			; `string'
PUBLIC	??_C@_03MEBPJOO@sao@				; `string'
PUBLIC	??_C@_06KLBDJIAO@no?9sao@			; `string'
PUBLIC	??_C@_04HLCEBPLD@rdoq@				; `string'
PUBLIC	??_C@_07NLIJKPKK@no?9rdoq@			; `string'
PUBLIC	??_C@_08NLKLMLIL@signhide@			; `string'
PUBLIC	??_C@_0M@POJLEMMC@no?9signhide@			; `string'
PUBLIC	??_C@_03MIABAOBE@smp@				; `string'
PUBLIC	??_C@_06GPFDGPPE@no?9smp@			; `string'
PUBLIC	??_C@_03DCBBJBAA@amp@				; `string'
PUBLIC	??_C@_06JFEDPAOA@no?9amp@			; `string'
PUBLIC	??_C@_02FGFKDEHA@rd@				; `string'
PUBLIC	??_C@_0BC@NIDONDCE@full?9intra?9search@		; `string'
PUBLIC	??_C@_0BF@MPDNLGM@no?9full?9intra?9search@	; `string'
PUBLIC	??_C@_0P@KCEICG@transform?9skip@		; `string'
PUBLIC	??_C@_0BC@OFJOADKK@no?9transform?9skip@		; `string'
PUBLIC	??_C@_0P@GBNNMAAH@tr?9depth?9intra@		; `string'
PUBLIC	??_C@_02FIDLOBHM@me@				; `string'
PUBLIC	??_C@_05DLBDLGJF@subme@				; `string'
PUBLIC	??_C@_0BB@JEPLFBLL@source?9scan?9type@		; `string'
PUBLIC	??_C@_03PDCNJFPC@sar@				; `string'
PUBLIC	??_C@_08EKPNNHHH@overscan@			; `string'
PUBLIC	??_C@_0M@PKCLCCAL@videoformat@			; `string'
PUBLIC	??_C@_05CCGOGOBM@range@				; `string'
PUBLIC	??_C@_09LGJOCOCA@colorprim@			; `string'
PUBLIC	??_C@_08LGNJOGGB@transfer@			; `string'
PUBLIC	??_C@_0M@PKPDAFGD@colormatrix@			; `string'
PUBLIC	??_C@_09DOAGBPBM@chromaloc@			; `string'
PUBLIC	??_C@_03OIKLEJN@aud@				; `string'
PUBLIC	??_C@_06KJNINFHN@no?9aud@			; `string'
PUBLIC	??_C@_07DDNHNHBH@cqmfile@			; `string'
PUBLIC	??_C@_04EDECCOGL@seek@				; `string'
PUBLIC	??_C@_05HBFCGPPC@tiles@				; `string'
PUBLIC	??_C@_0BC@GPFMDGBM@tiles?9width?9split@		; `string'
PUBLIC	??_C@_0BD@PHGKEHDC@tiles?9height?9split@	; `string'
PUBLIC	??_C@_03FDJNKJGA@wpp@				; `string'
PUBLIC	??_C@_06PEMPMIIA@no?9wpp@			; `string'
PUBLIC	??_C@_03NPOHHFEC@owf@				; `string'
PUBLIC	??_C@_06DHJKELDJ@slices@			; `string'
PUBLIC	??_C@_07NFPADACG@threads@			; `string'
PUBLIC	??_C@_05CDPJMNMF@cpuid@				; `string'
PUBLIC	??_C@_08EHDCMILF@no?9cpuid@			; `string'
PUBLIC	??_C@_0P@PGOKPLMD@pu?9depth?9inter@		; `string'
PUBLIC	??_C@_0P@IOGMAPKE@pu?9depth?9intra@		; `string'
PUBLIC	??_C@_04NIDJFNBE@info@				; `string'
PUBLIC	??_C@_07HIJEONAN@no?9info@			; `string'
PUBLIC	??_C@_03BEPOBKLC@gop@				; `string'
PUBLIC	??_C@_06CGCIAMGP@bipred@			; `string'
PUBLIC	??_C@_09HGEJLGFG@no?9bipred@			; `string'
PUBLIC	??_C@_07MNHELNBG@bitrate@			; `string'
PUBLIC	??_C@_06OFAGBOBG@preset@			; `string'
PUBLIC	??_C@_06FFHEEO@mv?9rdo@				; `string'
PUBLIC	??_C@_09FADEMOHH@no?9mv?9rdo@			; `string'
PUBLIC	??_C@_04OGMFBKAB@psnr@				; `string'
PUBLIC	??_C@_07EGGIKKBI@no?9psnr@			; `string'
PUBLIC	??_C@_07CPCPJPKL@version@			; `string'
PUBLIC	??_C@_04PCJFHION@help@				; `string'
PUBLIC	??_C@_0L@BEBFLDMD@loop?9input@			; `string'
PUBLIC	??_C@_0O@GDODIHNK@mv?9constraint@		; `string'
PUBLIC	??_C@_04OIJGJDKO@hash@				; `string'
PUBLIC	??_C@_0BF@MFJMPGDP@cu?9split?9termination@	; `string'
PUBLIC	??_C@_06LAEHEPPF@crypto@			; `string'
PUBLIC	??_C@_03ICHNJLJF@key@				; `string'
PUBLIC	??_C@_0BF@EGFOFOM@me?9early?9termination@	; `string'
PUBLIC	??_C@_0N@IJEFOOGB@intra?9rdo?9et@		; `string'
PUBLIC	??_C@_0BA@BPGBBGGH@no?9intra?9rdo?9et@		; `string'
PUBLIC	??_C@_08PIMDPPGO@lossless@			; `string'
PUBLIC	??_C@_0M@NNPDHICH@no?9lossless@			; `string'
PUBLIC	??_C@_04IDIAAMCH@tmvp@				; `string'
PUBLIC	??_C@_07CDCNLMDO@no?9tmvp@			; `string'
PUBLIC	??_C@_09CNMMAOKA@rdoq?9skip@			; `string'
PUBLIC	??_C@_0N@CCOJMHBD@no?9rdoq?9skip@		; `string'
PUBLIC	??_C@_0P@FLCBIFAI@input?9bitdepth@		; `string'
PUBLIC	??_C@_0N@MACMGKGI@input?9format@		; `string'
PUBLIC	??_C@_0P@MLHFGKE@implicit?9rdpcm@		; `string'
PUBLIC	??_C@_0BC@OJILBNCI@no?9implicit?9rdpcm@		; `string'
PUBLIC	??_C@_03OIDJBEAH@roi@				; `string'
PUBLIC	??_C@_07LCMEECMI@erp?9aqp@			; `string'
PUBLIC	??_C@_0L@ONJBKLHK@no?9erp?9aqp@			; `string'
PUBLIC	??_C@_05KJNJLLGA@level@				; `string'
PUBLIC	??_C@_0M@MGLOGJPN@force?9level@			; `string'
PUBLIC	??_C@_09OOKJLFAD@high?9tier@			; `string'
PUBLIC	??_C@_08FPEEAHBF@me?9steps@			; `string'
PUBLIC	??_C@_0BD@NKHCCIBG@fast?9residual?9cost@	; `string'
PUBLIC	??_C@_0N@BFIGBNPD@set?9qp?9in?9cu@		; `string'
PUBLIC	??_C@_08COBIOIDI@open?9gop@			; `string'
PUBLIC	??_C@_0M@LCIGPHB@no?9open?9gop@			; `string'
PUBLIC	??_C@_03OPNODGAD@vaq@				; `string'
PUBLIC	??_C@_06EIIMFHOD@no?9vaq@			; `string'
PUBLIC	??_C@_0N@DFHCBDAC@scaling?9list@		; `string'
PUBLIC	??_C@_09NDDHJBDO@max?9merge@			; `string'
PUBLIC	??_C@_0L@CKGBKFNE@early?9skip@			; `string'
PUBLIC	??_C@_0O@HIAGGCCL@no?9early?9skip@		; `string'
PUBLIC	??_C@_0BC@NCEMMCMO@ml?9pu?9depth?9intra@	; `string'
PUBLIC	??_C@_0P@OELGANC@partial?9coding@		; `string'
PUBLIC	??_C@_0P@MOHBBPPH@zero?9coeff?9rdo@		; `string'
PUBLIC	??_C@_0BC@CLENFEHL@no?9zero?9coeff?9rdo@	; `string'
PUBLIC	??_C@_0BA@MNBIMPFK@intra?9qp?9offset@		; `string'
PUBLIC	??_C@_0N@LLEHIFIF@rc?9algorithm@		; `string'
PUBLIC	??_C@_0L@FHDAPBPN@intra?9bits@			; `string'
PUBLIC	??_C@_0O@FFHDGAC@no?9intra?9bits@		; `string'
PUBLIC	??_C@_0P@EOCPJIEH@clip?9neighbour@		; `string'
PUBLIC	??_C@_0BC@KLBDNDML@no?9clip?9neighbour@		; `string'
PUBLIC	??_C@_0BC@FCLHPMHP@input?9file?9format@		; `string'
PUBLIC	??_C@_0BC@MDLEJHHN@stats?9file?9prefix@		; `string'
PUBLIC	??_C@_0BB@KFGIMMCK@fast?9coeff?9table@		; `string'
PUBLIC	??_C@_0BA@LKPIHKKB@fastrd?9sampling@		; `string'
PUBLIC	??_C@_0BG@LLPHFMAP@fastrd?9accuracy?9check@	; `string'
PUBLIC	??_C@_0O@MBFJKMHN@fastrd?9outdir@		; `string'
msvcjmc	SEGMENT
__ED9CC025_corecrt_memcpy_s@h DB 01H
__875914C9_corecrt_wstring@h DB 01H
__731387C4_string@h DB 01H
__1850469A_corecrt_stdio_config@h DB 01H
__01D10305_corecrt_wstdio@h DB 01H
__9FF75F13_stdio@h DB 01H
__40DF0D2D_ctype@h DB 01H
__541E1734_cli@c DB 01H
msvcjmc	ENDS
;	COMDAT ??_C@_0O@MBFJKMHN@fastrd?9outdir@
CONST	SEGMENT
??_C@_0O@MBFJKMHN@fastrd?9outdir@ DB 'fastrd-outdir', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LLPHFMAP@fastrd?9accuracy?9check@
CONST	SEGMENT
??_C@_0BG@LLPHFMAP@fastrd?9accuracy?9check@ DB 'fastrd-accuracy-check', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LKPIHKKB@fastrd?9sampling@
CONST	SEGMENT
??_C@_0BA@LKPIHKKB@fastrd?9sampling@ DB 'fastrd-sampling', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KFGIMMCK@fast?9coeff?9table@
CONST	SEGMENT
??_C@_0BB@KFGIMMCK@fast?9coeff?9table@ DB 'fast-coeff-table', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MDLEJHHN@stats?9file?9prefix@
CONST	SEGMENT
??_C@_0BC@MDLEJHHN@stats?9file?9prefix@ DB 'stats-file-prefix', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FCLHPMHP@input?9file?9format@
CONST	SEGMENT
??_C@_0BC@FCLHPMHP@input?9file?9format@ DB 'input-file-format', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KLBDNDML@no?9clip?9neighbour@
CONST	SEGMENT
??_C@_0BC@KLBDNDML@no?9clip?9neighbour@ DB 'no-clip-neighbour', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EOCPJIEH@clip?9neighbour@
CONST	SEGMENT
??_C@_0P@EOCPJIEH@clip?9neighbour@ DB 'clip-neighbour', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FFHDGAC@no?9intra?9bits@
CONST	SEGMENT
??_C@_0O@FFHDGAC@no?9intra?9bits@ DB 'no-intra-bits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FHDAPBPN@intra?9bits@
CONST	SEGMENT
??_C@_0L@FHDAPBPN@intra?9bits@ DB 'intra-bits', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LLEHIFIF@rc?9algorithm@
CONST	SEGMENT
??_C@_0N@LLEHIFIF@rc?9algorithm@ DB 'rc-algorithm', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MNBIMPFK@intra?9qp?9offset@
CONST	SEGMENT
??_C@_0BA@MNBIMPFK@intra?9qp?9offset@ DB 'intra-qp-offset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CLENFEHL@no?9zero?9coeff?9rdo@
CONST	SEGMENT
??_C@_0BC@CLENFEHL@no?9zero?9coeff?9rdo@ DB 'no-zero-coeff-rdo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MOHBBPPH@zero?9coeff?9rdo@
CONST	SEGMENT
??_C@_0P@MOHBBPPH@zero?9coeff?9rdo@ DB 'zero-coeff-rdo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OELGANC@partial?9coding@
CONST	SEGMENT
??_C@_0P@OELGANC@partial?9coding@ DB 'partial-coding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NCEMMCMO@ml?9pu?9depth?9intra@
CONST	SEGMENT
??_C@_0BC@NCEMMCMO@ml?9pu?9depth?9intra@ DB 'ml-pu-depth-intra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HIAGGCCL@no?9early?9skip@
CONST	SEGMENT
??_C@_0O@HIAGGCCL@no?9early?9skip@ DB 'no-early-skip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CKGBKFNE@early?9skip@
CONST	SEGMENT
??_C@_0L@CKGBKFNE@early?9skip@ DB 'early-skip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NDDHJBDO@max?9merge@
CONST	SEGMENT
??_C@_09NDDHJBDO@max?9merge@ DB 'max-merge', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DFHCBDAC@scaling?9list@
CONST	SEGMENT
??_C@_0N@DFHCBDAC@scaling?9list@ DB 'scaling-list', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06EIIMFHOD@no?9vaq@
CONST	SEGMENT
??_C@_06EIIMFHOD@no?9vaq@ DB 'no-vaq', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OPNODGAD@vaq@
CONST	SEGMENT
??_C@_03OPNODGAD@vaq@ DB 'vaq', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LCIGPHB@no?9open?9gop@
CONST	SEGMENT
??_C@_0M@LCIGPHB@no?9open?9gop@ DB 'no-open-gop', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08COBIOIDI@open?9gop@
CONST	SEGMENT
??_C@_08COBIOIDI@open?9gop@ DB 'open-gop', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BFIGBNPD@set?9qp?9in?9cu@
CONST	SEGMENT
??_C@_0N@BFIGBNPD@set?9qp?9in?9cu@ DB 'set-qp-in-cu', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NKHCCIBG@fast?9residual?9cost@
CONST	SEGMENT
??_C@_0BD@NKHCCIBG@fast?9residual?9cost@ DB 'fast-residual-cost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FPEEAHBF@me?9steps@
CONST	SEGMENT
??_C@_08FPEEAHBF@me?9steps@ DB 'me-steps', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09OOKJLFAD@high?9tier@
CONST	SEGMENT
??_C@_09OOKJLFAD@high?9tier@ DB 'high-tier', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MGLOGJPN@force?9level@
CONST	SEGMENT
??_C@_0M@MGLOGJPN@force?9level@ DB 'force-level', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05KJNJLLGA@level@
CONST	SEGMENT
??_C@_05KJNJLLGA@level@ DB 'level', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ONJBKLHK@no?9erp?9aqp@
CONST	SEGMENT
??_C@_0L@ONJBKLHK@no?9erp?9aqp@ DB 'no-erp-aqp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LCMEECMI@erp?9aqp@
CONST	SEGMENT
??_C@_07LCMEECMI@erp?9aqp@ DB 'erp-aqp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OIDJBEAH@roi@
CONST	SEGMENT
??_C@_03OIDJBEAH@roi@ DB 'roi', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OJILBNCI@no?9implicit?9rdpcm@
CONST	SEGMENT
??_C@_0BC@OJILBNCI@no?9implicit?9rdpcm@ DB 'no-implicit-rdpcm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MLHFGKE@implicit?9rdpcm@
CONST	SEGMENT
??_C@_0P@MLHFGKE@implicit?9rdpcm@ DB 'implicit-rdpcm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MACMGKGI@input?9format@
CONST	SEGMENT
??_C@_0N@MACMGKGI@input?9format@ DB 'input-format', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FLCBIFAI@input?9bitdepth@
CONST	SEGMENT
??_C@_0P@FLCBIFAI@input?9bitdepth@ DB 'input-bitdepth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CCOJMHBD@no?9rdoq?9skip@
CONST	SEGMENT
??_C@_0N@CCOJMHBD@no?9rdoq?9skip@ DB 'no-rdoq-skip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CNMMAOKA@rdoq?9skip@
CONST	SEGMENT
??_C@_09CNMMAOKA@rdoq?9skip@ DB 'rdoq-skip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CDCNLMDO@no?9tmvp@
CONST	SEGMENT
??_C@_07CDCNLMDO@no?9tmvp@ DB 'no-tmvp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IDIAAMCH@tmvp@
CONST	SEGMENT
??_C@_04IDIAAMCH@tmvp@ DB 'tmvp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NNPDHICH@no?9lossless@
CONST	SEGMENT
??_C@_0M@NNPDHICH@no?9lossless@ DB 'no-lossless', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PIMDPPGO@lossless@
CONST	SEGMENT
??_C@_08PIMDPPGO@lossless@ DB 'lossless', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BPGBBGGH@no?9intra?9rdo?9et@
CONST	SEGMENT
??_C@_0BA@BPGBBGGH@no?9intra?9rdo?9et@ DB 'no-intra-rdo-et', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IJEFOOGB@intra?9rdo?9et@
CONST	SEGMENT
??_C@_0N@IJEFOOGB@intra?9rdo?9et@ DB 'intra-rdo-et', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EGFOFOM@me?9early?9termination@
CONST	SEGMENT
??_C@_0BF@EGFOFOM@me?9early?9termination@ DB 'me-early-termination', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03ICHNJLJF@key@
CONST	SEGMENT
??_C@_03ICHNJLJF@key@ DB 'key', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06LAEHEPPF@crypto@
CONST	SEGMENT
??_C@_06LAEHEPPF@crypto@ DB 'crypto', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MFJMPGDP@cu?9split?9termination@
CONST	SEGMENT
??_C@_0BF@MFJMPGDP@cu?9split?9termination@ DB 'cu-split-termination', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04OIJGJDKO@hash@
CONST	SEGMENT
??_C@_04OIJGJDKO@hash@ DB 'hash', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GDODIHNK@mv?9constraint@
CONST	SEGMENT
??_C@_0O@GDODIHNK@mv?9constraint@ DB 'mv-constraint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BEBFLDMD@loop?9input@
CONST	SEGMENT
??_C@_0L@BEBFLDMD@loop?9input@ DB 'loop-input', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCJFHION@help@
CONST	SEGMENT
??_C@_04PCJFHION@help@ DB 'help', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPCPJPKL@version@
CONST	SEGMENT
??_C@_07CPCPJPKL@version@ DB 'version', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EGGIKKBI@no?9psnr@
CONST	SEGMENT
??_C@_07EGGIKKBI@no?9psnr@ DB 'no-psnr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OGMFBKAB@psnr@
CONST	SEGMENT
??_C@_04OGMFBKAB@psnr@ DB 'psnr', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09FADEMOHH@no?9mv?9rdo@
CONST	SEGMENT
??_C@_09FADEMOHH@no?9mv?9rdo@ DB 'no-mv-rdo', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FFHEEO@mv?9rdo@
CONST	SEGMENT
??_C@_06FFHEEO@mv?9rdo@ DB 'mv-rdo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OFAGBOBG@preset@
CONST	SEGMENT
??_C@_06OFAGBOBG@preset@ DB 'preset', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MNHELNBG@bitrate@
CONST	SEGMENT
??_C@_07MNHELNBG@bitrate@ DB 'bitrate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HGEJLGFG@no?9bipred@
CONST	SEGMENT
??_C@_09HGEJLGFG@no?9bipred@ DB 'no-bipred', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06CGCIAMGP@bipred@
CONST	SEGMENT
??_C@_06CGCIAMGP@bipred@ DB 'bipred', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03BEPOBKLC@gop@
CONST	SEGMENT
??_C@_03BEPOBKLC@gop@ DB 'gop', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07HIJEONAN@no?9info@
CONST	SEGMENT
??_C@_07HIJEONAN@no?9info@ DB 'no-info', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04NIDJFNBE@info@
CONST	SEGMENT
??_C@_04NIDJFNBE@info@ DB 'info', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IOGMAPKE@pu?9depth?9intra@
CONST	SEGMENT
??_C@_0P@IOGMAPKE@pu?9depth?9intra@ DB 'pu-depth-intra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PGOKPLMD@pu?9depth?9inter@
CONST	SEGMENT
??_C@_0P@PGOKPLMD@pu?9depth?9inter@ DB 'pu-depth-inter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EHDCMILF@no?9cpuid@
CONST	SEGMENT
??_C@_08EHDCMILF@no?9cpuid@ DB 'no-cpuid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CDPJMNMF@cpuid@
CONST	SEGMENT
??_C@_05CDPJMNMF@cpuid@ DB 'cpuid', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07NFPADACG@threads@
CONST	SEGMENT
??_C@_07NFPADACG@threads@ DB 'threads', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DHJKELDJ@slices@
CONST	SEGMENT
??_C@_06DHJKELDJ@slices@ DB 'slices', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NPOHHFEC@owf@
CONST	SEGMENT
??_C@_03NPOHHFEC@owf@ DB 'owf', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06PEMPMIIA@no?9wpp@
CONST	SEGMENT
??_C@_06PEMPMIIA@no?9wpp@ DB 'no-wpp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FDJNKJGA@wpp@
CONST	SEGMENT
??_C@_03FDJNKJGA@wpp@ DB 'wpp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PHGKEHDC@tiles?9height?9split@
CONST	SEGMENT
??_C@_0BD@PHGKEHDC@tiles?9height?9split@ DB 'tiles-height-split', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GPFMDGBM@tiles?9width?9split@
CONST	SEGMENT
??_C@_0BC@GPFMDGBM@tiles?9width?9split@ DB 'tiles-width-split', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05HBFCGPPC@tiles@
CONST	SEGMENT
??_C@_05HBFCGPPC@tiles@ DB 'tiles', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04EDECCOGL@seek@
CONST	SEGMENT
??_C@_04EDECCOGL@seek@ DB 'seek', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07DDNHNHBH@cqmfile@
CONST	SEGMENT
??_C@_07DDNHNHBH@cqmfile@ DB 'cqmfile', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KJNINFHN@no?9aud@
CONST	SEGMENT
??_C@_06KJNINFHN@no?9aud@ DB 'no-aud', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OIKLEJN@aud@
CONST	SEGMENT
??_C@_03OIKLEJN@aud@ DB 'aud', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09DOAGBPBM@chromaloc@
CONST	SEGMENT
??_C@_09DOAGBPBM@chromaloc@ DB 'chromaloc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PKPDAFGD@colormatrix@
CONST	SEGMENT
??_C@_0M@PKPDAFGD@colormatrix@ DB 'colormatrix', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LGNJOGGB@transfer@
CONST	SEGMENT
??_C@_08LGNJOGGB@transfer@ DB 'transfer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09LGJOCOCA@colorprim@
CONST	SEGMENT
??_C@_09LGJOCOCA@colorprim@ DB 'colorprim', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CCGOGOBM@range@
CONST	SEGMENT
??_C@_05CCGOGOBM@range@ DB 'range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PKCLCCAL@videoformat@
CONST	SEGMENT
??_C@_0M@PKCLCCAL@videoformat@ DB 'videoformat', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EKPNNHHH@overscan@
CONST	SEGMENT
??_C@_08EKPNNHHH@overscan@ DB 'overscan', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03PDCNJFPC@sar@
CONST	SEGMENT
??_C@_03PDCNJFPC@sar@ DB 'sar', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JEPLFBLL@source?9scan?9type@
CONST	SEGMENT
??_C@_0BB@JEPLFBLL@source?9scan?9type@ DB 'source-scan-type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05DLBDLGJF@subme@
CONST	SEGMENT
??_C@_05DLBDLGJF@subme@ DB 'subme', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FIDLOBHM@me@
CONST	SEGMENT
??_C@_02FIDLOBHM@me@ DB 'me', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GBNNMAAH@tr?9depth?9intra@
CONST	SEGMENT
??_C@_0P@GBNNMAAH@tr?9depth?9intra@ DB 'tr-depth-intra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OFJOADKK@no?9transform?9skip@
CONST	SEGMENT
??_C@_0BC@OFJOADKK@no?9transform?9skip@ DB 'no-transform-skip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KCEICG@transform?9skip@
CONST	SEGMENT
??_C@_0P@KCEICG@transform?9skip@ DB 'transform-skip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MPDNLGM@no?9full?9intra?9search@
CONST	SEGMENT
??_C@_0BF@MPDNLGM@no?9full?9intra?9search@ DB 'no-full-intra-search', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NIDONDCE@full?9intra?9search@
CONST	SEGMENT
??_C@_0BC@NIDONDCE@full?9intra?9search@ DB 'full-intra-search', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02FGFKDEHA@rd@
CONST	SEGMENT
??_C@_02FGFKDEHA@rd@ DB 'rd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06JFEDPAOA@no?9amp@
CONST	SEGMENT
??_C@_06JFEDPAOA@no?9amp@ DB 'no-amp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DCBBJBAA@amp@
CONST	SEGMENT
??_C@_03DCBBJBAA@amp@ DB 'amp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06GPFDGPPE@no?9smp@
CONST	SEGMENT
??_C@_06GPFDGPPE@no?9smp@ DB 'no-smp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MIABAOBE@smp@
CONST	SEGMENT
??_C@_03MIABAOBE@smp@ DB 'smp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@POJLEMMC@no?9signhide@
CONST	SEGMENT
??_C@_0M@POJLEMMC@no?9signhide@ DB 'no-signhide', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NLKLMLIL@signhide@
CONST	SEGMENT
??_C@_08NLKLMLIL@signhide@ DB 'signhide', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NLIJKPKK@no?9rdoq@
CONST	SEGMENT
??_C@_07NLIJKPKK@no?9rdoq@ DB 'no-rdoq', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HLCEBPLD@rdoq@
CONST	SEGMENT
??_C@_04HLCEBPLD@rdoq@ DB 'rdoq', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06KLBDJIAO@no?9sao@
CONST	SEGMENT
??_C@_06KLBDJIAO@no?9sao@ DB 'no-sao', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MEBPJOO@sao@
CONST	SEGMENT
??_C@_03MEBPJOO@sao@ DB 'sao', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@POIEBAHK@no?9deblock@
CONST	SEGMENT
??_C@_0L@POIEBAHK@no?9deblock@ DB 'no-deblock', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KBNBPJMI@deblock@
CONST	SEGMENT
??_C@_07KBNBPJMI@deblock@ DB 'deblock', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FAGKMCMB@input?9fps@
CONST	SEGMENT
??_C@_09FAGKMCMB@input?9fps@ DB 'input-fps', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JFPMGDJC@input?9res@
CONST	SEGMENT
??_C@_09JFPMGDJC@input?9res@ DB 'input-res', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OMIMLMPG@vps?9period@
CONST	SEGMENT
??_C@_0L@OMIMLMPG@vps?9period@ DB 'vps-period', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03GCDGINBO@ref@
CONST	SEGMENT
??_C@_03GCDGINBO@ref@ DB 'ref', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FBOEEHNL@period@
CONST	SEGMENT
??_C@_06FBOEEHNL@period@ DB 'period', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02HKLCFNHM@qp@
CONST	SEGMENT
??_C@_02HKLCFNHM@qp@ DB 'qp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06OLAPKHEJ@frames@
CONST	SEGMENT
??_C@_06OLAPKHEJ@frames@ DB 'frames', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LNLHEAAG@height@
CONST	SEGMENT
??_C@_06LNLHEAAG@height@ DB 'height', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IGKADHGO@width@
CONST	SEGMENT
??_C@_05IGKADHGO@width@ DB 'width', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GFCDIDHO@debug@
CONST	SEGMENT
??_C@_05GFCDIDHO@debug@ DB 'debug', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06DKIGHACF@output@
CONST	SEGMENT
??_C@_06DKIGHACF@output@ DB 'output', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DFJCHPDH@input@
CONST	SEGMENT
??_C@_05DFJCHPDH@input@ DB 'input', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
short_options DB 'i:o:d:w:h:n:q:p:r:', 00H
	ORG $+13
long_options DQ	FLAT:??_C@_05DFJCHPDH@input@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	069H
	ORG $+4
	DQ	FLAT:??_C@_06DKIGHACF@output@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	06fH
	ORG $+4
	DQ	FLAT:??_C@_05GFCDIDHO@debug@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	064H
	ORG $+4
	DQ	FLAT:??_C@_05IGKADHGO@width@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	077H
	ORG $+4
	DQ	FLAT:??_C@_06LNLHEAAG@height@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	068H
	ORG $+4
	DQ	FLAT:??_C@_06OLAPKHEJ@frames@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	06eH
	ORG $+4
	DQ	FLAT:??_C@_02HKLCFNHM@qp@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	071H
	ORG $+4
	DQ	FLAT:??_C@_06FBOEEHNL@period@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	070H
	ORG $+4
	DQ	FLAT:??_C@_03GCDGINBO@ref@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	072H
	ORG $+4
	DQ	FLAT:??_C@_0L@OMIMLMPG@vps?9period@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_09JFPMGDJC@input?9res@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_09FAGKMCMB@input?9fps@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_07KBNBPJMI@deblock@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0L@POIEBAHK@no?9deblock@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_03MEBPJOO@sao@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_06KLBDJIAO@no?9sao@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_04HLCEBPLD@rdoq@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_07NLIJKPKK@no?9rdoq@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_08NLKLMLIL@signhide@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0M@POJLEMMC@no?9signhide@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_03MIABAOBE@smp@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_06GPFDGPPE@no?9smp@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_03DCBBJBAA@amp@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_06JFEDPAOA@no?9amp@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_02FGFKDEHA@rd@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BC@NIDONDCE@full?9intra?9search@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BF@MPDNLGM@no?9full?9intra?9search@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0P@KCEICG@transform?9skip@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BC@OFJOADKK@no?9transform?9skip@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0P@GBNNMAAH@tr?9depth?9intra@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_02FIDLOBHM@me@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_05DLBDLGJF@subme@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BB@JEPLFBLL@source?9scan?9type@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_03PDCNJFPC@sar@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_08EKPNNHHH@overscan@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0M@PKCLCCAL@videoformat@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_05CCGOGOBM@range@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_09LGJOCOCA@colorprim@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_08LGNJOGGB@transfer@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0M@PKPDAFGD@colormatrix@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_09DOAGBPBM@chromaloc@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_03OIKLEJN@aud@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_06KJNINFHN@no?9aud@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_07DDNHNHBH@cqmfile@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_04EDECCOGL@seek@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_05HBFCGPPC@tiles@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BC@GPFMDGBM@tiles?9width?9split@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BD@PHGKEHDC@tiles?9height?9split@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_03FDJNKJGA@wpp@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_06PEMPMIIA@no?9wpp@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_03NPOHHFEC@owf@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_06DHJKELDJ@slices@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_07NFPADACG@threads@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_05CDPJMNMF@cpuid@
	DD	02H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_08EHDCMILF@no?9cpuid@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0P@PGOKPLMD@pu?9depth?9inter@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0P@IOGMAPKE@pu?9depth?9intra@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_04NIDJFNBE@info@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_07HIJEONAN@no?9info@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_03BEPOBKLC@gop@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_06CGCIAMGP@bipred@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_09HGEJLGFG@no?9bipred@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_07MNHELNBG@bitrate@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_06OFAGBOBG@preset@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_06FFHEEO@mv?9rdo@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_09FADEMOHH@no?9mv?9rdo@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_04OGMFBKAB@psnr@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_07EGGIKKBI@no?9psnr@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_07CPCPJPKL@version@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_04PCJFHION@help@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0L@BEBFLDMD@loop?9input@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0O@GDODIHNK@mv?9constraint@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_04OIJGJDKO@hash@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BF@MFJMPGDP@cu?9split?9termination@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_06LAEHEPPF@crypto@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_03ICHNJLJF@key@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BF@EGFOFOM@me?9early?9termination@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0N@IJEFOOGB@intra?9rdo?9et@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BA@BPGBBGGH@no?9intra?9rdo?9et@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_08PIMDPPGO@lossless@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0M@NNPDHICH@no?9lossless@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_04IDIAAMCH@tmvp@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_07CDCNLMDO@no?9tmvp@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_09CNMMAOKA@rdoq?9skip@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0N@CCOJMHBD@no?9rdoq?9skip@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0P@FLCBIFAI@input?9bitdepth@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0N@MACMGKGI@input?9format@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0P@MLHFGKE@implicit?9rdpcm@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BC@OJILBNCI@no?9implicit?9rdpcm@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_03OIDJBEAH@roi@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_07LCMEECMI@erp?9aqp@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0L@ONJBKLHK@no?9erp?9aqp@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_05KJNJLLGA@level@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0M@MGLOGJPN@force?9level@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_09OOKJLFAD@high?9tier@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_08FPEEAHBF@me?9steps@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BD@NKHCCIBG@fast?9residual?9cost@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0N@BFIGBNPD@set?9qp?9in?9cu@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_08COBIOIDI@open?9gop@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0M@LCIGPHB@no?9open?9gop@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_03OPNODGAD@vaq@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_06EIIMFHOD@no?9vaq@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0N@DFHCBDAC@scaling?9list@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_09NDDHJBDO@max?9merge@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0L@CKGBKFNE@early?9skip@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0O@HIAGGCCL@no?9early?9skip@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BC@NCEMMCMO@ml?9pu?9depth?9intra@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0P@OELGANC@partial?9coding@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0P@MOHBBPPH@zero?9coeff?9rdo@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BC@CLENFEHL@no?9zero?9coeff?9rdo@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BA@MNBIMPFK@intra?9qp?9offset@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0N@LLEHIFIF@rc?9algorithm@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0L@FHDAPBPN@intra?9bits@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0O@FFHDGAC@no?9intra?9bits@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0P@EOCPJIEH@clip?9neighbour@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BC@KLBDNDML@no?9clip?9neighbour@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BC@FCLHPMHP@input?9file?9format@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BC@MDLEJHHN@stats?9file?9prefix@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BB@KFGIMMCK@fast?9coeff?9table@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BA@LKPIHKKB@fastrd?9sampling@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BG@LLPHFMAP@fastrd?9accuracy?9check@
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0O@MBFJKMHN@fastrd?9outdir@
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
CONST	ENDS
PUBLIC	__local_stdio_printf_options
PUBLIC	__local_stdio_scanf_options
PUBLIC	_vfprintf_l
PUBLIC	fprintf
PUBLIC	_vsscanf_l
PUBLIC	sscanf
PUBLIC	cmdline_opts_parse
PUBLIC	cmdline_opts_free
PUBLIC	print_usage
PUBLIC	print_version
PUBLIC	print_help
PUBLIC	print_frame_info
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_08MHEBOPLH@?$CFdx?$CFd?$CF?$CKs@		; `string'
PUBLIC	??_C@_04KCCKCODH@?4y4m@				; `string'
PUBLIC	??_C@_04HKEEACFK@?4yuv@				; `string'
PUBLIC	??_C@_0CO@OBCHOMBF@Input?5error?3?5More?5than?5one?5inpu@ ; `string'
PUBLIC	??_C@_0CP@JCJFLGMJ@Input?5error?3?5More?5than?5one?5outp@ ; `string'
PUBLIC	??_C@_0DF@OEJJGLKH@Input?5error?3?5More?5than?5one?5debu@ ; `string'
PUBLIC	??_C@_0BJ@ODNINGIA@invalid?5argument?3?5?$CFs?$DN?$CFs?6@ ; `string'
PUBLIC	??_C@_0CJ@HAGMBFIL@Input?5error?3?5Extra?5argument?5fou@ ; `string'
PUBLIC	??_C@_0CO@GHFOIOEE@Input?5error?3?5vps_period?5must?5be@ ; `string'
PUBLIC	??_C@_0GN@MONMHAHB@Kvazaar?5usage?3?5?9i?5and?5?9?9input?9r@ ; `string'
PUBLIC	??_C@_0CN@IPONMLFI@Kvazaar?52?41?40?6Kvazaar?5license?3?5@ ; `string'
PUBLIC	??_C@_0EEOA@OJJFLKGH@Usage?3?6kvazaar?5?9i?5?$DMinput?$DO?5?9?9inp@ ; `string'
PUBLIC	??_C@_03KCKBGKKJ@BPI@				; `string'
PUBLIC	??_C@_0DA@DINMEMCD@POC?5?$CF4d?5QP?5?$CF2d?5AVG?5QP?5?$CF?41f?5?$CI?$CFc?9@ ; `string'
PUBLIC	??_C@_0BO@MFMKFKOI@?5PSNR?5Y?5?$CF2?44f?5U?5?$CF2?44f?5V?5?$CF2?44f@ ; `string'
PUBLIC	??_C@_05GGHPIDAH@?5?$FLL0?5@			; `string'
PUBLIC	??_C@_03JDANDILB@?$CFd?5@			; `string'
PUBLIC	??_C@_06JBBBPJK@?$FN?5?$FLL1?5@			; `string'
PUBLIC	??_C@_01LBDDMOBJ@?$FN@				; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
EXTRN	__imp_calloc:PROC
EXTRN	__imp_free:PROC
EXTRN	__imp_atoi:PROC
EXTRN	strrchr:PROC
EXTRN	strcmp:PROC
EXTRN	strlen:PROC
EXTRN	__imp_strncmp:PROC
EXTRN	__imp_strdup:PROC
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	__imp___stdio_common_vsscanf:PROC
EXTRN	getopt_long:PROC
EXTRN	__imp_isdigit:PROC
EXTRN	__imp_tolower:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	optarg:QWORD
EXTRN	optind:DWORD
EXTRN	_fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_scanf_options DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$__local_stdio_scanf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+126
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$fprintf DD imagerel $LN3
	DD	imagerel $LN3+150
	DD	imagerel $unwind$fprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsscanf_l DD imagerel $LN3
	DD	imagerel $LN3+138
	DD	imagerel $unwind$_vsscanf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sscanf DD imagerel $LN3
	DD	imagerel $LN3+150
	DD	imagerel $unwind$sscanf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmdline_opts_parse DD imagerel $LN44
	DD	imagerel $LN44+1368
	DD	imagerel $unwind$cmdline_opts_parse
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmdline_opts_free DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$cmdline_opts_free
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$print_usage DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$print_usage
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$print_version DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$print_version
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$print_help DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$print_help
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$print_frame_info DD imagerel $LN11
	DD	imagerel $LN11+772
	DD	imagerel $unwind$print_frame_info
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$select_input_res_auto DD imagerel select_input_res_auto
	DD	imagerel select_input_res_auto+423
	DD	imagerel $unwind$select_input_res_auto
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$detect_file_format DD imagerel detect_file_format
	DD	imagerel detect_file_format+282
	DD	imagerel $unwind$detect_file_format
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LBDDMOBJ@?$FN@
CONST	SEGMENT
??_C@_01LBDDMOBJ@?$FN@ DB ']', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06JBBBPJK@?$FN?5?$FLL1?5@
CONST	SEGMENT
??_C@_06JBBBPJK@?$FN?5?$FLL1?5@ DB '] [L1 ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03JDANDILB@?$CFd?5@
CONST	SEGMENT
??_C@_03JDANDILB@?$CFd?5@ DB '%d ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GGHPIDAH@?5?$FLL0?5@
CONST	SEGMENT
??_C@_05GGHPIDAH@?5?$FLL0?5@ DB ' [L0 ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MFMKFKOI@?5PSNR?5Y?5?$CF2?44f?5U?5?$CF2?44f?5V?5?$CF2?44f@
CONST	SEGMENT
??_C@_0BO@MFMKFKOI@?5PSNR?5Y?5?$CF2?44f?5U?5?$CF2?44f?5V?5?$CF2?44f@ DB ' '
	DB	'PSNR Y %2.4f U %2.4f V %2.4f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@DINMEMCD@POC?5?$CF4d?5QP?5?$CF2d?5AVG?5QP?5?$CF?41f?5?$CI?$CFc?9@
CONST	SEGMENT
??_C@_0DA@DINMEMCD@POC?5?$CF4d?5QP?5?$CF2d?5AVG?5QP?5?$CF?41f?5?$CI?$CFc?9@ DB 'P'
	DB	'OC %4d QP %2d AVG QP %.1f (%c-frame) %10d bits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03KCKBGKKJ@BPI@
CONST	SEGMENT
??_C@_03KCKBGKKJ@BPI@ DB 'BPI', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EEOA@OJJFLKGH@Usage?3?6kvazaar?5?9i?5?$DMinput?$DO?5?9?9inp@
CONST	SEGMENT
??_C@_0EEOA@OJJFLKGH@Usage?3?6kvazaar?5?9i?5?$DMinput?$DO?5?9?9inp@ DB 'U'
	DB	'sage:', 0aH, 'kvazaar -i <input> --input-res <width>x<height>'
	DB	' -o <output>', 0aH, 0aH, 'Required:', 0aH, '  -i, --input <fi'
	DB	'lename>     : Input file', 0aH, '      --input-res <res>     '
	DB	' : Input resolution [auto]', 0aH, '                          '
	DB	'         - auto: Detect from file name.', 0aH, '             '
	DB	'                      - <int>x<int>: width times height', 0aH
	DB	'  -o, --output <filename>    : Output file', 0aH, 0aH, 'Prese'
	DB	'ts:', 0aH, '      --preset <preset>      : Set options to a p'
	DB	'reset [medium]', 0aH, '                                   - u'
	DB	'ltrafast, superfast, veryfast, faster,', 0aH, '              '
	DB	'                       fast, medium, slow, slower, veryslow', 0aH
	DB	'                                     placebo', 0aH, 0aH, 'Inp'
	DB	'ut:', 0aH, '  -n, --frames <integer>     : Number of frames t'
	DB	'o code [all]', 0aH, '      --seek <integer>       : First fra'
	DB	'me to code [0]', 0aH, '      --input-fps <num>[/<denom>] : Fr'
	DB	'ame rate of the input video [25]', 0aH, '      --source-scan-'
	DB	'type <string> : Source scan type [progressive]', 0aH, '      '
	DB	'                             - progressive: Progressive scan', 0aH
	DB	'                                   - tff: Top field first', 0aH
	DB	'                                   - bff: Bottom field first', 0aH
	DB	'      --input-format <string> : P420 or P400 [P420]', 0aH, ' '
	DB	'     --input-bitdepth <int> : 8-16 [8]', 0aH, '      --loop-i'
	DB	'nput           : Re-read input file forever.', 0aH, '      --'
	DB	'input-file-format <string> : Input file format [auto]', 0aH, ' '
	DB	'                                   - auto: Check the file end'
	DB	'ing for format', 0aH, '                                    - '
	DB	'y4m (skips frame headers)', 0aH, '                           '
	DB	'         - yuv', 0aH, 0aH, 'Options:', 0aH, '      --help    '
	DB	'             : Print this help message and exit.', 0aH, '    '
	DB	'  --version              : Print version information and exit'
	DB	'.', 0aH, '      --(no-)aud             : Use access unit deli'
	DB	'miters. [disabled]', 0aH, '      --debug <filename>     : Out'
	DB	'put internal reconstruction.', 0aH, '      --(no-)cpuid      '
	DB	'     : Enable runtime CPU optimizations. [enabled]', 0aH, '  '
	DB	'    --hash <string>        : Decoded picture hash [checksum]', 0aH
	DB	'                                   - none: 0 bytes', 0aH, '  '
	DB	'                                 - checksum: 18 bytes', 0aH, ' '
	DB	'                                  - md5: 56 bytes', 0aH, '   '
	DB	'   --(no-)psnr            : Calculate PSNR for frames. [enabl'
	DB	'ed]', 0aH, '      --(no-)info            : Add encoder info S'
	DB	'EI. [enabled]', 0aH, '      --crypto <string>      : Selectiv'
	DB	'e encryption. Crypto support must be', 0aH, '                '
	DB	'               enabled at compile-time. Can be ''on'' or ''of'
	DB	'f'' or', 0aH, '                               a list of featu'
	DB	'res separated with a ''+''. [off]', 0aH, '                   '
	DB	'                - on: Enable all encryption features.', 0aH, ' '
	DB	'                                  - off: Disable selective en'
	DB	'cryption.', 0aH, '                                   - mvs: M'
	DB	'otion vector magnitudes.', 0aH, '                            '
	DB	'       - mv_signs: Motion vector signs.', 0aH, '             '
	DB	'                      - trans_coeffs: Coefficient magnitudes.'
	DB	0aH, '                                   - trans_coeff_signs: '
	DB	'Coefficient signs.', 0aH, '                                  '
	DB	' - intra_pred_modes: Intra prediction modes.', 0aH, '      --'
	DB	'key <string>         : Encryption key [16,213,27,56,255,127,2'
	DB	'42,112,', 0aH, '                                             '
	DB	'  97,126,197,204,25,59,38,30]', 0aH, '      --stats-file-pref'
	DB	'ix    : A prefix used for stats files that include', 0aH, '  '
	DB	'                             bits, lambda, distortion, and qp'
	DB	' for each ctu.', 0aH, '                               These a'
	DB	're meant for debugging and are not', 0aH, '                  '
	DB	'             written unless the prefix is defined.', 0aH, 0aH
	DB	'Video structure:', 0aH, '  -q, --qp <integer>         : Quant'
	DB	'ization parameter [22]', 0aH, '  -p, --period <integer>     :'
	DB	' Period of intra pictures [64]', 0aH, '                      '
	DB	'             - 0: Only first picture is intra.', 0aH, '      '
	DB	'                             - 1: All pictures are intra.', 0aH
	DB	'                                   - N: Every Nth picture is '
	DB	'intra.', 0aH, '      --vps-period <integer> : How often the v'
	DB	'ideo parameter set is re-sent [0]', 0aH, '                   '
	DB	'                - 0: Only send VPS with the first frame.', 0aH
	DB	'                                   - N: Send VPS with every N'
	DB	'th intra frame.', 0aH, '  -r, --ref <integer>        : Number'
	DB	' of reference frames, in range 1..15 [4]', 0aH, '      --gop '
	DB	'<string>         : GOP structure [lp-g4d3t1]', 0aH, '        '
	DB	'                           -  0: Disabled', 0aH, '           '
	DB	'                        -  8: B-frame pyramid of length 8', 0aH
	DB	'                                   - 16: B-frame pyramid of l'
	DB	'ength 16', 0aH, '                                   - lp-<str'
	DB	'ing>: Low-delay P/B-frame GOP', 0aH, '                       '
	DB	'              (e.g. lp-g8d4t2, see README)', 0aH, '      --in'
	DB	'tra-qp-offset <int>: QP offset for intra frames [-51..51] [au'
	DB	'to]', 0aH, '                                   - N: Set QP of'
	DB	'fset to N.', 0aH, '                                   - auto:'
	DB	' Select offset automatically based', 0aH, '                  '
	DB	'                   on GOP length.', 0aH, '      --(no-)open-g'
	DB	'op        : Use open GOP configuration. [enabled]', 0aH, '   '
	DB	'   --cqmfile <filename>   : Read custom quantization matrices'
	DB	' from a file.', 0aH, '      --scaling-list <string>: Set scal'
	DB	'ing list mode. [off]', 0aH, '                                '
	DB	'   - off: Disable scaling lists.', 0aH, '                    '
	DB	'               - custom: use custom list (with --cqmfile).', 0aH
	DB	'                                   - default: Use default lis'
	DB	'ts.', 0aH, '      --bitrate <integer>    : Target bitrate [0]'
	DB	0aH, '                                   - 0: Disable rate con'
	DB	'trol.', 0aH, '                                   - N: Target '
	DB	'N bits per second.', 0aH, '      --rc-algorithm <string>: Sel'
	DB	'ect used rc-algorithm. [lambda]', 0aH, '                     '
	DB	'              - lambda: rate control from:', 0aH, '          '
	DB	'                           DOI: 10.1109/TIP.2014.2336550 ', 0aH
	DB	'                                   - oba: DOI: 10.1109/TCSVT.'
	DB	'2016.2589878', 0aH, '      --(no-)intra-bits      : Use Hadam'
	DB	'ard cost based allocation for intra', 0aH, '                 '
	DB	'              frames. Default on for gop 8 and off for lp-gop'
	DB	0aH, '      --(no-)clip-neighbour  : On oba based rate control'
	DB	' whether to clip ', 0aH, '                               lamb'
	DB	'da values to same frame''s ctus or previous''.', 0aH, '      '
	DB	'                         Default on for RA GOPS and disabled '
	DB	'for LP.', 0aH, '      --(no-)lossless        : Use lossless c'
	DB	'oding. [disabled]', 0aH, '      --mv-constraint <string> : Co'
	DB	'nstrain movement vectors. [none]', 0aH, '                    '
	DB	'               - none: No constraint', 0aH, '                '
	DB	'                   - frametile: Constrain within the tile.', 0aH
	DB	'                                   - frametilemargin: Constra'
	DB	'in even more.', 0aH, '      --roi <filename>       : Use a de'
	DB	'lta QP map for region of interest.', 0aH, '                  '
	DB	'             Reads an array of delta QP values from a text', 0aH
	DB	'                               file. The file format is: widt'
	DB	'h and height of', 0aH, '                               the QP'
	DB	' delta map followed by width*height delta', 0aH, '           '
	DB	'                    QP values in raster order. The map can be'
	DB	' of any', 0aH, '                               size and will '
	DB	'be scaled to the video size.', 0aH, '      --set-qp-in-cu    '
	DB	'     : Set QP at CU level keeping pic_init_qp_minus26.', 0aH, ' '
	DB	'                              in PPS and slice_qp_delta in sl'
	DB	'ize header zero.', 0aH, '      --(no-)erp-aqp         : Use a'
	DB	'daptive QP for 360 degree video with', 0aH, '                '
	DB	'               equirectangular projection. [disabled]', 0aH, ' '
	DB	'     --level <number>       : Use the given HEVC level in the'
	DB	' output and give', 0aH, '                               an er'
	DB	'ror if level limits are exceeded. [6.2]', 0aH, '             '
	DB	'                      - 1, 2, 2.1, 3, 3.1, 4, 4.1, 5, 5.1, 5.'
	DB	'2, 6,', 0aH, '                                     6.1, 6.2', 0aH
	DB	'      --force-level <number> : Same as --level but warnings i'
	DB	'nstead of errors.', 0aH, '      --high-tier            : Used'
	DB	' with --level. Use high tier bitrate limits', 0aH, '         '
	DB	'                      instead of the main tier limits during '
	DB	'encoding.', 0aH, '                               High tier re'
	DB	'quires level 4 or higher.', 0aH, '      --(no-)vaq <integer> '
	DB	'  : Enable variance adaptive quantization with given', 0aH, ' '
	DB	'                              strength, in range 1..20. Recom'
	DB	'mended: 5.', 0aH, '                               [disabled]', 0aH
	DB	0aH, 'Compression tools:', 0aH, '      --(no-)deblock <beta:tc'
	DB	'> : Deblocking filter. [0:0]', 0aH, '                        '
	DB	'           - beta: Between -6 and 6', 0aH, '                 '
	DB	'                  - tc: Between -6 and 6', 0aH, '      --sao '
	DB	'<string>         : Sample Adaptive Offset [full]', 0aH, '    '
	DB	'                               - off: SAO disabled', 0aH, '  '
	DB	'                                 - band: Band offset only', 0aH
	DB	'                                   - edge: Edge offset only', 0aH
	DB	'                                   - full: Full SAO', 0aH, ' '
	DB	'     --(no-)rdoq            : Rate-distortion optimized quant'
	DB	'ization [enabled]', 0aH, '      --(no-)rdoq-skip       : Skip'
	DB	' RDOQ for 4x4 blocks. [disabled]', 0aH, '      --(no-)signhid'
	DB	'e        : Sign hiding [disabled]', 0aH, '      --(no-)smp   '
	DB	'          : Symmetric motion partition [disabled]', 0aH, '   '
	DB	'   --(no-)amp             : Asymmetric motion partition [disa'
	DB	'bled]', 0aH, '      --rd <integer>         : Intra mode searc'
	DB	'h complexity [0]', 0aH, '                                   -'
	DB	' 0: Skip intra if inter is good enough.', 0aH, '             '
	DB	'                      - 1: Rough intra mode search with SATD.'
	DB	0aH, '                                   - 2: Refine intra mod'
	DB	'e search with SSE.', 0aH, '                                  '
	DB	' - 3: Try all intra modes and enable intra', 0aH, '          '
	DB	'                              chroma mode search.', 0aH, '   '
	DB	'   --(no-)mv-rdo          : Rate-distortion optimized motion '
	DB	'vector costs', 0aH, '                               [disabled'
	DB	']', 0aH, '      --(no-)zero-coeff-rdo  : If a CU is set inter'
	DB	', check if forcing zero', 0aH, '                             '
	DB	'  residual improves the RD cost. [enabled]', 0aH, '      --(n'
	DB	'o-)full-intra-search : Try all intra modes during rough searc'
	DB	'h.', 0aH, '                               [disabled]', 0aH, ' '
	DB	'     --(no-)transform-skip  : Try transform skip [disabled]', 0aH
	DB	'      --me <string>          : Integer motion estimation algo'
	DB	'rithm [hexbs]', 0aH, '                                   - he'
	DB	'xbs: Hexagon Based Search', 0aH, '                           '
	DB	'        - tz:    Test Zone Search', 0aH, '                   '
	DB	'                - full:  Full Search', 0aH, '                '
	DB	'                   - full8, full16, full32, full64', 0aH, '  '
	DB	'                                 - dia:   Diamond Search', 0aH
	DB	'      --me-steps <integer>   : Motion estimation search step '
	DB	'limit. Only', 0aH, '                               affects '''
	DB	'hexbs'' and ''dia''. [-1]', 0aH, '      --subme <integer>    '
	DB	'  : Fractional pixel motion estimation level [4]', 0aH, '    '
	DB	'                               - 0: Integer motion estimation'
	DB	' only', 0aH, '                                   - 1: + 1/2-p'
	DB	'ixel horizontal and vertical', 0aH, '                        '
	DB	'           - 2: + 1/2-pixel diagonal', 0aH, '                '
	DB	'                   - 3: + 1/4-pixel horizontal and vertical', 0aH
	DB	'                                   - 4: + 1/4-pixel diagonal', 0aH
	DB	'      --pu-depth-inter <int>-<int> : Inter prediction units s'
	DB	'izes [0-3]', 0aH, '                                   - 0, 1,'
	DB	' 2, 3: from 64x64 to 8x8', 0aH, '                            '
	DB	'       - Accepts a list of values separated by '',''', 0aH, ' '
	DB	'                                    for setting separate dept'
	DB	'hs per GOP layer', 0aH, '                                    '
	DB	' (values can be omitted to use the first', 0aH, '            '
	DB	'                         value for the respective layer).', 0aH
	DB	'      --pu-depth-intra <int>-<int> : Intra prediction units s'
	DB	'izes [1-4]', 0aH, '                                   - 0, 1,'
	DB	' 2, 3, 4: from 64x64 to 4x4', 0aH, '                         '
	DB	'          - Accepts a list of values separated by '',''', 0aH
	DB	'                                     for setting separate dep'
	DB	'ths per GOP layer', 0aH, '                                   '
	DB	'  (values can be omitted to use the first', 0aH, '           '
	DB	'                          value for the respective layer).', 0aH
	DB	'      --ml-pu-depth-intra    : Predict the pu-depth-intra usi'
	DB	'ng machine', 0aH, '                                learning t'
	DB	'rees, overrides the', 0aH, '                                -'
	DB	'-pu-depth-intra parameter. [disabled]', 0aH, '      --tr-dept'
	DB	'h-intra <int> : Transform split depth for intra blocks [0]', 0aH
	DB	'      --(no-)bipred          : Bi-prediction [disabled]', 0aH
	DB	'      --cu-split-termination <string> : CU split search termi'
	DB	'nation [zero]', 0aH, '                                   - of'
	DB	'f: Don''t terminate early.', 0aH, '                          '
	DB	'         - zero: Terminate when residual is zero.', 0aH, '   '
	DB	'   --me-early-termination <string> : Motion estimation termin'
	DB	'ation [on]', 0aH, '                                   - off: '
	DB	'Don''t terminate early.', 0aH, '                             '
	DB	'      - on: Terminate early.', 0aH, '                        '
	DB	'           - sensitive: Terminate even earlier.', 0aH, '     '
	DB	' --fast-residual-cost <int> : Skip CABAC cost for residual co'
	DB	'efficients', 0aH, '                                   when QP'
	DB	' is below the limit. [0]', 0aH, '      --fast-coeff-table <st'
	DB	'ring> : Read custom weights for residual', 0aH, '            '
	DB	'                        coefficients from a file instead of u'
	DB	'sing', 0aH, '                                    defaults [de'
	DB	'fault]', 0aH, '      --fast-rd-sampling : Enable learning dat'
	DB	'a sampling for fast coefficient', 0aH, '                     '
	DB	'      table generation', 0aH, '      --fastrd-accuracy-check '
	DB	': Evaluate the accuracy of fast coefficient', 0aH, '         '
	DB	'                       prediction', 0aH, '      --fastrd-outd'
	DB	'ir : Directory to which to output sampled data or accuracy', 0aH
	DB	'                        data, into <fastrd-outdir>/0.txt to 5'
	DB	'0.txt, one file', 0aH, '                        for each QP t'
	DB	'hat blocks were estimated on', 0aH, '      --(no-)intra-rdo-e'
	DB	't    : Check intra modes in rdo stage only until', 0aH, '    '
	DB	'                           a zero coefficient CU is found. [d'
	DB	'isabled]', 0aH, '      --(no-)early-skip      : Try to find s'
	DB	'kip cu from merge candidates.', 0aH, '                       '
	DB	'        Perform no further search if skip is found.', 0aH, ' '
	DB	'                              For rd=0..1: Try the first cand'
	DB	'idate.', 0aH, '                               For rd=2.. : Tr'
	DB	'y the best candidate based', 0aH, '                          '
	DB	'                  on luma satd cost. [enabled]', 0aH, '      '
	DB	'--max-merge <integer>  : Maximum number of merge candidates, '
	DB	'1..5 [5]', 0aH, '      --(no-)implicit-rdpcm  : Implicit resi'
	DB	'dual DPCM. Currently only supported', 0aH, '                 '
	DB	'              with lossless coding. [disabled]', 0aH, '      '
	DB	'--(no-)tmvp            : Temporal motion vector prediction [e'
	DB	'nabled]', 0aH, 0aH, 'Parallel processing:', 0aH, '      --thr'
	DB	'eads <integer>    : Number of threads to use [auto]', 0aH, ' '
	DB	'                                  - 0: Process everything wit'
	DB	'h main thread.', 0aH, '                                   - N'
	DB	': Use N threads for encoding.', 0aH, '                       '
	DB	'            - auto: Select automatically.', 0aH, '      --owf'
	DB	' <integer>        : Frame-level parallelism [auto]', 0aH, '  '
	DB	'                                 - N: Process N+1 frames at a'
	DB	' time.', 0aH, '                                   - auto: Sel'
	DB	'ect automatically.', 0aH, '      --(no-)wpp             : Wav'
	DB	'efront parallel processing. [enabled]', 0aH, '               '
	DB	'                Enabling tiles automatically disables WPP.', 0aH
	DB	'                               To enable WPP with tiles, re-e'
	DB	'nable it after', 0aH, '                               enablin'
	DB	'g tiles. Enabling wpp with tiles is,', 0aH, '                '
	DB	'               however, an experimental feature since it is', 0aH
	DB	'                               not supported in any HEVC prof'
	DB	'ile.', 0aH, '      --tiles <int>x<int>    : Split picture int'
	DB	'o width x height uniform tiles.', 0aH, '      --tiles-width-s'
	DB	'plit <string>|u<int> :', 0aH, '                              '
	DB	'     - <string>: A comma-separated list of tile', 0aH, '     '
	DB	'                                          column pixel coordi'
	DB	'nates.', 0aH, '                                   - u<int>: N'
	DB	'umber of tile columns of uniform', 0aH, '                    '
	DB	'                         width.', 0aH, '      --tiles-height-'
	DB	'split <string>|u<int> :', 0aH, '                             '
	DB	'      - <string>: A comma-separated list of tile row', 0aH, ' '
	DB	'                                              column pixel co'
	DB	'ordinates.', 0aH, '                                   - u<int'
	DB	'>: Number of tile rows of uniform', 0aH, '                   '
	DB	'                          height.', 0aH, '      --slices <str'
	DB	'ing>      : Control how slices are used.', 0aH, '            '
	DB	'                       - tiles: Put tiles in independent slic'
	DB	'es.', 0aH, '                                   - wpp: Put row'
	DB	's in dependent slices.', 0aH, '                              '
	DB	'     - tiles+wpp: Do both.', 0aH, '      --partial-coding <x-'
	DB	'offset>!<y-offset>!<slice-width>!<slice-height>', 0aH, '     '
	DB	'                        : Encode partial frame.', 0aH, '     '
	DB	'                          Parts must be merged to form a vali'
	DB	'd bitstream.', 0aH, '                               X and Y a'
	DB	're CTU offsets.', 0aH, '                               Slice '
	DB	'width and height must be divisible by CTU', 0aH, '           '
	DB	'                    in pixels unless it is the last CTU row/c'
	DB	'olumn.', 0aH, '                               This parameter '
	DB	'is used by kvaShare.', 0aH, 0aH, 'Video Usability Information'
	DB	':', 0aH, '      --sar <width:height>   : Specify sample aspec'
	DB	't ratio', 0aH, '      --overscan <string>    : Specify crop o'
	DB	'verscan setting [undef]', 0aH, '                             '
	DB	'      - undef, show, crop', 0aH, '      --videoformat <string'
	DB	'> : Specify video format [undef]', 0aH, '                    '
	DB	'               - undef, component, pal, ntsc, secam, mac', 0aH
	DB	'      --range <string>       : Specify color range [tv]', 0aH
	DB	'                                   - tv, pc', 0aH, '      --c'
	DB	'olorprim <string>   : Specify color primaries [undef]', 0aH, ' '
	DB	'                                  - undef, bt709, bt470m, bt4'
	DB	'70bg,', 0aH, '                                     smpte170m,'
	DB	' smpte240m, film, bt2020', 0aH, '      --transfer <string>   '
	DB	' : Specify transfer characteristics [undef]', 0aH, '         '
	DB	'                          - undef, bt709, bt470m, bt470bg,', 0aH
	DB	'                                     smpte170m, smpte240m, li'
	DB	'near, log100,', 0aH, '                                     lo'
	DB	'g316, iec61966-2-4, bt1361e,', 0aH, '                        '
	DB	'             iec61966-2-1, bt2020-10, bt2020-12', 0aH, '     '
	DB	' --colormatrix <string> : Specify color matrix setting [undef'
	DB	']', 0aH, '                                   - undef, bt709, '
	DB	'fcc, bt470bg, smpte170m,', 0aH, '                            '
	DB	'         smpte240m, GBR, YCgCo, bt2020nc, bt2020c', 0aH, '   '
	DB	'   --chromaloc <integer>  : Specify chroma sample location (0'
	DB	' to 5) [0]', 0aH, 0aH, 'Deprecated parameters: (might be remo'
	DB	'ved at some point)', 0aH, '  -w, --width <integer>       : Us'
	DB	'e --input-res.', 0aH, '  -h, --height <integer>      : Use --'
	DB	'input-res.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@IPONMLFI@Kvazaar?52?41?40?6Kvazaar?5license?3?5@
CONST	SEGMENT
??_C@_0CN@IPONMLFI@Kvazaar?52?41?40?6Kvazaar?5license?3?5@ DB 'Kvazaar 2.'
	DB	'1.0', 0aH, 'Kvazaar license: 3-clause BSD', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GN@MONMHAHB@Kvazaar?5usage?3?5?9i?5and?5?9?9input?9r@
CONST	SEGMENT
??_C@_0GN@MONMHAHB@Kvazaar?5usage?3?5?9i?5and?5?9?9input?9r@ DB 'Kvazaar '
	DB	'usage: -i and --input-res to set input, -o to set output', 0aH
	DB	'               --help for more information', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GHFOIOEE@Input?5error?3?5vps_period?5must?5be@
CONST	SEGMENT
??_C@_0CO@GHFOIOEE@Input?5error?3?5vps_period?5must?5be@ DB 'Input error:'
	DB	' vps_period must be non-negative', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HAGMBFIL@Input?5error?3?5Extra?5argument?5fou@
CONST	SEGMENT
??_C@_0CJ@HAGMBFIL@Input?5error?3?5Extra?5argument?5fou@ DB 'Input error:'
	DB	' Extra argument found: "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ODNINGIA@invalid?5argument?3?5?$CFs?$DN?$CFs?6@
CONST	SEGMENT
??_C@_0BJ@ODNINGIA@invalid?5argument?3?5?$CFs?$DN?$CFs?6@ DB 'invalid arg'
	DB	'ument: %s=%s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@OEJJGLKH@Input?5error?3?5More?5than?5one?5debu@
CONST	SEGMENT
??_C@_0DF@OEJJGLKH@Input?5error?3?5More?5than?5one?5debu@ DB 'Input error'
	DB	': More than one debug output file given.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@JCJFLGMJ@Input?5error?3?5More?5than?5one?5outp@
CONST	SEGMENT
??_C@_0CP@JCJFLGMJ@Input?5error?3?5More?5than?5one?5outp@ DB 'Input error'
	DB	': More than one output file given.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@OBCHOMBF@Input?5error?3?5More?5than?5one?5inpu@
CONST	SEGMENT
??_C@_0CO@OBCHOMBF@Input?5error?3?5More?5than?5one?5inpu@ DB 'Input error'
	DB	': More than one input file given.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKEEACFK@?4yuv@
CONST	SEGMENT
??_C@_04HKEEACFK@?4yuv@ DB '.yuv', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KCCKCODH@?4y4m@
CONST	SEGMENT
??_C@_04KCCKCODH@?4y4m@ DB '.y4m', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08MHEBOPLH@?$CFdx?$CFd?$CF?$CKs@
CONST	SEGMENT
??_C@_08MHEBOPLH@?$CFdx?$CFd?$CF?$CKs@ DB '%dx%d%*s', 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$detect_file_format DD 025052a01H
	DD	010e2313H
	DD	070070029H
	DD	05006H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
detect_file_format$rtcName$0 DB 065H
	DB	06eH
	DB	064H
	DB	069H
	DB	06eH
	DB	067H
	DB	05fH
	DB	06cH
	DB	06fH
	DB	077H
	DB	065H
	DB	072H
	DB	05fH
	DB	063H
	DB	061H
	DB	073H
	DB	065H
	DB	00H
	ORG $+14
detect_file_format$rtcVarDesc DD 044H
	DD	04H
	DQ	FLAT:detect_file_format$rtcName$0
	ORG $+48
detect_file_format$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:detect_file_format$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$select_input_res_auto DD 025053401H
	DD	0118231dH
	DD	070110027H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$print_frame_info DD 045053901H
	DD	011d4322H
	DD	07016002bH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$print_help DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$print_version DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$print_usage DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmdline_opts_free DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmdline_opts_parse DD 035053301H
	DD	0117331cH
	DD	070100037H
	DD	0500fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
cmdline_opts_parse$rtcName$0 DB 06cH
	DB	06fH
	DB	06eH
	DB	067H
	DB	05fH
	DB	06fH
	DB	070H
	DB	074H
	DB	069H
	DB	06fH
	DB	06eH
	DB	073H
	DB	05fH
	DB	069H
	DB	06eH
	DB	064H
	DB	065H
	DB	078H
	DB	00H
	ORG $+13
cmdline_opts_parse$rtcVarDesc DD 074H
	DD	04H
	DQ	FLAT:cmdline_opts_parse$rtcName$0
	ORG $+48
cmdline_opts_parse$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:cmdline_opts_parse$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sscanf DD 025053901H
	DD	011d2322H
	DD	070160025H
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
sscanf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
sscanf$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:sscanf$rtcName$0
	ORG $+48
sscanf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:sscanf$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsscanf_l DD 035053901H
	DD	011d3322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fprintf DD 025053901H
	DD	011d2322H
	DD	070160025H
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
fprintf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
fprintf$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:fprintf$rtcName$0
	ORG $+48
fprintf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:fprintf$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 035053901H
	DD	011d3322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_scanf_options DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\cli.c
;	COMDAT detect_file_format
_TEXT	SEGMENT
sub_str$ = 8
ending_lower_case$ = 36
i$4 = 68
file_name$ = 320
detect_file_format PROC					; COMDAT

; 211  : static int detect_file_format(const char *file_name) {

	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	lea	rcx, OFFSET FLAT:__541E1734_cli@c
	call	__CheckForDebuggerJustMyCode

; 212  :   if (!file_name) return 0;

	cmp	QWORD PTR file_name$[rbp], 0
	jne	SHORT $LN5@detect_fil
	xor	eax, eax
	jmp	$LN1@detect_fil
$LN5@detect_fil:

; 213  : 
; 214  :   // Find the last dot in the file name.
; 215  :   // If delim is not found, return 0
; 216  :   char* sub_str = (char*)strrchr(file_name, '.');

	mov	edx, 46					; 0000002eH
	mov	rcx, QWORD PTR file_name$[rbp]
	call	strrchr
	mov	QWORD PTR sub_str$[rbp], rax

; 217  :   if (!sub_str) return 0;

	cmp	QWORD PTR sub_str$[rbp], 0
	jne	SHORT $LN6@detect_fil
	xor	eax, eax
	jmp	$LN1@detect_fil
$LN6@detect_fil:

; 218  :   if (strlen(sub_str) != 4) return 0;

	mov	rcx, QWORD PTR sub_str$[rbp]
	call	strlen
	cmp	rax, 4
	je	SHORT $LN7@detect_fil
	xor	eax, eax
	jmp	SHORT $LN1@detect_fil
$LN7@detect_fil:

; 219  :   char ending_lower_case[4];
; 220  :   for(int i = 0; i < 4; i++){

	mov	DWORD PTR i$4[rbp], 0
	jmp	SHORT $LN4@detect_fil
$LN2@detect_fil:
	mov	eax, DWORD PTR i$4[rbp]
	inc	eax
	mov	DWORD PTR i$4[rbp], eax
$LN4@detect_fil:
	cmp	DWORD PTR i$4[rbp], 4
	jge	SHORT $LN3@detect_fil

; 221  :     ending_lower_case[i] = tolower(sub_str[i]);

	movsxd	rax, DWORD PTR i$4[rbp]
	mov	rcx, QWORD PTR sub_str$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	mov	ecx, eax
	call	QWORD PTR __imp_tolower
	movsxd	rcx, DWORD PTR i$4[rbp]
	mov	BYTE PTR ending_lower_case$[rbp+rcx], al

; 222  :   }

	jmp	SHORT $LN2@detect_fil
$LN3@detect_fil:

; 223  : 
; 224  :   // KVZ_FILE_FORMAT
; 225  :   if (strncmp(ending_lower_case, ".y4m", 4) == 0) return 1;

	mov	r8d, 4
	lea	rdx, OFFSET FLAT:??_C@_04KCCKCODH@?4y4m@
	lea	rcx, QWORD PTR ending_lower_case$[rbp]
	call	QWORD PTR __imp_strncmp
	test	eax, eax
	jne	SHORT $LN8@detect_fil
	mov	eax, 1
	jmp	SHORT $LN1@detect_fil
	jmp	SHORT $LN9@detect_fil
$LN8@detect_fil:

; 226  :   else if (strncmp(ending_lower_case, ".yuv", 4) == 0) return 2;

	mov	r8d, 4
	lea	rdx, OFFSET FLAT:??_C@_04HKEEACFK@?4yuv@
	lea	rcx, QWORD PTR ending_lower_case$[rbp]
	call	QWORD PTR __imp_strncmp
	test	eax, eax
	jne	SHORT $LN10@detect_fil
	mov	eax, 2
	jmp	SHORT $LN1@detect_fil
$LN10@detect_fil:
$LN9@detect_fil:

; 227  : 
; 228  :   return 0;

	xor	eax, eax
$LN1@detect_fil:

; 229  : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:detect_file_format$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
detect_file_format ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\cli.c
;	COMDAT select_input_res_auto
_TEXT	SEGMENT
sub_str$ = 8
success$ = 36
tv89 = 244
tv86 = 244
tv65 = 248
tv78 = 256
file_name$ = 304
out_width$ = 312
out_height$ = 320
select_input_res_auto PROC				; COMDAT

; 182  : {

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+344]
	lea	rcx, OFFSET FLAT:__541E1734_cli@c
	call	__CheckForDebuggerJustMyCode

; 183  :   if (!file_name) return 0;

	cmp	QWORD PTR file_name$[rbp], 0
	jne	SHORT $LN8@select_inp
	xor	eax, eax
	jmp	$LN1@select_inp
$LN8@select_inp:

; 184  : 
; 185  :   // Find the last delimiter char ( / or \ ). Hope the other kind is not used in the name.
; 186  :   // If delim is not found, set pointer to the beginning.
; 187  :   unsigned char* sub_str = (unsigned char*)MAX(strrchr(file_name, '/'), strrchr(file_name, '\\'));

	mov	edx, 47					; 0000002fH
	mov	rcx, QWORD PTR file_name$[rbp]
	call	strrchr
	mov	QWORD PTR tv65[rbp], rax
	mov	edx, 92					; 0000005cH
	mov	rcx, QWORD PTR file_name$[rbp]
	call	strrchr
	mov	rcx, QWORD PTR tv65[rbp]
	cmp	rcx, rax
	jbe	SHORT $LN13@select_inp
	mov	edx, 47					; 0000002fH
	mov	rcx, QWORD PTR file_name$[rbp]
	call	strrchr
	mov	QWORD PTR tv78[rbp], rax
	jmp	SHORT $LN14@select_inp
$LN13@select_inp:
	mov	edx, 92					; 0000005cH
	mov	rcx, QWORD PTR file_name$[rbp]
	call	strrchr
	mov	QWORD PTR tv78[rbp], rax
$LN14@select_inp:
	mov	rax, QWORD PTR tv78[rbp]
	mov	QWORD PTR sub_str$[rbp], rax

; 188  :   if (!sub_str) sub_str = (unsigned char*)file_name;

	cmp	QWORD PTR sub_str$[rbp], 0
	jne	SHORT $LN9@select_inp
	mov	rax, QWORD PTR file_name$[rbp]
	mov	QWORD PTR sub_str$[rbp], rax
$LN9@select_inp:

; 189  : 
; 190  :   int success = 0;

	mov	DWORD PTR success$[rbp], 0
$LN4@select_inp:

; 191  :   // Try if the substring starts with "<int>x<int>" without either of them being 0
; 192  :   do {
; 193  :     success = (sscanf((char*)sub_str, "%dx%d%*s", out_width, out_height) == 2);

	mov	r9, QWORD PTR out_height$[rbp]
	mov	r8, QWORD PTR out_width$[rbp]
	lea	rdx, OFFSET FLAT:??_C@_08MHEBOPLH@?$CFdx?$CFd?$CF?$CKs@
	mov	rcx, QWORD PTR sub_str$[rbp]
	call	sscanf
	cmp	eax, 2
	jne	SHORT $LN15@select_inp
	mov	DWORD PTR tv86[rbp], 1
	jmp	SHORT $LN16@select_inp
$LN15@select_inp:
	mov	DWORD PTR tv86[rbp], 0
$LN16@select_inp:
	mov	eax, DWORD PTR tv86[rbp]
	mov	DWORD PTR success$[rbp], eax

; 194  :     success &= (*out_width > 0 && *out_height > 0);

	mov	rax, QWORD PTR out_width$[rbp]
	cmp	DWORD PTR [rax], 0
	jle	SHORT $LN17@select_inp
	mov	rax, QWORD PTR out_height$[rbp]
	cmp	DWORD PTR [rax], 0
	jle	SHORT $LN17@select_inp
	mov	DWORD PTR tv89[rbp], 1
	jmp	SHORT $LN18@select_inp
$LN17@select_inp:
	mov	DWORD PTR tv89[rbp], 0
$LN18@select_inp:
	mov	eax, DWORD PTR tv89[rbp]
	mov	ecx, DWORD PTR success$[rbp]
	and	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR success$[rbp], eax
$LN7@select_inp:

; 195  :     // Move to the next char until a digit is found or the string ends
; 196  :     do{
; 197  :       ++sub_str;

	mov	rax, QWORD PTR sub_str$[rbp]
	inc	rax
	mov	QWORD PTR sub_str$[rbp], rax

; 198  :     } while (*sub_str != 0 && !isdigit(*sub_str));

	mov	rax, QWORD PTR sub_str$[rbp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN10@select_inp
	mov	rax, QWORD PTR sub_str$[rbp]
	movzx	eax, BYTE PTR [rax]
	mov	ecx, eax
	call	QWORD PTR __imp_isdigit
	test	eax, eax
	je	SHORT $LN7@select_inp
$LN10@select_inp:

; 199  :     // Continue until "<int>x<int>" is found or the string ends
; 200  :   } while (*sub_str != 0 && !success);

	mov	rax, QWORD PTR sub_str$[rbp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN11@select_inp
	cmp	DWORD PTR success$[rbp], 0
	je	$LN4@select_inp
$LN11@select_inp:

; 201  : 
; 202  :   return success;

	mov	eax, DWORD PTR success$[rbp]
$LN1@select_inp:

; 203  : }

	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
select_input_res_auto ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\cli.c
;	COMDAT print_frame_info
_TEXT	SEGMENT
j$1 = 4
j$2 = 36
tv65 = 244
tv164 = 248
tv144 = 248
tv86 = 248
tv72 = 248
tv76 = 252
tv165 = 256
tv145 = 256
tv89 = 256
tv92 = 264
info$ = 304
frame_psnr$ = 312
bytes$ = 320
print_psnr$ = 328
avg_qp$ = 336
print_frame_info PROC					; COMDAT

; 686  : {

$LN11:
	mov	BYTE PTR [rsp+32], r9b
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+64]
	mov	rdi, rsp
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	lea	rcx, OFFSET FLAT:__541E1734_cli@c
	call	__CheckForDebuggerJustMyCode

; 687  :   fprintf(stderr, "POC %4d QP %2d AVG QP %.1f (%c-frame) %10d bits",

	mov	eax, DWORD PTR bytes$[rbp]
	shl	eax, 3
	mov	DWORD PTR tv65[rbp], eax
	mov	rcx, QWORD PTR info$[rbp]
	mov	eax, DWORD PTR [rcx+12]
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	eax, edx
	cdqe
	lea	rcx, OFFSET FLAT:??_C@_03KCKBGKKJ@BPI@
	movsx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv72[rbp], eax
	mov	rcx, QWORD PTR info$[rbp]
	movsx	ecx, BYTE PTR [rcx+4]
	mov	DWORD PTR tv76[rbp], ecx
	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	mov	ecx, DWORD PTR tv65[rbp]
	mov	DWORD PTR [rsp+48], ecx
	mov	ecx, DWORD PTR tv72[rbp]
	mov	DWORD PTR [rsp+40], ecx
	movsd	xmm0, QWORD PTR avg_qp$[rbp]
	movsd	QWORD PTR [rsp+32], xmm0
	mov	ecx, DWORD PTR tv76[rbp]
	mov	r9d, ecx
	mov	rcx, QWORD PTR info$[rbp]
	mov	r8d, DWORD PTR [rcx]
	lea	rdx, OFFSET FLAT:??_C@_0DA@DINMEMCD@POC?5?$CF4d?5QP?5?$CF2d?5AVG?5QP?5?$CF?41f?5?$CI?$CFc?9@
	mov	rcx, rax
	call	fprintf

; 688  :           info->poc,
; 689  :           info->qp,
; 690  :           avg_qp,
; 691  :           "BPI"[info->slice_type % 3],
; 692  :           bytes << 3);
; 693  : 
; 694  :   if (print_psnr) {

	movzx	eax, BYTE PTR print_psnr$[rbp]
	test	eax, eax
	je	$LN8@print_fram

; 695  :     fprintf(stderr, " PSNR Y %2.4f U %2.4f V %2.4f",

	mov	eax, 8
	imul	rax, rax, 2
	mov	QWORD PTR tv86[rbp], rax
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	QWORD PTR tv89[rbp], rcx
	mov	edx, 8
	imul	rdx, rdx, 0
	mov	QWORD PTR tv92[rbp], rdx
	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	mov	rcx, QWORD PTR frame_psnr$[rbp]
	mov	rdx, QWORD PTR tv86[rbp]
	movsd	xmm0, QWORD PTR [rcx+rdx]
	movsd	QWORD PTR [rsp+32], xmm0
	mov	rcx, QWORD PTR frame_psnr$[rbp]
	mov	rdx, QWORD PTR tv89[rbp]
	movsd	xmm3, QWORD PTR [rcx+rdx]
	movq	r9, xmm3
	mov	rcx, QWORD PTR frame_psnr$[rbp]
	mov	rdx, QWORD PTR tv92[rbp]
	movsd	xmm2, QWORD PTR [rcx+rdx]
	movq	r8, xmm2
	lea	rdx, OFFSET FLAT:??_C@_0BO@MFMKFKOI@?5PSNR?5Y?5?$CF2?44f?5U?5?$CF2?44f?5V?5?$CF2?44f@
	mov	rcx, rax
	call	fprintf
$LN8@print_fram:

; 696  :             frame_psnr[0], frame_psnr[1], frame_psnr[2]);
; 697  :   }
; 698  : 
; 699  :   if (info->slice_type != KVZ_SLICE_I) {

	mov	rax, QWORD PTR info$[rbp]
	cmp	DWORD PTR [rax+12], 2
	je	$LN9@print_fram

; 700  :     // Print reference picture lists
; 701  :     fprintf(stderr, " [L0 ");

	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	lea	rdx, OFFSET FLAT:??_C@_05GGHPIDAH@?5?$FLL0?5@
	mov	rcx, rax
	call	fprintf

; 702  :     for (int j = 0; j < info->ref_list_len[0]; j++) {

	mov	DWORD PTR j$1[rbp], 0
	jmp	SHORT $LN4@print_fram
$LN2@print_fram:
	mov	eax, DWORD PTR j$1[rbp]
	inc	eax
	mov	DWORD PTR j$1[rbp], eax
$LN4@print_fram:
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR info$[rbp]
	mov	eax, DWORD PTR [rcx+rax+144]
	cmp	DWORD PTR j$1[rbp], eax
	jge	SHORT $LN3@print_fram

; 703  :       fprintf(stderr, "%d ", info->ref_list[0][j]);

	mov	eax, 64					; 00000040H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR info$[rbp]
	lea	rax, QWORD PTR [rcx+rax+16]
	mov	QWORD PTR tv144[rbp], rax
	movsxd	rcx, DWORD PTR j$1[rbp]
	mov	QWORD PTR tv145[rbp], rcx
	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	mov	rdx, QWORD PTR tv145[rbp]
	mov	rcx, QWORD PTR tv144[rbp]
	mov	r8d, DWORD PTR [rcx+rdx*4]
	lea	rdx, OFFSET FLAT:??_C@_03JDANDILB@?$CFd?5@
	mov	rcx, rax
	call	fprintf

; 704  :     }

	jmp	SHORT $LN2@print_fram
$LN3@print_fram:

; 705  :     fprintf(stderr, "] [L1 ");

	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	lea	rdx, OFFSET FLAT:??_C@_06JBBBPJK@?$FN?5?$FLL1?5@
	mov	rcx, rax
	call	fprintf

; 706  :     for (int j = 0; j < info->ref_list_len[1]; j++) {

	mov	DWORD PTR j$2[rbp], 0
	jmp	SHORT $LN7@print_fram
$LN5@print_fram:
	mov	eax, DWORD PTR j$2[rbp]
	inc	eax
	mov	DWORD PTR j$2[rbp], eax
$LN7@print_fram:
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR info$[rbp]
	mov	eax, DWORD PTR [rcx+rax+144]
	cmp	DWORD PTR j$2[rbp], eax
	jge	SHORT $LN6@print_fram

; 707  :       fprintf(stderr, "%d ", info->ref_list[1][j]);

	mov	eax, 64					; 00000040H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR info$[rbp]
	lea	rax, QWORD PTR [rcx+rax+16]
	mov	QWORD PTR tv164[rbp], rax
	movsxd	rcx, DWORD PTR j$2[rbp]
	mov	QWORD PTR tv165[rbp], rcx
	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	mov	rdx, QWORD PTR tv165[rbp]
	mov	rcx, QWORD PTR tv164[rbp]
	mov	r8d, DWORD PTR [rcx+rdx*4]
	lea	rdx, OFFSET FLAT:??_C@_03JDANDILB@?$CFd?5@
	mov	rcx, rax
	call	fprintf

; 708  :     }

	jmp	SHORT $LN5@print_fram
$LN6@print_fram:

; 709  :     fprintf(stderr, "]");

	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	lea	rdx, OFFSET FLAT:??_C@_01LBDDMOBJ@?$FN@
	mov	rcx, rax
	call	fprintf
$LN9@print_fram:

; 710  :   }
; 711  : 
; 712  :   fprintf(stderr, "\n");

	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	mov	rcx, rax
	call	fprintf

; 713  : }

	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
print_frame_info ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\cli.c
;	COMDAT print_help
_TEXT	SEGMENT
print_help PROC						; COMDAT

; 391  : {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__541E1734_cli@c
	call	__CheckForDebuggerJustMyCode

; 392  :   fprintf(stdout,

	mov	ecx, 1
	call	QWORD PTR __imp___acrt_iob_func
	lea	rdx, OFFSET FLAT:??_C@_0EEOA@OJJFLKGH@Usage?3?6kvazaar?5?9i?5?$DMinput?$DO?5?9?9inp@
	mov	rcx, rax
	call	fprintf

; 393  :     "Usage:\n"
; 394  :     "kvazaar -i <input> --input-res <width>x<height> -o <output>\n"
; 395  :     "\n"
; 396  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 397  :     "Required:\n"
; 398  :     "  -i, --input <filename>     : Input file\n"
; 399  :     "      --input-res <res>      : Input resolution [auto]\n"
; 400  :     "                                   - auto: Detect from file name.\n"
; 401  :     "                                   - <int>x<int>: width times height\n"
; 402  :     "  -o, --output <filename>    : Output file\n"
; 403  :     "\n"
; 404  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 405  :     "Presets:\n"
; 406  :     "      --preset <preset>      : Set options to a preset [medium]\n"
; 407  :     "                                   - ultrafast, superfast, veryfast, faster,\n"
; 408  :     "                                     fast, medium, slow, slower, veryslow\n"
; 409  :     "                                     placebo\n"
; 410  :     "\n"
; 411  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 412  :     "Input:\n"
; 413  :     "  -n, --frames <integer>     : Number of frames to code [all]\n"
; 414  :     "      --seek <integer>       : First frame to code [0]\n"
; 415  :     "      --input-fps <num>[/<denom>] : Frame rate of the input video [25]\n"
; 416  :     "      --source-scan-type <string> : Source scan type [progressive]\n"
; 417  :     "                                   - progressive: Progressive scan\n"
; 418  :     "                                   - tff: Top field first\n"
; 419  :     "                                   - bff: Bottom field first\n"
; 420  :     "      --input-format <string> : P420 or P400 [P420]\n"
; 421  :     "      --input-bitdepth <int> : 8-16 [8]\n"
; 422  :     "      --loop-input           : Re-read input file forever.\n"
; 423  :     "      --input-file-format <string> : Input file format [auto]\n"
; 424  :     "                                    - auto: Check the file ending for format\n"
; 425  :     "                                    - y4m (skips frame headers)\n"
; 426  :     "                                    - yuv\n"
; 427  :     "\n"
; 428  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 429  :     "Options:\n"
; 430  :     "      --help                 : Print this help message and exit.\n"
; 431  :     "      --version              : Print version information and exit.\n"
; 432  :     "      --(no-)aud             : Use access unit delimiters. [disabled]\n"
; 433  :     "      --debug <filename>     : Output internal reconstruction.\n"
; 434  :     "      --(no-)cpuid           : Enable runtime CPU optimizations. [enabled]\n"
; 435  :     "      --hash <string>        : Decoded picture hash [checksum]\n"
; 436  :     "                                   - none: 0 bytes\n"
; 437  :     "                                   - checksum: 18 bytes\n"
; 438  :     "                                   - md5: 56 bytes\n"
; 439  :     "      --(no-)psnr            : Calculate PSNR for frames. [enabled]\n"
; 440  :     "      --(no-)info            : Add encoder info SEI. [enabled]\n"
; 441  :     "      --crypto <string>      : Selective encryption. Crypto support must be\n"
; 442  :     "                               enabled at compile-time. Can be 'on' or 'off' or\n"
; 443  :     "                               a list of features separated with a '+'. [off]\n"
; 444  :     "                                   - on: Enable all encryption features.\n"
; 445  :     "                                   - off: Disable selective encryption.\n"
; 446  :     "                                   - mvs: Motion vector magnitudes.\n"
; 447  :     "                                   - mv_signs: Motion vector signs.\n"
; 448  :     "                                   - trans_coeffs: Coefficient magnitudes.\n"
; 449  :     "                                   - trans_coeff_signs: Coefficient signs.\n"
; 450  :     "                                   - intra_pred_modes: Intra prediction modes.\n"
; 451  :     "      --key <string>         : Encryption key [16,213,27,56,255,127,242,112,\n"
; 452  :     "                                               97,126,197,204,25,59,38,30]\n"
; 453  :     "      --stats-file-prefix    : A prefix used for stats files that include\n"
; 454  :     "                               bits, lambda, distortion, and qp for each ctu.\n"
; 455  :     "                               These are meant for debugging and are not\n"
; 456  :     "                               written unless the prefix is defined.\n"
; 457  :     "\n"
; 458  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 459  :     "Video structure:\n"
; 460  :     "  -q, --qp <integer>         : Quantization parameter [22]\n"
; 461  :     "  -p, --period <integer>     : Period of intra pictures [64]\n"
; 462  :     "                                   - 0: Only first picture is intra.\n"
; 463  :     "                                   - 1: All pictures are intra.\n"
; 464  :     "                                   - N: Every Nth picture is intra.\n"
; 465  :     "      --vps-period <integer> : How often the video parameter set is re-sent [0]\n"
; 466  :     "                                   - 0: Only send VPS with the first frame.\n"
; 467  :     "                                   - N: Send VPS with every Nth intra frame.\n"
; 468  :     "  -r, --ref <integer>        : Number of reference frames, in range 1..15 [4]\n"
; 469  :     "      --gop <string>         : GOP structure [lp-g4d3t1]\n"
; 470  :     "                                   -  0: Disabled\n"
; 471  :     "                                   -  8: B-frame pyramid of length 8\n"
; 472  :     "                                   - 16: B-frame pyramid of length 16\n"
; 473  :     "                                   - lp-<string>: Low-delay P/B-frame GOP\n"
; 474  :     "                                     (e.g. lp-g8d4t2, see README)\n"
; 475  :     "      --intra-qp-offset <int>: QP offset for intra frames [-51..51] [auto]\n"
; 476  :     "                                   - N: Set QP offset to N.\n"
; 477  :     "                                   - auto: Select offset automatically based\n"
; 478  :     "                                     on GOP length.\n"
; 479  :     "      --(no-)open-gop        : Use open GOP configuration. [enabled]\n"
; 480  :     "      --cqmfile <filename>   : Read custom quantization matrices from a file.\n"
; 481  :     "      --scaling-list <string>: Set scaling list mode. [off]\n"
; 482  :     "                                   - off: Disable scaling lists.\n"
; 483  :     "                                   - custom: use custom list (with --cqmfile).\n"
; 484  :     "                                   - default: Use default lists.\n"
; 485  :     "      --bitrate <integer>    : Target bitrate [0]\n"
; 486  :     "                                   - 0: Disable rate control.\n"
; 487  :     "                                   - N: Target N bits per second.\n"
; 488  :     "      --rc-algorithm <string>: Select used rc-algorithm. [lambda]\n"
; 489  :     "                                   - lambda: rate control from:\n"
; 490  :     "                                     DOI: 10.1109/TIP.2014.2336550 \n"
; 491  :     "                                   - oba: DOI: 10.1109/TCSVT.2016.2589878\n"
; 492  :     "      --(no-)intra-bits      : Use Hadamard cost based allocation for intra\n"
; 493  :     "                               frames. Default on for gop 8 and off for lp-gop\n"
; 494  :     "      --(no-)clip-neighbour  : On oba based rate control whether to clip \n"
; 495  :     "                               lambda values to same frame's ctus or previous'.\n"
; 496  :     "                               Default on for RA GOPS and disabled for LP.\n"
; 497  :     "      --(no-)lossless        : Use lossless coding. [disabled]\n"
; 498  :     "      --mv-constraint <string> : Constrain movement vectors. [none]\n"
; 499  :     "                                   - none: No constraint\n"
; 500  :     "                                   - frametile: Constrain within the tile.\n"
; 501  :     "                                   - frametilemargin: Constrain even more.\n"
; 502  :     "      --roi <filename>       : Use a delta QP map for region of interest.\n"
; 503  :     "                               Reads an array of delta QP values from a text\n"
; 504  :     "                               file. The file format is: width and height of\n"
; 505  :     "                               the QP delta map followed by width*height delta\n"
; 506  :     "                               QP values in raster order. The map can be of any\n"
; 507  :     "                               size and will be scaled to the video size.\n"
; 508  :     "      --set-qp-in-cu         : Set QP at CU level keeping pic_init_qp_minus26.\n"
; 509  :     "                               in PPS and slice_qp_delta in slize header zero.\n"
; 510  :     "      --(no-)erp-aqp         : Use adaptive QP for 360 degree video with\n"
; 511  :     "                               equirectangular projection. [disabled]\n"
; 512  :     "      --level <number>       : Use the given HEVC level in the output and give\n"
; 513  :     "                               an error if level limits are exceeded. [6.2]\n"
; 514  :     "                                   - 1, 2, 2.1, 3, 3.1, 4, 4.1, 5, 5.1, 5.2, 6,\n"
; 515  :     "                                     6.1, 6.2\n"
; 516  :     "      --force-level <number> : Same as --level but warnings instead of errors.\n"
; 517  :     "      --high-tier            : Used with --level. Use high tier bitrate limits\n"
; 518  :     "                               instead of the main tier limits during encoding.\n"
; 519  :     "                               High tier requires level 4 or higher.\n"
; 520  :     "      --(no-)vaq <integer>   : Enable variance adaptive quantization with given\n"
; 521  :     "                               strength, in range 1..20. Recommended: 5.\n"
; 522  :     "                               [disabled]\n"
; 523  :     "\n"
; 524  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 525  :     "Compression tools:\n"
; 526  :     "      --(no-)deblock <beta:tc> : Deblocking filter. [0:0]\n"
; 527  :     "                                   - beta: Between -6 and 6\n"
; 528  :     "                                   - tc: Between -6 and 6\n"
; 529  :     "      --sao <string>         : Sample Adaptive Offset [full]\n"
; 530  :     "                                   - off: SAO disabled\n"
; 531  :     "                                   - band: Band offset only\n"
; 532  :     "                                   - edge: Edge offset only\n"
; 533  :     "                                   - full: Full SAO\n"
; 534  :     "      --(no-)rdoq            : Rate-distortion optimized quantization [enabled]\n"
; 535  :     "      --(no-)rdoq-skip       : Skip RDOQ for 4x4 blocks. [disabled]\n"
; 536  :     "      --(no-)signhide        : Sign hiding [disabled]\n"
; 537  :     "      --(no-)smp             : Symmetric motion partition [disabled]\n"
; 538  :     "      --(no-)amp             : Asymmetric motion partition [disabled]\n"
; 539  :     "      --rd <integer>         : Intra mode search complexity [0]\n"
; 540  :     "                                   - 0: Skip intra if inter is good enough.\n"
; 541  :     "                                   - 1: Rough intra mode search with SATD.\n"
; 542  :     "                                   - 2: Refine intra mode search with SSE.\n"
; 543  :     "                                   - 3: Try all intra modes and enable intra\n"
; 544  :     "                                        chroma mode search.\n"
; 545  :     "      --(no-)mv-rdo          : Rate-distortion optimized motion vector costs\n"
; 546  :     "                               [disabled]\n"
; 547  :     "      --(no-)zero-coeff-rdo  : If a CU is set inter, check if forcing zero\n"
; 548  :     "                               residual improves the RD cost. [enabled]\n"
; 549  :     "      --(no-)full-intra-search : Try all intra modes during rough search.\n"
; 550  :     "                               [disabled]\n"
; 551  :     "      --(no-)transform-skip  : Try transform skip [disabled]\n"
; 552  :     "      --me <string>          : Integer motion estimation algorithm [hexbs]\n"
; 553  :     "                                   - hexbs: Hexagon Based Search\n"
; 554  :     "                                   - tz:    Test Zone Search\n"
; 555  :     "                                   - full:  Full Search\n"
; 556  :     "                                   - full8, full16, full32, full64\n"
; 557  :     "                                   - dia:   Diamond Search\n"
; 558  :     "      --me-steps <integer>   : Motion estimation search step limit. Only\n"
; 559  :     "                               affects 'hexbs' and 'dia'. [-1]\n"
; 560  :     "      --subme <integer>      : Fractional pixel motion estimation level [4]\n"
; 561  :     "                                   - 0: Integer motion estimation only\n"
; 562  :     "                                   - 1: + 1/2-pixel horizontal and vertical\n"
; 563  :     "                                   - 2: + 1/2-pixel diagonal\n"
; 564  :     "                                   - 3: + 1/4-pixel horizontal and vertical\n"
; 565  :     "                                   - 4: + 1/4-pixel diagonal\n"
; 566  :     "      --pu-depth-inter <int>-<int> : Inter prediction units sizes [0-3]\n"
; 567  :     "                                   - 0, 1, 2, 3: from 64x64 to 8x8\n"
; 568  :     "                                   - Accepts a list of values separated by ','\n"
; 569  :     "                                     for setting separate depths per GOP layer\n"
; 570  :     "                                     (values can be omitted to use the first\n"
; 571  :     "                                     value for the respective layer).\n"
; 572  :     "      --pu-depth-intra <int>-<int> : Intra prediction units sizes [1-4]\n"
; 573  :     "                                   - 0, 1, 2, 3, 4: from 64x64 to 4x4\n"
; 574  :     "                                   - Accepts a list of values separated by ','\n"
; 575  :     "                                     for setting separate depths per GOP layer\n"
; 576  :     "                                     (values can be omitted to use the first\n"
; 577  :     "                                     value for the respective layer).\n"
; 578  :     "      --ml-pu-depth-intra    : Predict the pu-depth-intra using machine\n"
; 579  :     "                                learning trees, overrides the\n"
; 580  :     "                                --pu-depth-intra parameter. [disabled]\n"
; 581  :     "      --tr-depth-intra <int> : Transform split depth for intra blocks [0]\n"
; 582  :     "      --(no-)bipred          : Bi-prediction [disabled]\n"
; 583  :     "      --cu-split-termination <string> : CU split search termination [zero]\n"
; 584  :     "                                   - off: Don't terminate early.\n"
; 585  :     "                                   - zero: Terminate when residual is zero.\n"
; 586  :     "      --me-early-termination <string> : Motion estimation termination [on]\n"
; 587  :     "                                   - off: Don't terminate early.\n"
; 588  :     "                                   - on: Terminate early.\n"
; 589  :     "                                   - sensitive: Terminate even earlier.\n"
; 590  :     "      --fast-residual-cost <int> : Skip CABAC cost for residual coefficients\n"
; 591  :     "                                   when QP is below the limit. [0]\n"
; 592  :     "      --fast-coeff-table <string> : Read custom weights for residual\n"
; 593  :     "                                    coefficients from a file instead of using\n"
; 594  :     "                                    defaults [default]\n"
; 595  :     "      --fast-rd-sampling : Enable learning data sampling for fast coefficient\n"
; 596  :     "                           table generation\n"
; 597  :     "      --fastrd-accuracy-check : Evaluate the accuracy of fast coefficient\n"
; 598  :     "                                prediction\n"
; 599  :     "      --fastrd-outdir : Directory to which to output sampled data or accuracy\n"
; 600  :     "                        data, into <fastrd-outdir>/0.txt to 50.txt, one file\n"
; 601  :     "                        for each QP that blocks were estimated on\n"
; 602  :     "      --(no-)intra-rdo-et    : Check intra modes in rdo stage only until\n"
; 603  :     "                               a zero coefficient CU is found. [disabled]\n"
; 604  :     "      --(no-)early-skip      : Try to find skip cu from merge candidates.\n"
; 605  :     "                               Perform no further search if skip is found.\n"
; 606  :     "                               For rd=0..1: Try the first candidate.\n"
; 607  :     "                               For rd=2.. : Try the best candidate based\n"
; 608  :     "                                            on luma satd cost. [enabled]\n"
; 609  :     "      --max-merge <integer>  : Maximum number of merge candidates, 1..5 [5]\n"
; 610  :     "      --(no-)implicit-rdpcm  : Implicit residual DPCM. Currently only supported\n"
; 611  :     "                               with lossless coding. [disabled]\n"
; 612  :     "      --(no-)tmvp            : Temporal motion vector prediction [enabled]\n"
; 613  :     "\n"
; 614  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 615  :     "Parallel processing:\n"
; 616  :     "      --threads <integer>    : Number of threads to use [auto]\n"
; 617  :     "                                   - 0: Process everything with main thread.\n"
; 618  :     "                                   - N: Use N threads for encoding.\n"
; 619  :     "                                   - auto: Select automatically.\n"
; 620  :     "      --owf <integer>        : Frame-level parallelism [auto]\n"
; 621  :     "                                   - N: Process N+1 frames at a time.\n"
; 622  :     "                                   - auto: Select automatically.\n"
; 623  :     "      --(no-)wpp             : Wavefront parallel processing. [enabled]\n"
; 624  :     "                               Enabling tiles automatically disables WPP.\n"
; 625  :     "                               To enable WPP with tiles, re-enable it after\n"
; 626  :     "                               enabling tiles. Enabling wpp with tiles is,\n"
; 627  :     "                               however, an experimental feature since it is\n"
; 628  :     "                               not supported in any HEVC profile.\n"
; 629  :     "      --tiles <int>x<int>    : Split picture into width x height uniform tiles.\n"
; 630  :     "      --tiles-width-split <string>|u<int> :\n"
; 631  :     "                                   - <string>: A comma-separated list of tile\n"
; 632  :     "                                               column pixel coordinates.\n"
; 633  :     "                                   - u<int>: Number of tile columns of uniform\n"
; 634  :     "                                             width.\n"
; 635  :     "      --tiles-height-split <string>|u<int> :\n"
; 636  :     "                                   - <string>: A comma-separated list of tile row\n"
; 637  :     "                                               column pixel coordinates.\n"
; 638  :     "                                   - u<int>: Number of tile rows of uniform\n"
; 639  :     "                                             height.\n"
; 640  :     "      --slices <string>      : Control how slices are used.\n"
; 641  :     "                                   - tiles: Put tiles in independent slices.\n"
; 642  :     "                                   - wpp: Put rows in dependent slices.\n"
; 643  :     "                                   - tiles+wpp: Do both.\n"
; 644  :     "      --partial-coding <x-offset>!<y-offset>!<slice-width>!<slice-height>\n"
; 645  :     "                             : Encode partial frame.\n" 
; 646  :     "                               Parts must be merged to form a valid bitstream.\n"
; 647  :     "                               X and Y are CTU offsets.\n"
; 648  :     "                               Slice width and height must be divisible by CTU\n"
; 649  :     "                               in pixels unless it is the last CTU row/column.\n"
; 650  :     "                               This parameter is used by kvaShare.\n"
; 651  :     "\n"
; 652  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 653  :     "Video Usability Information:\n"
; 654  :     "      --sar <width:height>   : Specify sample aspect ratio\n"
; 655  :     "      --overscan <string>    : Specify crop overscan setting [undef]\n"
; 656  :     "                                   - undef, show, crop\n"
; 657  :     "      --videoformat <string> : Specify video format [undef]\n"
; 658  :     "                                   - undef, component, pal, ntsc, secam, mac\n"
; 659  :     "      --range <string>       : Specify color range [tv]\n"
; 660  :     "                                   - tv, pc\n"
; 661  :     "      --colorprim <string>   : Specify color primaries [undef]\n"
; 662  :     "                                   - undef, bt709, bt470m, bt470bg,\n"
; 663  :     "                                     smpte170m, smpte240m, film, bt2020\n"
; 664  :     "      --transfer <string>    : Specify transfer characteristics [undef]\n"
; 665  :     "                                   - undef, bt709, bt470m, bt470bg,\n"
; 666  :     "                                     smpte170m, smpte240m, linear, log100,\n"
; 667  :     "                                     log316, iec61966-2-4, bt1361e,\n"
; 668  :     "                                     iec61966-2-1, bt2020-10, bt2020-12\n"
; 669  :     "      --colormatrix <string> : Specify color matrix setting [undef]\n"
; 670  :     "                                   - undef, bt709, fcc, bt470bg, smpte170m,\n"
; 671  :     "                                     smpte240m, GBR, YCgCo, bt2020nc, bt2020c\n"
; 672  :     "      --chromaloc <integer>  : Specify chroma sample location (0 to 5) [0]\n"
; 673  :     "\n"
; 674  :     /* Word wrap to this width to stay under 80 characters (including ") *************/
; 675  :     "Deprecated parameters: (might be removed at some point)\n"
; 676  :     "  -w, --width <integer>       : Use --input-res.\n"
; 677  :     "  -h, --height <integer>      : Use --input-res.\n");
; 678  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
print_help ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\cli.c
;	COMDAT print_version
_TEXT	SEGMENT
print_version PROC					; COMDAT

; 383  : {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__541E1734_cli@c
	call	__CheckForDebuggerJustMyCode

; 384  :   fprintf(stdout,

	mov	ecx, 1
	call	QWORD PTR __imp___acrt_iob_func
	lea	rdx, OFFSET FLAT:??_C@_0CN@IPONMLFI@Kvazaar?52?41?40?6Kvazaar?5license?3?5@
	mov	rcx, rax
	call	fprintf

; 385  :     "Kvazaar " VERSION_STRING "\n"
; 386  :     "Kvazaar license: 3-clause BSD\n");
; 387  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
print_version ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\cli.c
;	COMDAT print_usage
_TEXT	SEGMENT
print_usage PROC					; COMDAT

; 375  : {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__541E1734_cli@c
	call	__CheckForDebuggerJustMyCode

; 376  :   fprintf(stdout,

	mov	ecx, 1
	call	QWORD PTR __imp___acrt_iob_func
	lea	rdx, OFFSET FLAT:??_C@_0GN@MONMHAHB@Kvazaar?5usage?3?5?9i?5and?5?9?9input?9r@
	mov	rcx, rax
	call	fprintf

; 377  :     "Kvazaar usage: -i and --input-res to set input, -o to set output\n"
; 378  :     "               --help for more information\n");
; 379  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
print_usage ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\cli.c
;	COMDAT cmdline_opts_free
_TEXT	SEGMENT
api$ = 224
opts$ = 232
cmdline_opts_free PROC					; COMDAT

; 362  : {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__541E1734_cli@c
	call	__CheckForDebuggerJustMyCode

; 363  :   if (opts) {

	cmp	QWORD PTR opts$[rbp], 0
	je	$LN2@cmdline_op

; 364  :     FREE_POINTER(opts->input);

	mov	rax, QWORD PTR opts$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_free
	mov	rax, QWORD PTR opts$[rbp]
	mov	QWORD PTR [rax], 0

; 365  :     FREE_POINTER(opts->output);

	mov	rax, QWORD PTR opts$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_free
	mov	rax, QWORD PTR opts$[rbp]
	mov	QWORD PTR [rax+8], 0

; 366  :     FREE_POINTER(opts->debug);

	mov	rax, QWORD PTR opts$[rbp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_free
	mov	rax, QWORD PTR opts$[rbp]
	mov	QWORD PTR [rax+16], 0

; 367  :     api->config_destroy(opts->config);

	mov	rax, QWORD PTR opts$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	mov	rax, QWORD PTR api$[rbp]
	call	QWORD PTR [rax+8]

; 368  :     opts->config = NULL;

	mov	rax, QWORD PTR opts$[rbp]
	mov	QWORD PTR [rax+32], 0
$LN2@cmdline_op:

; 369  :   }
; 370  :   FREE_POINTER(opts);

	mov	rcx, QWORD PTR opts$[rbp]
	call	QWORD PTR __imp_free
	mov	QWORD PTR opts$[rbp], 0

; 371  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
cmdline_opts_free ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\cli.c
;	COMDAT cmdline_opts_parse
_TEXT	SEGMENT
ok$ = 4
opts$ = 40
long_options_index$4 = 68
c$5 = 100
i$6 = 132
name$7 = 168
tv221 = 376
api$ = 416
argc$ = 424
argv$ = 432
cmdline_opts_parse PROC					; COMDAT

; 238  : {

$LN44:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 440				; 000001b8H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 110				; 0000006eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+472]
	lea	rcx, OFFSET FLAT:__541E1734_cli@c
	call	__CheckForDebuggerJustMyCode

; 239  :   int ok = 1;

	mov	DWORD PTR ok$[rbp], 1

; 240  :   cmdline_opts_t *opts = calloc(1, sizeof(cmdline_opts_t));

	mov	edx, 48					; 00000030H
	mov	ecx, 1
	call	QWORD PTR __imp_calloc
	mov	QWORD PTR opts$[rbp], rax

; 241  :   if (!opts) {

	cmp	QWORD PTR opts$[rbp], 0
	jne	SHORT $LN8@cmdline_op

; 242  :     ok = 0;

	mov	DWORD PTR ok$[rbp], 0

; 243  :     goto done;

	jmp	$done$45
$LN8@cmdline_op:

; 244  :   }
; 245  : 
; 246  :   opts->config = api->config_alloc();

	mov	rax, QWORD PTR api$[rbp]
	call	QWORD PTR [rax]
	mov	rcx, QWORD PTR opts$[rbp]
	mov	QWORD PTR [rcx+32], rax

; 247  :   if (!opts->config || !api->config_init(opts->config)) {

	mov	rax, QWORD PTR opts$[rbp]
	cmp	QWORD PTR [rax+32], 0
	je	SHORT $LN10@cmdline_op
	mov	rax, QWORD PTR opts$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	mov	rax, QWORD PTR api$[rbp]
	call	QWORD PTR [rax+16]
	test	eax, eax
	jne	SHORT $LN9@cmdline_op
$LN10@cmdline_op:

; 248  :     ok = 0;

	mov	DWORD PTR ok$[rbp], 0

; 249  :     goto done;

	jmp	$done$45
$LN9@cmdline_op:

; 250  :   }
; 251  : 
; 252  :   // Parse command line options
; 253  :   for (optind = 0;;) {

	mov	DWORD PTR optind, 0
$LN2@cmdline_op:

; 254  :     int long_options_index = -1;

	mov	DWORD PTR long_options_index$4[rbp], -1

; 255  : 
; 256  :     int c = getopt_long(argc, argv, short_options, long_options, &long_options_index);

	lea	rax, QWORD PTR long_options_index$4[rbp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:long_options
	lea	r8, OFFSET FLAT:short_options
	mov	rdx, QWORD PTR argv$[rbp]
	mov	ecx, DWORD PTR argc$[rbp]
	call	getopt_long
	mov	DWORD PTR c$5[rbp], eax

; 257  :     if (c == -1)

	cmp	DWORD PTR c$5[rbp], -1
	jne	SHORT $LN11@cmdline_op

; 258  :       break;

	jmp	$LN3@cmdline_op
$LN11@cmdline_op:

; 259  : 
; 260  :     if (long_options_index < 0) {

	cmp	DWORD PTR long_options_index$4[rbp], 0
	jge	SHORT $LN12@cmdline_op

; 261  :       int i;
; 262  :       for (i = 0; long_options[i].name; i++)

	mov	DWORD PTR i$6[rbp], 0
	jmp	SHORT $LN7@cmdline_op
$LN5@cmdline_op:
	mov	eax, DWORD PTR i$6[rbp]
	inc	eax
	mov	DWORD PTR i$6[rbp], eax
$LN7@cmdline_op:
	movsxd	rax, DWORD PTR i$6[rbp]
	imul	rax, rax, 32				; 00000020H
	lea	rcx, OFFSET FLAT:long_options
	cmp	QWORD PTR [rcx+rax], 0
	je	SHORT $LN6@cmdline_op

; 263  :         if (long_options[i].val == c) {

	movsxd	rax, DWORD PTR i$6[rbp]
	imul	rax, rax, 32				; 00000020H
	lea	rcx, OFFSET FLAT:long_options
	mov	edx, DWORD PTR c$5[rbp]
	cmp	DWORD PTR [rcx+rax+24], edx
	jne	SHORT $LN13@cmdline_op

; 264  :             long_options_index = i;

	mov	eax, DWORD PTR i$6[rbp]
	mov	DWORD PTR long_options_index$4[rbp], eax

; 265  :             break;

	jmp	SHORT $LN6@cmdline_op
$LN13@cmdline_op:

; 266  :         }

	jmp	SHORT $LN5@cmdline_op
$LN6@cmdline_op:

; 267  :       if (long_options_index < 0) {

	cmp	DWORD PTR long_options_index$4[rbp], 0
	jge	SHORT $LN14@cmdline_op

; 268  :         // getopt_long already printed an error message
; 269  :         ok = 0;

	mov	DWORD PTR ok$[rbp], 0

; 270  :         goto done;

	jmp	$done$45
$LN14@cmdline_op:
$LN12@cmdline_op:

; 271  :       }
; 272  :     }
; 273  : 
; 274  :     const char* name = long_options[long_options_index].name;

	movsxd	rax, DWORD PTR long_options_index$4[rbp]
	imul	rax, rax, 32				; 00000020H
	lea	rcx, OFFSET FLAT:long_options
	mov	rax, QWORD PTR [rcx+rax]
	mov	QWORD PTR name$7[rbp], rax

; 275  :     if (!strcmp(name, "input")) {

	lea	rdx, OFFSET FLAT:??_C@_05DFJCHPDH@input@
	mov	rcx, QWORD PTR name$7[rbp]
	call	strcmp
	test	eax, eax
	jne	SHORT $LN15@cmdline_op

; 276  :       if (opts->input) {

	mov	rax, QWORD PTR opts$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN17@cmdline_op

; 277  :         fprintf(stderr, "Input error: More than one input file given.\n");

	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	lea	rdx, OFFSET FLAT:??_C@_0CO@OBCHOMBF@Input?5error?3?5More?5than?5one?5inpu@
	mov	rcx, rax
	call	fprintf

; 278  :         ok = 0;

	mov	DWORD PTR ok$[rbp], 0

; 279  :         goto done;

	jmp	$done$45
$LN17@cmdline_op:

; 280  :       }
; 281  :       opts->input = strdup(optarg);

	mov	rcx, QWORD PTR optarg
	call	QWORD PTR __imp_strdup
	mov	rcx, QWORD PTR opts$[rbp]
	mov	QWORD PTR [rcx], rax
	jmp	$LN16@cmdline_op
$LN15@cmdline_op:

; 282  :     } else if (!strcmp(name, "output")) {

	lea	rdx, OFFSET FLAT:??_C@_06DKIGHACF@output@
	mov	rcx, QWORD PTR name$7[rbp]
	call	strcmp
	test	eax, eax
	jne	SHORT $LN18@cmdline_op

; 283  :       if (opts->output) {

	mov	rax, QWORD PTR opts$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN20@cmdline_op

; 284  :         fprintf(stderr, "Input error: More than one output file given.\n");

	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	lea	rdx, OFFSET FLAT:??_C@_0CP@JCJFLGMJ@Input?5error?3?5More?5than?5one?5outp@
	mov	rcx, rax
	call	fprintf

; 285  :         ok = 0;

	mov	DWORD PTR ok$[rbp], 0

; 286  :         goto done;

	jmp	$done$45
$LN20@cmdline_op:

; 287  :       }
; 288  :       opts->output = strdup(optarg);

	mov	rcx, QWORD PTR optarg
	call	QWORD PTR __imp_strdup
	mov	rcx, QWORD PTR opts$[rbp]
	mov	QWORD PTR [rcx+8], rax
	jmp	$LN19@cmdline_op
$LN18@cmdline_op:

; 289  :     } else if (!strcmp(name, "debug")) {

	lea	rdx, OFFSET FLAT:??_C@_05GFCDIDHO@debug@
	mov	rcx, QWORD PTR name$7[rbp]
	call	strcmp
	test	eax, eax
	jne	SHORT $LN21@cmdline_op

; 290  :       if (opts->debug) {

	mov	rax, QWORD PTR opts$[rbp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN23@cmdline_op

; 291  :         fprintf(stderr, "Input error: More than one debug output file given.\n");

	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	lea	rdx, OFFSET FLAT:??_C@_0DF@OEJJGLKH@Input?5error?3?5More?5than?5one?5debu@
	mov	rcx, rax
	call	fprintf

; 292  :         ok = 0;

	mov	DWORD PTR ok$[rbp], 0

; 293  :         goto done;

	jmp	$done$45
$LN23@cmdline_op:

; 294  :       }
; 295  :       opts->debug = strdup(optarg);

	mov	rcx, QWORD PTR optarg
	call	QWORD PTR __imp_strdup
	mov	rcx, QWORD PTR opts$[rbp]
	mov	QWORD PTR [rcx+16], rax
	jmp	$LN22@cmdline_op
$LN21@cmdline_op:

; 296  :     } else if (!strcmp(name, "seek")) {

	lea	rdx, OFFSET FLAT:??_C@_04EDECCOGL@seek@
	mov	rcx, QWORD PTR name$7[rbp]
	call	strcmp
	test	eax, eax
	jne	SHORT $LN24@cmdline_op

; 297  :       opts->seek = atoi(optarg);

	mov	rcx, QWORD PTR optarg
	call	QWORD PTR __imp_atoi
	mov	rcx, QWORD PTR opts$[rbp]
	mov	DWORD PTR [rcx+24], eax
	jmp	$LN25@cmdline_op
$LN24@cmdline_op:

; 298  :     } else if (!strcmp(name, "frames")) {

	lea	rdx, OFFSET FLAT:??_C@_06OLAPKHEJ@frames@
	mov	rcx, QWORD PTR name$7[rbp]
	call	strcmp
	test	eax, eax
	jne	SHORT $LN26@cmdline_op

; 299  :       opts->frames = atoi(optarg);

	mov	rcx, QWORD PTR optarg
	call	QWORD PTR __imp_atoi
	mov	rcx, QWORD PTR opts$[rbp]
	mov	DWORD PTR [rcx+28], eax
	jmp	$LN27@cmdline_op
$LN26@cmdline_op:

; 300  :     } else if (!strcmp(name, "version")) {

	lea	rdx, OFFSET FLAT:??_C@_07CPCPJPKL@version@
	mov	rcx, QWORD PTR name$7[rbp]
	call	strcmp
	test	eax, eax
	jne	SHORT $LN28@cmdline_op

; 301  :       opts->version = true;

	mov	rax, QWORD PTR opts$[rbp]
	mov	BYTE PTR [rax+41], 1

; 302  :       goto done;

	jmp	$done$45
	jmp	$LN29@cmdline_op
$LN28@cmdline_op:

; 303  :     } else if (!strcmp(name, "help")) {

	lea	rdx, OFFSET FLAT:??_C@_04PCJFHION@help@
	mov	rcx, QWORD PTR name$7[rbp]
	call	strcmp
	test	eax, eax
	jne	SHORT $LN30@cmdline_op

; 304  :       opts->help = true;

	mov	rax, QWORD PTR opts$[rbp]
	mov	BYTE PTR [rax+40], 1

; 305  :       goto done;

	jmp	$done$45
	jmp	SHORT $LN31@cmdline_op
$LN30@cmdline_op:

; 306  :     } else if (!strcmp(name, "loop-input")) {

	lea	rdx, OFFSET FLAT:??_C@_0L@BEBFLDMD@loop?9input@
	mov	rcx, QWORD PTR name$7[rbp]
	call	strcmp
	test	eax, eax
	jne	SHORT $LN32@cmdline_op

; 307  :       opts->loop_input = true;

	mov	rax, QWORD PTR opts$[rbp]
	mov	BYTE PTR [rax+42], 1
	jmp	SHORT $LN33@cmdline_op
$LN32@cmdline_op:

; 308  :     } else if (!api->config_parse(opts->config, name, optarg)) {

	mov	r8, QWORD PTR optarg
	mov	rdx, QWORD PTR name$7[rbp]
	mov	rax, QWORD PTR opts$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	mov	rax, QWORD PTR api$[rbp]
	call	QWORD PTR [rax+24]
	test	eax, eax
	jne	SHORT $LN34@cmdline_op

; 309  :       fprintf(stderr, "invalid argument: %s=%s\n", name, optarg);

	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	mov	r9, QWORD PTR optarg
	mov	r8, QWORD PTR name$7[rbp]
	lea	rdx, OFFSET FLAT:??_C@_0BJ@ODNINGIA@invalid?5argument?3?5?$CFs?$DN?$CFs?6@
	mov	rcx, rax
	call	fprintf

; 310  :       ok = 0;

	mov	DWORD PTR ok$[rbp], 0

; 311  :       goto done;

	jmp	$done$45
$LN34@cmdline_op:
$LN33@cmdline_op:
$LN31@cmdline_op:
$LN29@cmdline_op:
$LN27@cmdline_op:
$LN25@cmdline_op:
$LN22@cmdline_op:
$LN19@cmdline_op:
$LN16@cmdline_op:

; 312  :     }
; 313  :   }

	jmp	$LN2@cmdline_op
$LN3@cmdline_op:

; 314  : 
; 315  :   // Check for extra arguments.
; 316  :   if (argc - optind > 0) {

	mov	eax, DWORD PTR optind
	mov	ecx, DWORD PTR argc$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	test	eax, eax
	jle	SHORT $LN35@cmdline_op

; 317  :     fprintf(stderr, "Input error: Extra argument found: \"%s\"\n", argv[optind]);

	movsxd	rax, DWORD PTR optind
	mov	QWORD PTR tv221[rbp], rax
	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	mov	rcx, QWORD PTR argv$[rbp]
	mov	rdx, QWORD PTR tv221[rbp]
	mov	r8, QWORD PTR [rcx+rdx*8]
	lea	rdx, OFFSET FLAT:??_C@_0CJ@HAGMBFIL@Input?5error?3?5Extra?5argument?5fou@
	mov	rcx, rax
	call	fprintf

; 318  :     ok = 0;

	mov	DWORD PTR ok$[rbp], 0

; 319  :     goto done;

	jmp	$done$45
$LN35@cmdline_op:

; 320  :   }
; 321  : 
; 322  :   // Check that the required files were defined
; 323  :   if (opts->input == NULL || opts->output == NULL) {

	mov	rax, QWORD PTR opts$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN37@cmdline_op
	mov	rax, QWORD PTR opts$[rbp]
	cmp	QWORD PTR [rax+8], 0
	jne	SHORT $LN36@cmdline_op
$LN37@cmdline_op:

; 324  :     ok = 0;

	mov	DWORD PTR ok$[rbp], 0

; 325  :     goto done;

	jmp	$done$45
$LN36@cmdline_op:

; 326  :   }
; 327  : 
; 328  :   if (opts->config->vps_period < 0) {

	mov	rax, QWORD PTR opts$[rbp]
	mov	rax, QWORD PTR [rax+32]
	cmp	DWORD PTR [rax+8], 0
	jge	SHORT $LN38@cmdline_op

; 329  :     // Disabling parameter sets is only possible when using Kvazaar as
; 330  :     // a library.
; 331  :     fprintf(stderr, "Input error: vps_period must be non-negative\n");

	mov	ecx, 2
	call	QWORD PTR __imp___acrt_iob_func
	lea	rdx, OFFSET FLAT:??_C@_0CO@GHFOIOEE@Input?5error?3?5vps_period?5must?5be@
	mov	rcx, rax
	call	fprintf

; 332  :     ok = 0;

	mov	DWORD PTR ok$[rbp], 0

; 333  :     goto done;

	jmp	$done$45
$LN38@cmdline_op:

; 334  :   }
; 335  : 
; 336  :   // Check the file name for format
; 337  :   if (opts->config->file_format == KVZ_FORMAT_AUTO) {

	mov	rax, QWORD PTR opts$[rbp]
	mov	rax, QWORD PTR [rax+32]
	cmp	DWORD PTR [rax+2488], 0
	jne	SHORT $LN39@cmdline_op

; 338  :     opts->config->file_format = detect_file_format(opts->input);

	mov	rax, QWORD PTR opts$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	detect_file_format
	mov	rcx, QWORD PTR opts$[rbp]
	mov	rcx, QWORD PTR [rcx+32]
	mov	DWORD PTR [rcx+2488], eax
$LN39@cmdline_op:

; 339  :   }
; 340  : 
; 341  :   // Set resolution automatically if necessary
; 342  :   if ((opts->config->file_format == KVZ_FORMAT_AUTO || opts->config->file_format == KVZ_FORMAT_YUV)
; 343  :       && opts->config->width == 0 && opts->config->height == 0) {

	mov	rax, QWORD PTR opts$[rbp]
	mov	rax, QWORD PTR [rax+32]
	cmp	DWORD PTR [rax+2488], 0
	je	SHORT $LN41@cmdline_op
	mov	rax, QWORD PTR opts$[rbp]
	mov	rax, QWORD PTR [rax+32]
	cmp	DWORD PTR [rax+2488], 2
	jne	SHORT $LN40@cmdline_op
$LN41@cmdline_op:
	mov	rax, QWORD PTR opts$[rbp]
	mov	rax, QWORD PTR [rax+32]
	cmp	DWORD PTR [rax+12], 0
	jne	SHORT $LN40@cmdline_op
	mov	rax, QWORD PTR opts$[rbp]
	mov	rax, QWORD PTR [rax+32]
	cmp	DWORD PTR [rax+16], 0
	jne	SHORT $LN40@cmdline_op

; 344  :     ok = select_input_res_auto(opts->input, &opts->config->width, &opts->config->height);

	mov	rax, QWORD PTR opts$[rbp]
	mov	rax, QWORD PTR [rax+32]
	add	rax, 16
	mov	rcx, QWORD PTR opts$[rbp]
	mov	rcx, QWORD PTR [rcx+32]
	add	rcx, 12
	mov	r8, rax
	mov	rdx, rcx
	mov	rax, QWORD PTR opts$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	select_input_res_auto
	mov	DWORD PTR ok$[rbp], eax
$LN40@cmdline_op:
$done$45:

; 345  :     goto done;
; 346  :   }
; 347  : 
; 348  : done:
; 349  :   if (!ok) {

	cmp	DWORD PTR ok$[rbp], 0
	jne	SHORT $LN42@cmdline_op

; 350  :     cmdline_opts_free(api, opts);

	mov	rdx, QWORD PTR opts$[rbp]
	mov	rcx, QWORD PTR api$[rbp]
	call	cmdline_opts_free

; 351  :     opts = NULL;

	mov	QWORD PTR opts$[rbp], 0
$LN42@cmdline_op:

; 352  :   }
; 353  : 
; 354  :   return opts;

	mov	rax, QWORD PTR opts$[rbp]

; 355  : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:cmdline_opts_parse$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
cmdline_opts_parse ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT sscanf
_TEXT	SEGMENT
_Result$ = 4
_ArgList$ = 40
_Buffer$ = 288
_Format$ = 296
sscanf	PROC						; COMDAT

; 2270 :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__9FF75F13_stdio@h
	call	__CheckForDebuggerJustMyCode

; 2271 :         int _Result;
; 2272 :         va_list _ArgList;
; 2273 :         __crt_va_start(_ArgList, _Format);

	lea	rax, QWORD PTR _Format$[rbp+8]
	mov	QWORD PTR _ArgList$[rbp], rax

; 2274 :         _Result = _vsscanf_l(_Buffer, _Format, NULL, _ArgList);

	mov	r9, QWORD PTR _ArgList$[rbp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Format$[rbp]
	mov	rcx, QWORD PTR _Buffer$[rbp]
	call	_vsscanf_l
	mov	DWORD PTR _Result$[rbp], eax

; 2275 :         __crt_va_end(_ArgList);

	mov	QWORD PTR _ArgList$[rbp], 0

; 2276 :         return _Result;

	mov	eax, DWORD PTR _Result$[rbp]

; 2277 :     }

	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:sscanf$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vsscanf_l
_TEXT	SEGMENT
_Buffer$ = 224
_Format$ = 232
_Locale$ = 240
_ArgList$ = 248
_vsscanf_l PROC						; COMDAT

; 2175 :     {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__9FF75F13_stdio@h
	call	__CheckForDebuggerJustMyCode

; 2176 :         return __stdio_common_vsscanf(

	call	__local_stdio_scanf_options
	mov	rcx, QWORD PTR _ArgList$[rbp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR _Locale$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Format$[rbp]
	mov	r8, -1
	mov	rdx, QWORD PTR _Buffer$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vsscanf

; 2177 :             _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
; 2178 :             _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
; 2179 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
_vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT fprintf
_TEXT	SEGMENT
_Result$ = 4
_ArgList$ = 40
_Stream$ = 288
_Format$ = 296
fprintf	PROC						; COMDAT

; 835  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__9FF75F13_stdio@h
	call	__CheckForDebuggerJustMyCode

; 836  :         int _Result;
; 837  :         va_list _ArgList;
; 838  :         __crt_va_start(_ArgList, _Format);

	lea	rax, QWORD PTR _Format$[rbp+8]
	mov	QWORD PTR _ArgList$[rbp], rax

; 839  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);

	mov	r9, QWORD PTR _ArgList$[rbp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Format$[rbp]
	mov	rcx, QWORD PTR _Stream$[rbp]
	call	_vfprintf_l
	mov	DWORD PTR _Result$[rbp], eax

; 840  :         __crt_va_end(_ArgList);

	mov	QWORD PTR _ArgList$[rbp], 0

; 841  :         return _Result;

	mov	eax, DWORD PTR _Result$[rbp]

; 842  :     }

	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:fprintf$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
fprintf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 224
_Format$ = 232
_Locale$ = 240
_ArgList$ = 248
_vfprintf_l PROC					; COMDAT

; 642  :     {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__9FF75F13_stdio@h
	call	__CheckForDebuggerJustMyCode

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

	call	__local_stdio_printf_options
	mov	rcx, QWORD PTR _ArgList$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Locale$[rbp]
	mov	r8, QWORD PTR _Format$[rbp]
	mov	rdx, QWORD PTR _Stream$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vfprintf

; 644  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_scanf_options
_TEXT	SEGMENT
__local_stdio_scanf_options PROC			; COMDAT

; 96   :     {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__1850469A_corecrt_stdio_config@h
	call	__CheckForDebuggerJustMyCode

; 97   :         static unsigned __int64 _OptionsStorage;
; 98   :         return &_OptionsStorage;

	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 99   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
__local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :     {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__1850469A_corecrt_stdio_config@h
	call	__CheckForDebuggerJustMyCode

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END
