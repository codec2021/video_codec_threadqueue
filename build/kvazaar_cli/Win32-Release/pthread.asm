; Listing generated by Microsoft (R) Optimizing Compiler Version 19.26.28806.0 

	TITLE	c:\users\84038\desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	__imp___Cnd_destroy_in_situ:PROC
EXTRN	__Smtx_unlock_shared:PROC
EXTRN	__imp___Cnd_broadcast:PROC
EXTRN	__imp___Mtx_unlock:PROC
EXTRN	__imp___Thrd_join:PROC
EXTRN	__imp____std_terminate:PROC
EXTRN	__imp___Thrd_id:PROC
EXTRN	__imp___Cnd_wait:PROC
EXTRN	__imp___Cnd_do_broadcast_at_thread_exit:PROC
EXTRN	__imp___Mtx_init_in_situ:PROC
EXTRN	__imp___Mtx_lock:PROC
EXTRN	__imp__terminate:PROC
EXTRN	__Smtx_lock_exclusive:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp___Mtx_destroy_in_situ:PROC
EXTRN	__Smtx_unlock_exclusive:PROC
EXTRN	__Smtx_lock_shared:PROC
EXTRN	__imp___beginthreadex:PROC
EXTRN	__imp_?_Throw_C_error@std@@YAXH@Z:PROC
EXTRN	__imp_?_Throw_Cpp_error@std@@YAXH@Z:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp___Cnd_init_in_situ:PROC
EXTRN	__imp___Cnd_signal:PROC
EXTRN	__imp____CxxFrameHandler3:PROC
?adopt_lock@std@@3Uadopt_lock_t@1@B	ORG $+1		; std::adopt_lock
CONST	ENDS
PUBLIC	??$?0AAPAX@?$_Tuple_val@PAX@std@@QAE@AAPAX@Z	; std::_Tuple_val<void *>::_Tuple_val<void *><void * &>
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$forward@AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YAAAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> * &>
PUBLIC	??$?0AAP6APAXPAX@Z@?$_Tuple_val@P6APAXPAX@Z@std@@QAE@AAP6APAXPAX@Z@Z ; std::_Tuple_val<void * (__cdecl*)(void *)>::_Tuple_val<void * (__cdecl*)(void *)><void * (__cdecl*&)(void *)>
PUBLIC	??$?0U_Exact_args_t@std@@AAPAX$$V$0A@@?$tuple@PAX@std@@QAE@U_Exact_args_t@1@AAPAX@Z ; std::tuple<void *>::tuple<void *><std::_Exact_args_t,void * &,0>
PUBLIC	??$forward@PAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YA$$QAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> *>
PUBLIC	??$?0AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::tuple<void * (__cdecl*)(void *),void *> * &>
PUBLIC	??$?0U_Exact_args_t@std@@AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@U_Exact_args_t@1@AAP6APAXPAX@ZAAPAX@Z ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><std::_Exact_args_t,void * (__cdecl*&)(void *),void * &,0>
PUBLIC	??$_Call@P6APAXPAX@ZPAX@_Invoker_functor@std@@SAPAX$$QAP6APAXPAX@Z$$QAPAX@Z ; std::_Invoker_functor::_Call<void * (__cdecl*)(void *),void *>
PUBLIC	??$forward@PAX@std@@YA$$QAPAXAAPAX@Z		; std::forward<void *>
PUBLIC	??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::forward<void * (__cdecl*)(void *)>
PUBLIC	??$invoke@P6APAXPAX@ZPAX@std@@YAPAX$$QAP6APAXPAX@Z$$QAPAX@Z ; std::invoke<void * (__cdecl*)(void *),void *>
PUBLIC	??$move@AAPAX@std@@YA$$QAPAXAAPAX@Z		; std::move<void * &>
PUBLIC	??$get@$00P6APAXPAX@ZPAX@std@@YAAAPAXAAV?$tuple@P6APAXPAX@ZPAX@0@@Z ; std::get<1,void * (__cdecl*)(void *),void *>
PUBLIC	??$move@AAP6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::move<void * (__cdecl*&)(void *)>
PUBLIC	??$get@$0A@P6APAXPAX@ZPAX@std@@YAAAP6APAXPAX@ZAAV?$tuple@P6APAXPAX@ZPAX@0@@Z ; std::get<0,void * (__cdecl*)(void *),void *>
PUBLIC	??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@1@$$QAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *>
PUBLIC	??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z ; std::forward<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
PUBLIC	??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>
PUBLIC	??$?0AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@AAP6APAXPAX@ZAAPAX@Z ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><void * (__cdecl*&)(void *),void * &,0>
PUBLIC	?get_deleter@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get_deleter
PUBLIC	??D?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEAAV?$tuple@P6APAXPAX@ZPAX@1@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::operator*
PUBLIC	??$exchange@PAV?$tuple@P6APAXPAX@ZPAX@std@@PAV12@@std@@YAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@$$QAPAV10@@Z ; std::exchange<std::tuple<void * (__cdecl*)(void *),void *> *,std::tuple<void * (__cdecl*)(void *),void *> *>
PUBLIC	??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z ; std::thread::_Invoke<std::tuple<void * (__cdecl*)(void *),void *>,0,1>
PUBLIC	??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>
PUBLIC	??$make_unique@V?$tuple@P6APAXPAX@ZPAX@std@@AAP6APAXPAX@ZAAPAX$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@0@AAP6APAXPAX@ZAAPAX@Z ; std::make_unique<std::tuple<void * (__cdecl*)(void *),void *>,void * (__cdecl*&)(void *),void * &,0>
PUBLIC	??$forward@AAPAX@std@@YAAAPAXAAPAX@Z		; std::forward<void * &>
PUBLIC	??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::forward<void * (__cdecl*&)(void *)>
PUBLIC	??R?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@QBEXPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ; std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >::operator()
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Get_first
PUBLIC	??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::~unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
PUBLIC	?get@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get
PUBLIC	?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::release
PUBLIC	??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z ; std::addressof<std::mutex>
PUBLIC	??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z ; std::thread::thread<void * (__cdecl*&)(void *),void * &,0>
PUBLIC	??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@Uadopt_lock_t@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
PUBLIC	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ	; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
PUBLIC	?release@?$unique_lock@Vmutex@std@@@std@@QAEPAVmutex@2@XZ ; std::unique_lock<std::mutex>::release
PUBLIC	?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ ; std::unique_lock<std::mutex>::mutex
PUBLIC	_pthread_rwlock_unlock
PUBLIC	_pthread_rwlock_wrlock
PUBLIC	_pthread_rwlock_rdlock
PUBLIC	??_Gshared_mutex@std@@QAEPAXI@Z			; std::shared_mutex::`scalar deleting destructor'
PUBLIC	_pthread_rwlock_destroy
PUBLIC	_pthread_rwlock_init
PUBLIC	??_Gmutex@std@@QAEPAXI@Z			; std::mutex::`scalar deleting destructor'
PUBLIC	??_Gthread@std@@QAEPAXI@Z			; std::thread::`scalar deleting destructor'
PUBLIC	_pthread_exit
PUBLIC	??_Gcondition_variable@std@@QAEPAXI@Z		; std::condition_variable::`scalar deleting destructor'
PUBLIC	?unlock_shared@shared_mutex@std@@QAEXXZ		; std::shared_mutex::unlock_shared
PUBLIC	?lock_shared@shared_mutex@std@@QAEXXZ		; std::shared_mutex::lock_shared
PUBLIC	?unlock@shared_mutex@std@@QAEXXZ		; std::shared_mutex::unlock
PUBLIC	?lock@shared_mutex@std@@QAEXXZ			; std::shared_mutex::lock
PUBLIC	??1shared_mutex@std@@QAE@XZ			; std::shared_mutex::~shared_mutex
PUBLIC	??0shared_mutex@std@@QAE@XZ			; std::shared_mutex::shared_mutex
PUBLIC	??1mutex@std@@QAE@XZ				; std::mutex::~mutex
PUBLIC	?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
PUBLIC	?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z ; std::condition_variable::wait
PUBLIC	?notify_all@condition_variable@std@@QAEXXZ	; std::condition_variable::notify_all
PUBLIC	?notify_one@condition_variable@std@@QAEXXZ	; std::condition_variable::notify_one
PUBLIC	??1condition_variable@std@@QAE@XZ		; std::condition_variable::~condition_variable
PUBLIC	??0condition_variable@std@@QAE@XZ		; std::condition_variable::condition_variable
PUBLIC	??0mutex@std@@QAE@XZ				; std::mutex::mutex
PUBLIC	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
PUBLIC	?unlock@_Mutex_base@std@@QAEXXZ			; std::_Mutex_base::unlock
PUBLIC	?lock@_Mutex_base@std@@QAEXXZ			; std::_Mutex_base::lock
PUBLIC	??1_Mutex_base@std@@QAE@XZ			; std::_Mutex_base::~_Mutex_base
PUBLIC	??0_Mutex_base@std@@QAE@H@Z			; std::_Mutex_base::_Mutex_base
PUBLIC	?join@thread@std@@QAEXXZ			; std::thread::join
PUBLIC	?joinable@thread@std@@QBE_NXZ			; std::thread::joinable
PUBLIC	??1thread@std@@QAE@XZ				; std::thread::~thread
PUBLIC	?_Check_C_return@std@@YAHH@Z			; std::_Check_C_return
PUBLIC	_pthread_mutex_unlock
PUBLIC	_pthread_join
PUBLIC	_pthread_cond_destroy
PUBLIC	_pthread_cond_signal
PUBLIC	_pthread_mutex_destroy
PUBLIC	_pthread_create
PUBLIC	_pthread_mutex_lock
PUBLIC	_pthread_cond_wait
PUBLIC	_pthread_cond_broadcast
PUBLIC	_pthread_mutex_init
PUBLIC	_pthread_cond_init
EXTRN	___std_terminate:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?notify_one@condition_variable@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?notify_all@condition_variable@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z$1
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__ehfuncinfo$_pthread_cond_signal DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$_pthread_cond_signal
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$_pthread_cond_signal DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$_pthread_cond_wait DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$_pthread_cond_wait
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$_pthread_cond_wait DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$_pthread_cond_broadcast DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$_pthread_cond_broadcast
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$_pthread_cond_broadcast DD 0ffffffffH
	DD	FLAT:___std_terminate
xdata$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_pthread_cond_init PROC
; _cond$ = ecx
; ___formal$dead$ = edx

; 39   : int pthread_cond_init(pthread_cond_t* cond, const pthread_condattr_t*) {

	push	esi
	push	edi

; 40   :     *cond = new std::condition_variable();

	push	40					; 00000028H
	mov	edi, ecx
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 578  :         _Cnd_init_in_situ(_Mycnd());

	push	esi
	call	DWORD PTR __imp___Cnd_init_in_situ
	add	esp, 8
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 40   :     *cond = new std::condition_variable();

	mov	DWORD PTR [edi], esi

; 41   :     return 0;

	xor	eax, eax
	pop	edi
	pop	esi

; 42   : }

	ret	0
_pthread_cond_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_pthread_mutex_init PROC
; _mutex$ = ecx
; ___formal$dead$ = edx

; 80   : int pthread_mutex_init(pthread_mutex_t* mutex, const pthread_mutexattr_t*) {

	push	esi
	push	edi

; 81   :     *mutex = new std::mutex();

	push	48					; 00000030H
	mov	edi, ecx
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 40   :         _Mtx_init_in_situ(_Mymtx(), _Flags | _Mtx_try);

	push	2
	push	esi
	call	DWORD PTR __imp___Mtx_init_in_situ
	add	esp, 12					; 0000000cH
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 81   :     *mutex = new std::mutex();

	mov	DWORD PTR [edi], esi

; 82   :     return 0;

	xor	eax, eax
	pop	edi
	pop	esi

; 83   : }

	ret	0
_pthread_mutex_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pthread_cond_broadcast PROC
; _cond$ = ecx

; 28   : int pthread_cond_broadcast(pthread_cond_t* cond) {

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$_pthread_cond_broadcast
	push	eax
	mov	DWORD PTR fs:0, esp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 592  :     void notify_all() noexcept { // wake up all waiters

	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 593  :         _Check_C_return(_Cnd_broadcast(_Mycnd()));

	push	DWORD PTR [ecx]
	call	DWORD PTR __imp___Cnd_broadcast
	add	esp, 4
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h

; 130  :     if (_Res != _Thrd_success) {

	test	eax, eax
	je	SHORT $LN7@pthread_co

; 131  :         _Throw_C_error(_Res);

	push	eax
	call	DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
$LN7@pthread_co:
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 31   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@pthread_co:
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$_pthread_cond_broadcast:
	npad	1
	npad	1
	mov	eax, OFFSET __ehfuncinfo$_pthread_cond_broadcast
	jmp	___CxxFrameHandler3
text$x	ENDS
_pthread_cond_broadcast ENDP
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pthread_cond_wait PROC
; _cond$ = ecx
; _mutex$ = edx

; 49   : int pthread_cond_wait(pthread_cond_t* cond, pthread_mutex_t* mutex) {

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$_pthread_cond_wait
	push	eax
	mov	DWORD PTR fs:0, esp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 598  :         _Check_C_return(_Cnd_wait(_Mycnd(), _Lck.mutex()->_Mymtx()));

	push	DWORD PTR [edx]
	push	DWORD PTR [ecx]
	call	DWORD PTR __imp___Cnd_wait
	add	esp, 8
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h

; 130  :     if (_Res != _Thrd_success) {

	test	eax, eax
	je	SHORT $LN8@pthread_co

; 131  :         _Throw_C_error(_Res);

	push	eax
	call	DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
$LN8@pthread_co:
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 55   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN26@pthread_co:
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$_pthread_cond_wait:
	npad	1
	npad	1
	mov	eax, OFFSET __ehfuncinfo$_pthread_cond_wait
	jmp	___CxxFrameHandler3
text$x	ENDS
_pthread_cond_wait ENDP
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_pthread_mutex_lock PROC
; _mutex$ = ecx
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 51   :         _Check_C_return(_Mtx_lock(_Mymtx()));

	push	DWORD PTR [ecx]
	call	DWORD PTR __imp___Mtx_lock
	add	esp, 4
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h

; 130  :     if (_Res != _Thrd_success) {

	test	eax, eax
	je	SHORT $LN6@pthread_mu

; 131  :         _Throw_C_error(_Res);

	push	eax
	call	DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
$LN6@pthread_mu:
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 87   :     return 0;

	xor	eax, eax

; 88   : }

	ret	0
$LN10@pthread_mu:
_pthread_mutex_lock ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_executee$dead$ = 8					; size = 4
_arg$ = 12						; size = 4
_pthread_create PROC
; _thread$ = ecx
; ___formal$dead$ = edx

; 57   : int pthread_create(pthread_t* thread, const pthread_attr_t*, voidp_voidp_func executee, void* arg) {

	push	ebx
	push	esi
	push	edi

; 58   :     *thread = new std::thread(executee, arg);

	push	8
	mov	ebx, ecx
	call	??2@YAPAXI@Z				; operator new
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory

; 2068 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

	push	8
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 58   :     *thread = new std::thread(executee, arg);

	mov	esi, eax
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory

; 2068 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

	call	??2@YAPAXI@Z				; operator new
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	mov	ecx, DWORD PTR _arg$[esp+16]
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread

; 64   :         _Thr._Hnd =

	lea	edi, DWORD PTR [esi+4]
	push	edi
	push	0
	push	eax
	push	OFFSET ??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z ; std::thread::_Invoke<std::tuple<void * (__cdecl*)(void *),void *>,0,1>
	push	0
	push	0
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], OFFSET _threadqueue_worker
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread

; 64   :         _Thr._Hnd =

	call	DWORD PTR __imp___beginthreadex
	add	esp, 32					; 00000020H
	mov	DWORD PTR [esi], eax

; 65   :             reinterpret_cast<void*>(_CSTD _beginthreadex(nullptr, 0, _Invoker_proc, _Decay_copied.get(), 0, &_Thr._Id));
; 66   : #pragma warning(pop)
; 67   : 
; 68   :         if (_Thr._Hnd) { // ownership transferred to the thread

	test	eax, eax
	jne	SHORT $LN4@pthread_cr

; 69   :             (void) _Decay_copied.release();
; 70   :         } else { // failed to start thread
; 71   :             _Thr._Id = 0;
; 72   :             _Throw_Cpp_error(_RESOURCE_UNAVAILABLE_TRY_AGAIN);

	push	6
	mov	DWORD PTR [edi], eax
	call	DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
$LN4@pthread_cr:
	pop	edi
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 58   :     *thread = new std::thread(executee, arg);

	mov	DWORD PTR [ebx], esi

; 59   :     return 0;

	xor	eax, eax

; 60   : }

	pop	esi
	pop	ebx
	ret	0
$LN63@pthread_cr:
_pthread_create ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_pthread_mutex_destroy PROC
; _mutex$ = ecx

; 74   : int pthread_mutex_destroy(pthread_mutex_t* mutex) {

	push	esi
	mov	esi, ecx
	push	edi

; 75   :     delete static_cast<std::mutex*>(*mutex);

	mov	edi, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN13@pthread_mu
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 44   :         _Mtx_destroy_in_situ(_Mymtx());

	push	edi
	call	DWORD PTR __imp___Mtx_destroy_in_situ
	push	48					; 00000030H
	push	edi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 12					; 0000000cH
$LN13@pthread_mu:
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 78   : }

	xor	eax, eax
	pop	edi
	mov	DWORD PTR [esi], eax
	pop	esi
	ret	0
_pthread_mutex_destroy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pthread_cond_signal PROC
; _cond$ = ecx

; 44   : int pthread_cond_signal(pthread_cond_t* cond) {

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$_pthread_cond_signal
	push	eax
	mov	DWORD PTR fs:0, esp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 588  :     void notify_one() noexcept { // wake up one waiter

	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 589  :         _Check_C_return(_Cnd_signal(_Mycnd()));

	push	DWORD PTR [ecx]
	call	DWORD PTR __imp___Cnd_signal
	add	esp, 4
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h

; 130  :     if (_Res != _Thrd_success) {

	test	eax, eax
	je	SHORT $LN7@pthread_co

; 131  :         _Throw_C_error(_Res);

	push	eax
	call	DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
$LN7@pthread_co:
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 47   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@pthread_co:
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$_pthread_cond_signal:
	npad	1
	npad	1
	mov	eax, OFFSET __ehfuncinfo$_pthread_cond_signal
	jmp	___CxxFrameHandler3
text$x	ENDS
_pthread_cond_signal ENDP
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_pthread_cond_destroy PROC
; _cond$ = ecx

; 33   : int pthread_cond_destroy(pthread_cond_t* cond) {

	push	esi
	mov	esi, ecx
	push	edi

; 34   :     delete static_cast<std::condition_variable*>(*cond);

	mov	edi, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN10@pthread_co
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 582  :         _Cnd_destroy_in_situ(_Mycnd());

	push	edi
	call	DWORD PTR __imp___Cnd_destroy_in_situ
	push	40					; 00000028H
	push	edi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 12					; 0000000cH
$LN10@pthread_co:
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 37   : }

	xor	eax, eax
	pop	edi
	mov	DWORD PTR [esi], eax
	pop	esi
	ret	0
_pthread_cond_destroy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_pthread_join PROC
; _thread$ = ecx
; ___formal$dead$ = edx

; 67   : int pthread_join(pthread_t thread, void**) {

	push	esi
	mov	esi, ecx
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread

; 101  :         return _Thr._Id != 0;

	cmp	DWORD PTR [esi+4], 0

; 105  :         if (!joinable()) {

	jne	SHORT $LN6@pthread_jo

; 106  :             _Throw_Cpp_error(_INVALID_ARGUMENT);

	push	1
	call	DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
$LN6@pthread_jo:

; 107  :         }
; 108  : 
; 109  :         if (_Thr._Id == _Thrd_id()) {

	call	DWORD PTR __imp___Thrd_id
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN7@pthread_jo

; 110  :             _Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

	push	5
	call	DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
$LN7@pthread_jo:

; 111  :         }
; 112  : 
; 113  :         if (_Thrd_join(_Thr, nullptr) != _Thrd_success) {

	push	0
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi]
	call	DWORD PTR __imp___Thrd_join
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN8@pthread_jo

; 114  :             _Throw_Cpp_error(_NO_SUCH_PROCESS);

	push	2
	call	DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
$LN8@pthread_jo:
	push	8
	push	esi

; 115  :         }
; 116  : 
; 117  :         _Thr = {};

	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 71   :     return 0;

	xor	eax, eax
	pop	esi

; 72   : }

	ret	0
$LN22@pthread_jo:
_pthread_join ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_pthread_mutex_unlock PROC
; _mutex$ = ecx
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 67   :         _Check_C_return(_Mtx_unlock(_Mymtx()));

	push	DWORD PTR [ecx]
	call	DWORD PTR __imp___Mtx_unlock
	add	esp, 4
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h

; 130  :     if (_Res != _Thrd_success) {

	test	eax, eax
	je	SHORT $LN6@pthread_mu

; 131  :         _Throw_C_error(_Res);

	push	eax
	call	DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
$LN6@pthread_mu:
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 92   :     return 0;

	xor	eax, eax

; 93   : }

	ret	0
$LN10@pthread_mu:
_pthread_mutex_unlock ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
;	COMDAT ?_Check_C_return@std@@YAHH@Z
_TEXT	SEGMENT
?_Check_C_return@std@@YAHH@Z PROC			; std::_Check_C_return, COMDAT
; __Res$ = ecx

; 130  :     if (_Res != _Thrd_success) {

	test	ecx, ecx
	je	SHORT $LN2@Check_C_re

; 131  :         _Throw_C_error(_Res);

	push	ecx
	call	DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
$LN2@Check_C_re:

; 132  :     }
; 133  : 
; 134  :     return _Res;

	xor	eax, eax

; 135  : }

	ret	0
$LN4@Check_C_re:
?_Check_C_return@std@@YAHH@Z ENDP			; std::_Check_C_return
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
;	COMDAT ??1thread@std@@QAE@XZ
_TEXT	SEGMENT
??1thread@std@@QAE@XZ PROC				; std::thread::~thread, COMDAT
; _this$ = ecx

; 101  :         return _Thr._Id != 0;

	cmp	DWORD PTR [ecx+4], 0

; 77   :         if (joinable()) {

	je	SHORT $LN2@thread

; 78   :             _STD terminate();

	jmp	DWORD PTR __imp__terminate
$LN2@thread:

; 79   :         }
; 80   :     }

	ret	0
??1thread@std@@QAE@XZ ENDP				; std::thread::~thread
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
;	COMDAT ?joinable@thread@std@@QBE_NXZ
_TEXT	SEGMENT
?joinable@thread@std@@QBE_NXZ PROC			; std::thread::joinable, COMDAT
; _this$ = ecx

; 101  :         return _Thr._Id != 0;

	cmp	DWORD PTR [ecx+4], 0
	setne	al

; 102  :     }

	ret	0
?joinable@thread@std@@QBE_NXZ ENDP			; std::thread::joinable
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
;	COMDAT ?join@thread@std@@QAEXXZ
_TEXT	SEGMENT
?join@thread@std@@QAEXXZ PROC				; std::thread::join, COMDAT
; _this$ = ecx

; 104  :     void join() {

	push	esi
	mov	esi, ecx

; 101  :         return _Thr._Id != 0;

	cmp	DWORD PTR [esi+4], 0

; 105  :         if (!joinable()) {

	jne	SHORT $LN2@join

; 106  :             _Throw_Cpp_error(_INVALID_ARGUMENT);

	push	1
	call	DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
$LN2@join:

; 107  :         }
; 108  : 
; 109  :         if (_Thr._Id == _Thrd_id()) {

	call	DWORD PTR __imp___Thrd_id
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN3@join

; 110  :             _Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

	push	5
	call	DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
$LN3@join:

; 111  :         }
; 112  : 
; 113  :         if (_Thrd_join(_Thr, nullptr) != _Thrd_success) {

	push	0
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi]
	call	DWORD PTR __imp___Thrd_join
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@join

; 114  :             _Throw_Cpp_error(_NO_SUCH_PROCESS);

	push	2
	call	DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
$LN4@join:

; 115  :         }
; 116  : 
; 117  :         _Thr = {};

	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	pop	esi

; 118  :     }

	ret	0
$LN8@join:
?join@thread@std@@QAEXXZ ENDP				; std::thread::join
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??0_Mutex_base@std@@QAE@H@Z
_TEXT	SEGMENT
__Flags$dead$ = 8					; size = 4
??0_Mutex_base@std@@QAE@H@Z PROC			; std::_Mutex_base::_Mutex_base, COMDAT
; _this$ = ecx

; 39   :     _Mutex_base(int _Flags = 0) noexcept {

	push	esi
	mov	esi, ecx

; 40   :         _Mtx_init_in_situ(_Mymtx(), _Flags | _Mtx_try);

	push	2
	push	esi
	call	DWORD PTR __imp___Mtx_init_in_situ
	add	esp, 8

; 41   :     }

	mov	eax, esi
	pop	esi
	ret	4
??0_Mutex_base@std@@QAE@H@Z ENDP			; std::_Mutex_base::_Mutex_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??1_Mutex_base@std@@QAE@XZ
_TEXT	SEGMENT
??1_Mutex_base@std@@QAE@XZ PROC				; std::_Mutex_base::~_Mutex_base, COMDAT
; _this$ = ecx

; 44   :         _Mtx_destroy_in_situ(_Mymtx());

	push	ecx
	call	DWORD PTR __imp___Mtx_destroy_in_situ
	pop	ecx

; 45   :     }

	ret	0
??1_Mutex_base@std@@QAE@XZ ENDP				; std::_Mutex_base::~_Mutex_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?lock@_Mutex_base@std@@QAEXXZ
_TEXT	SEGMENT
?lock@_Mutex_base@std@@QAEXXZ PROC			; std::_Mutex_base::lock, COMDAT
; _this$ = ecx

; 51   :         _Check_C_return(_Mtx_lock(_Mymtx()));

	push	ecx
	call	DWORD PTR __imp___Mtx_lock
	add	esp, 4
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h

; 130  :     if (_Res != _Thrd_success) {

	test	eax, eax
	je	SHORT $LN4@lock

; 131  :         _Throw_C_error(_Res);

	push	eax
	call	DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
$LN4@lock:
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 52   :     }

	ret	0
$LN7@lock:
?lock@_Mutex_base@std@@QAEXXZ ENDP			; std::_Mutex_base::lock
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?unlock@_Mutex_base@std@@QAEXXZ
_TEXT	SEGMENT
?unlock@_Mutex_base@std@@QAEXXZ PROC			; std::_Mutex_base::unlock, COMDAT
; _this$ = ecx

; 67   :         _Check_C_return(_Mtx_unlock(_Mymtx()));

	push	ecx
	call	DWORD PTR __imp___Mtx_unlock
	add	esp, 4
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h

; 130  :     if (_Res != _Thrd_success) {

	test	eax, eax
	je	SHORT $LN4@unlock

; 131  :         _Throw_C_error(_Res);

	push	eax
	call	DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
$LN4@unlock:
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 68   :     }

	ret	0
$LN7@unlock:
?unlock@_Mutex_base@std@@QAEXXZ ENDP			; std::_Mutex_base::unlock
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ
_TEXT	SEGMENT
?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ PROC ; std::_Mutex_base::_Mymtx, COMDAT
; _this$ = ecx

; 83   :         return reinterpret_cast<_Mtx_t>(&_Mtx_storage);

	mov	eax, ecx

; 84   :     }

	ret	0
?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ENDP ; std::_Mutex_base::_Mymtx
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??0mutex@std@@QAE@XZ
_TEXT	SEGMENT
??0mutex@std@@QAE@XZ PROC				; std::mutex::mutex, COMDAT
; _this$ = ecx

; 89   :     /* constexpr */ mutex() noexcept // TRANSITION, ABI

	push	esi
	mov	esi, ecx

; 40   :         _Mtx_init_in_situ(_Mymtx(), _Flags | _Mtx_try);

	push	2
	push	esi
	call	DWORD PTR __imp___Mtx_init_in_situ
	add	esp, 8

; 90   :         : _Mutex_base() {}

	mov	eax, esi
	pop	esi
	ret	0
??0mutex@std@@QAE@XZ ENDP				; std::mutex::mutex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??0condition_variable@std@@QAE@XZ
_TEXT	SEGMENT
??0condition_variable@std@@QAE@XZ PROC			; std::condition_variable::condition_variable, COMDAT
; _this$ = ecx

; 577  :     condition_variable() {

	push	esi
	mov	esi, ecx

; 578  :         _Cnd_init_in_situ(_Mycnd());

	push	esi
	call	DWORD PTR __imp___Cnd_init_in_situ
	add	esp, 4

; 579  :     }

	mov	eax, esi
	pop	esi
	ret	0
??0condition_variable@std@@QAE@XZ ENDP			; std::condition_variable::condition_variable
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??1condition_variable@std@@QAE@XZ
_TEXT	SEGMENT
??1condition_variable@std@@QAE@XZ PROC			; std::condition_variable::~condition_variable, COMDAT
; _this$ = ecx

; 582  :         _Cnd_destroy_in_situ(_Mycnd());

	push	ecx
	call	DWORD PTR __imp___Cnd_destroy_in_situ
	pop	ecx

; 583  :     }

	ret	0
??1condition_variable@std@@QAE@XZ ENDP			; std::condition_variable::~condition_variable
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?notify_one@condition_variable@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?notify_one@condition_variable@std@@QAEXXZ PROC		; std::condition_variable::notify_one, COMDAT
; _this$ = ecx

; 588  :     void notify_one() noexcept { // wake up one waiter

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?notify_one@condition_variable@std@@QAEXXZ
	push	eax
	mov	DWORD PTR fs:0, esp

; 589  :         _Check_C_return(_Cnd_signal(_Mycnd()));

	push	ecx
	call	DWORD PTR __imp___Cnd_signal
	add	esp, 4
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h

; 130  :     if (_Res != _Thrd_success) {

	test	eax, eax
	je	SHORT $LN4@notify_one

; 131  :         _Throw_C_error(_Res);

	push	eax
	call	DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
$LN4@notify_one:
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 590  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@notify_one:
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?notify_one@condition_variable@std@@QAEXXZ:
	npad	1
	npad	1
	mov	eax, OFFSET __ehfuncinfo$?notify_one@condition_variable@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?notify_one@condition_variable@std@@QAEXXZ ENDP		; std::condition_variable::notify_one
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?notify_all@condition_variable@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?notify_all@condition_variable@std@@QAEXXZ PROC		; std::condition_variable::notify_all, COMDAT
; _this$ = ecx

; 592  :     void notify_all() noexcept { // wake up all waiters

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?notify_all@condition_variable@std@@QAEXXZ
	push	eax
	mov	DWORD PTR fs:0, esp

; 593  :         _Check_C_return(_Cnd_broadcast(_Mycnd()));

	push	ecx
	call	DWORD PTR __imp___Cnd_broadcast
	add	esp, 4
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h

; 130  :     if (_Res != _Thrd_success) {

	test	eax, eax
	je	SHORT $LN4@notify_all

; 131  :         _Throw_C_error(_Res);

	push	eax
	call	DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
$LN4@notify_all:
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 594  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@notify_all:
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?notify_all@condition_variable@std@@QAEXXZ:
	npad	1
	npad	1
	mov	eax, OFFSET __ehfuncinfo$?notify_all@condition_variable@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?notify_all@condition_variable@std@@QAEXXZ ENDP		; std::condition_variable::notify_all
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z
_TEXT	SEGMENT
__Lck$ = 8						; size = 4
?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z PROC ; std::condition_variable::wait, COMDAT
; _this$ = ecx

; 597  :         // Nothing to do to comply with LWG-2135 because std::mutex lock/unlock are nothrow
; 598  :         _Check_C_return(_Cnd_wait(_Mycnd(), _Lck.mutex()->_Mymtx()));

	mov	eax, DWORD PTR __Lck$[esp-4]
	push	DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp___Cnd_wait
	add	esp, 8
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h

; 130  :     if (_Res != _Thrd_success) {

	test	eax, eax
	je	SHORT $LN4@wait

; 131  :         _Throw_C_error(_Res);

	push	eax
	call	DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
$LN4@wait:
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 599  :     }

	ret	4
$LN7@wait:
?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z ENDP ; std::condition_variable::wait
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ
_TEXT	SEGMENT
?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ PROC ; std::condition_variable::_Mycnd, COMDAT
; _this$ = ecx

; 698  :         return reinterpret_cast<_Cnd_t>(&_Cnd_storage);

	mov	eax, ecx

; 699  :     }

	ret	0
?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ENDP ; std::condition_variable::_Mycnd
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??1mutex@std@@QAE@XZ
_TEXT	SEGMENT
??1mutex@std@@QAE@XZ PROC				; std::mutex::~mutex, COMDAT
; _this$ = ecx

; 44   :         _Mtx_destroy_in_situ(_Mymtx());

	push	ecx
	call	DWORD PTR __imp___Mtx_destroy_in_situ
	pop	ecx
	ret	0
??1mutex@std@@QAE@XZ ENDP				; std::mutex::~mutex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
;	COMDAT ??0shared_mutex@std@@QAE@XZ
_TEXT	SEGMENT
??0shared_mutex@std@@QAE@XZ PROC			; std::shared_mutex::shared_mutex, COMDAT
; _this$ = ecx

; 37   :         : _Myhandle(nullptr) {}

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	ret	0
??0shared_mutex@std@@QAE@XZ ENDP			; std::shared_mutex::shared_mutex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
;	COMDAT ??1shared_mutex@std@@QAE@XZ
_TEXT	SEGMENT
??1shared_mutex@std@@QAE@XZ PROC			; std::shared_mutex::~shared_mutex, COMDAT
; _this$ = ecx

; 39   :     ~shared_mutex() noexcept {}

	ret	0
??1shared_mutex@std@@QAE@XZ ENDP			; std::shared_mutex::~shared_mutex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
;	COMDAT ?lock@shared_mutex@std@@QAEXXZ
_TEXT	SEGMENT
?lock@shared_mutex@std@@QAEXXZ PROC			; std::shared_mutex::lock, COMDAT
; _this$ = ecx

; 42   :         _Smtx_lock_exclusive(&_Myhandle);

	push	ecx
	call	__Smtx_lock_exclusive
	pop	ecx

; 43   :     }

	ret	0
?lock@shared_mutex@std@@QAEXXZ ENDP			; std::shared_mutex::lock
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
;	COMDAT ?unlock@shared_mutex@std@@QAEXXZ
_TEXT	SEGMENT
?unlock@shared_mutex@std@@QAEXXZ PROC			; std::shared_mutex::unlock, COMDAT
; _this$ = ecx

; 50   :         _Smtx_unlock_exclusive(&_Myhandle);

	push	ecx
	call	__Smtx_unlock_exclusive
	pop	ecx

; 51   :     }

	ret	0
?unlock@shared_mutex@std@@QAEXXZ ENDP			; std::shared_mutex::unlock
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
;	COMDAT ?lock_shared@shared_mutex@std@@QAEXXZ
_TEXT	SEGMENT
?lock_shared@shared_mutex@std@@QAEXXZ PROC		; std::shared_mutex::lock_shared, COMDAT
; _this$ = ecx

; 54   :         _Smtx_lock_shared(&_Myhandle);

	push	ecx
	call	__Smtx_lock_shared
	pop	ecx

; 55   :     }

	ret	0
?lock_shared@shared_mutex@std@@QAEXXZ ENDP		; std::shared_mutex::lock_shared
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
;	COMDAT ?unlock_shared@shared_mutex@std@@QAEXXZ
_TEXT	SEGMENT
?unlock_shared@shared_mutex@std@@QAEXXZ PROC		; std::shared_mutex::unlock_shared, COMDAT
; _this$ = ecx

; 62   :         _Smtx_unlock_shared(&_Myhandle);

	push	ecx
	call	__Smtx_unlock_shared
	pop	ecx

; 63   :     }

	ret	0
?unlock_shared@shared_mutex@std@@QAEXXZ ENDP		; std::shared_mutex::unlock_shared
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??_Gcondition_variable@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$dead$ = 8					; size = 4
??_Gcondition_variable@std@@QAEPAXI@Z PROC		; std::condition_variable::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 582  :         _Cnd_destroy_in_situ(_Mycnd());

	push	esi
	mov	esi, ecx
	push	esi
	call	DWORD PTR __imp___Cnd_destroy_in_situ
	push	40					; 00000028H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 12					; 0000000cH
	mov	eax, esi
	pop	esi
	ret	4
??_Gcondition_variable@std@@QAEPAXI@Z ENDP		; std::condition_variable::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_pthread_exit PROC
; ___formal$dead$ = ecx

; 63   :     // It might be enough to do nothing here
; 64   :     // considering Kvazaar's current use of pthread_exit
; 65   : }

	ret	0
_pthread_exit ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
;	COMDAT ??_Gthread@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$dead$ = 8					; size = 4
??_Gthread@std@@QAEPAXI@Z PROC				; std::thread::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 101  :         return _Thr._Id != 0;

	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+4], 0

; 77   :         if (joinable()) {

	je	SHORT $LN5@scalar

; 78   :             _STD terminate();

	call	DWORD PTR __imp__terminate
$LN5@scalar:
	push	8
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	mov	eax, esi
	pop	esi
	ret	4
$LN10@scalar:
??_Gthread@std@@QAEPAXI@Z ENDP				; std::thread::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??_Gmutex@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$dead$ = 8					; size = 4
??_Gmutex@std@@QAEPAXI@Z PROC				; std::mutex::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 44   :         _Mtx_destroy_in_situ(_Mymtx());

	push	esi
	mov	esi, ecx
	push	esi
	call	DWORD PTR __imp___Mtx_destroy_in_situ
	push	48					; 00000030H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 12					; 0000000cH
	mov	eax, esi
	pop	esi
	ret	4
??_Gmutex@std@@QAEPAXI@Z ENDP				; std::mutex::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_pthread_rwlock_init PROC
; _lock$ = ecx
; ___formal$dead$ = edx

; 96   : {

	push	esi

; 97   :   *lock = new rw_lock_internal;

	push	8
	mov	esi, ecx
	call	??2@YAPAXI@Z				; operator new

; 98   :   static_cast<rw_lock_internal*>(*lock)->lock = new std::shared_mutex;

	push	4
	mov	DWORD PTR [esi], eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 8
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex

; 37   :         : _Myhandle(nullptr) {}

	mov	DWORD PTR [eax], 0
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 98   :   static_cast<rw_lock_internal*>(*lock)->lock = new std::shared_mutex;

	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [ecx], eax

; 99   :   static_cast<rw_lock_internal*>(*lock)->write_lock = false;

	mov	eax, DWORD PTR [esi]

; 100  :   return 0;

	pop	esi
	mov	BYTE PTR [eax+4], 0
	xor	eax, eax

; 101  : }

	ret	0
_pthread_rwlock_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_pthread_rwlock_destroy PROC
; _rwlock$ = ecx

; 104  : {

	push	esi
	mov	esi, ecx

; 105  :   delete static_cast<rw_lock_internal*>(*rwlock)->lock;

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@pthread_rw
	push	4
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	mov	eax, DWORD PTR [esi]
	add	esp, 8
$LN6@pthread_rw:

; 106  :   delete static_cast<rw_lock_internal*>(*rwlock);

	push	8
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 107  :   return 0;

	xor	eax, eax
	pop	esi

; 108  : }

	ret	0
_pthread_rwlock_destroy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gshared_mutex@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$dead$ = 8					; size = 4
??_Gshared_mutex@std@@QAEPAXI@Z PROC			; std::shared_mutex::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	push	4
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	mov	eax, esi
	pop	esi
	ret	4
??_Gshared_mutex@std@@QAEPAXI@Z ENDP			; std::shared_mutex::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_pthread_rwlock_rdlock PROC
; _rwlock$ = ecx

; 112  :   static_cast<rw_lock_internal*>(*rwlock)->lock->lock_shared();

	mov	eax, DWORD PTR [ecx]
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex

; 54   :         _Smtx_lock_shared(&_Myhandle);

	push	DWORD PTR [eax]
	call	__Smtx_lock_shared
	add	esp, 4
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 113  :   return 0;

	xor	eax, eax

; 114  : }

	ret	0
_pthread_rwlock_rdlock ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_pthread_rwlock_wrlock PROC
; _rwlock$ = ecx

; 117  : {

	push	esi
	mov	esi, ecx

; 118  :   static_cast<rw_lock_internal*>(*rwlock)->lock->lock();

	mov	eax, DWORD PTR [esi]
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex

; 42   :         _Smtx_lock_exclusive(&_Myhandle);

	push	DWORD PTR [eax]
	call	__Smtx_lock_exclusive
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 119  :   static_cast<rw_lock_internal*>(*rwlock)->write_lock = true;

	mov	eax, DWORD PTR [esi]
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex

; 42   :         _Smtx_lock_exclusive(&_Myhandle);

	add	esp, 4
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 119  :   static_cast<rw_lock_internal*>(*rwlock)->write_lock = true;

	mov	BYTE PTR [eax+4], 1

; 120  :   return 0;

	xor	eax, eax
	pop	esi

; 121  : }

	ret	0
_pthread_rwlock_wrlock ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp
_TEXT	SEGMENT
_pthread_rwlock_unlock PROC
; _rwlock$ = ecx

; 125  :   if (static_cast<rw_lock_internal*>(*rwlock)->write_lock) {

	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+4], 0
	je	SHORT $LN2@pthread_rw

; 126  :     static_cast<rw_lock_internal*>(*rwlock)->write_lock = false;

	mov	BYTE PTR [eax+4], 0

; 127  :     static_cast<rw_lock_internal*>(*rwlock)->lock->unlock();

	mov	eax, DWORD PTR [ecx]
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex

; 50   :         _Smtx_unlock_exclusive(&_Myhandle);

	push	DWORD PTR [eax]
	call	__Smtx_unlock_exclusive
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 133  : }

	add	esp, 4
	xor	eax, eax
	ret	0
$LN2@pthread_rw:
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex

; 62   :         _Smtx_unlock_shared(&_Myhandle);

	push	DWORD PTR [eax]
	call	__Smtx_unlock_shared
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\pthread.cpp

; 133  : }

	add	esp, 4
	xor	eax, eax
	ret	0
_pthread_rwlock_unlock ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ
_TEXT	SEGMENT
?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ PROC	; std::unique_lock<std::mutex>::mutex, COMDAT
; _this$ = ecx

; 257  :         return _Pmtx;

	mov	eax, DWORD PTR [ecx]

; 258  :     }

	ret	0
?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ ENDP	; std::unique_lock<std::mutex>::mutex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?release@?$unique_lock@Vmutex@std@@@std@@QAEPAVmutex@2@XZ
_TEXT	SEGMENT
?release@?$unique_lock@Vmutex@std@@@std@@QAEPAVmutex@2@XZ PROC ; std::unique_lock<std::mutex>::release, COMDAT
; _this$ = ecx

; 242  :         _Mutex* _Res = _Pmtx;

	mov	eax, DWORD PTR [ecx]

; 243  :         _Pmtx        = nullptr;

	mov	DWORD PTR [ecx], 0

; 244  :         _Owns        = false;

	mov	BYTE PTR [ecx+4], 0

; 245  :         return _Res;
; 246  :     }

	ret	0
?release@?$unique_lock@Vmutex@std@@@std@@QAEPAVmutex@2@XZ ENDP ; std::unique_lock<std::mutex>::release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ PROC		; std::unique_lock<std::mutex>::~unique_lock<std::mutex>, COMDAT
; _this$ = ecx

; 186  :     ~unique_lock() noexcept {

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp

; 187  :         if (_Owns) {

	cmp	BYTE PTR [ecx+4], 0
	je	SHORT $LN7@unique_loc

; 67   :         _Check_C_return(_Mtx_unlock(_Mymtx()));

	push	DWORD PTR [ecx]
	call	DWORD PTR __imp___Mtx_unlock
	add	esp, 4
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h

; 130  :     if (_Res != _Thrd_success) {

	test	eax, eax
	je	SHORT $LN7@unique_loc

; 131  :         _Throw_C_error(_Res);

	push	eax
	call	DWORD PTR __imp_?_Throw_C_error@std@@YAXH@Z
$LN7@unique_loc:
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex

; 190  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@unique_loc:
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	eax, OFFSET __ehfuncinfo$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ENDP		; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@Uadopt_lock_t@1@@Z
_TEXT	SEGMENT
__Mtx$ = 8						; size = 4
___formal$ = 12						; size = 1
??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@Uadopt_lock_t@1@@Z PROC ; std::unique_lock<std::mutex>::unique_lock<std::mutex>, COMDAT
; _this$ = ecx

; 141  :         : _Pmtx(_STD addressof(_Mtx)), _Owns(true) { // construct and assume already locked

	mov	eax, DWORD PTR __Mtx$[esp-4]
	mov	DWORD PTR [ecx], eax

; 142  :     }

	mov	eax, ecx
	mov	BYTE PTR [ecx+4], 1
	ret	8
??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@Uadopt_lock_t@1@@Z ENDP ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
;	COMDAT ??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Fx$ = 8						; size = 4
__Decay_copied$ = 12					; size = 4
_<_Ax_0>$ = 12						; size = 4
??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z PROC ; std::thread::thread<void * (__cdecl*&)(void *),void * &,0>, COMDAT
; _this$ = ecx

; 55   :     explicit thread(_Fn&& _Fx, _Args&&... _Ax) {

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	push	edi
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory

; 2068 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

	push	8
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread

; 55   :     explicit thread(_Fn&& _Fx, _Args&&... _Ax) {

	mov	esi, ecx
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory

; 2068 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

	call	??2@YAPAXI@Z				; operator new
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	mov	edx, DWORD PTR _<_Ax_0>$[ebp]
	mov	ecx, DWORD PTR __Fx$[ebp]
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory

; 1333 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	DWORD PTR __Decay_copied$[ebp], eax
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread

; 64   :         _Thr._Hnd =

	lea	edi, DWORD PTR [esi+4]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	edi
	push	0
	push	eax
	push	OFFSET ??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z ; std::thread::_Invoke<std::tuple<void * (__cdecl*)(void *),void *>,0,1>
	push	0
	push	0
	call	DWORD PTR __imp___beginthreadex
	add	esp, 28					; 0000001cH
	mov	DWORD PTR [esi], eax

; 65   :             reinterpret_cast<void*>(_CSTD _beginthreadex(nullptr, 0, _Invoker_proc, _Decay_copied.get(), 0, &_Thr._Id));
; 66   : #pragma warning(pop)
; 67   : 
; 68   :         if (_Thr._Hnd) { // ownership transferred to the thread

	test	eax, eax
	je	SHORT $LN2@thread

; 73   :         }
; 74   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, esi
	pop	edi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
$LN2@thread:

; 69   :             (void) _Decay_copied.release();
; 70   :         } else { // failed to start thread
; 71   :             _Thr._Id = 0;
; 72   :             _Throw_Cpp_error(_RESOURCE_UNAVAILABLE_TRY_AGAIN);

	push	6
	mov	DWORD PTR [edi], 0
	call	DWORD PTR __imp_?_Throw_Cpp_error@std@@YAXH@Z
$LN64@thread:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z$1:
	lea	ecx, DWORD PTR __Decay_copied$[ebp]
	jmp	??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::~unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z:
	npad	1
	npad	1
	mov	eax, OFFSET __ehfuncinfo$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z ENDP ; std::thread::thread<void * (__cdecl*&)(void *),void * &,0>
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xstddef
;	COMDAT ??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z
_TEXT	SEGMENT
??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z PROC ; std::addressof<std::mutex>, COMDAT
; __Val$ = ecx

; 275  :     return __builtin_addressof(_Val);

	mov	eax, ecx

; 276  : }

	ret	0
??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z ENDP ; std::addressof<std::mutex>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\utility
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ
_TEXT	SEGMENT
?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::release, COMDAT
; _this$ = ecx
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\utility

; 573  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR [ecx]

; 574  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	DWORD PTR [ecx], 0
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory

; 1907 :     }

	ret	0
?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ?get@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ
_TEXT	SEGMENT
?get@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get, COMDAT
; _this$ = ecx

; 1898 :         return _Mypair._Myval2;

	mov	eax, DWORD PTR [ecx]

; 1899 :     }

	ret	0
?get@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::~unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >, COMDAT
; _this$ = ecx

; 1876 :         if (_Mypair._Myval2) {

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN5@unique_ptr

; 1762 :         delete _Ptr;

	push	8
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN5@unique_ptr:

; 1877 :             _Mypair._Get_first()(_Mypair._Myval2);
; 1878 :         }
; 1879 :     }

	ret	0
??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::~unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Get_first, COMDAT
; _this$ = ecx

; 1336 :         return *this;

	mov	eax, ecx

; 1337 :     }

	ret	0
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ??R?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@QBEXPAV?$tuple@P6APAXPAX@ZPAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??R?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@QBEXPAV?$tuple@P6APAXPAX@ZPAX@1@@Z PROC ; std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >::operator(), COMDAT
; _this$dead$ = ecx

; 1761 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1762 :         delete _Ptr;

	push	8
	push	DWORD PTR __Ptr$[esp]
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 1763 :     }

	ret	4
??R?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@QBEXPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ENDP ; std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z
_TEXT	SEGMENT
??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z PROC ; std::forward<void * (__cdecl*&)(void *)>, COMDAT
; __Arg$ = ecx

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, ecx

; 1456 : }

	ret	0
??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z ENDP ; std::forward<void * (__cdecl*&)(void *)>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@AAPAX@std@@YAAAPAXAAPAX@Z
_TEXT	SEGMENT
??$forward@AAPAX@std@@YAAAPAXAAPAX@Z PROC		; std::forward<void * &>, COMDAT
; __Arg$ = ecx

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, ecx

; 1456 : }

	ret	0
??$forward@AAPAX@std@@YAAAPAXAAPAX@Z ENDP		; std::forward<void * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ??$make_unique@V?$tuple@P6APAXPAX@ZPAX@std@@AAP6APAXPAX@ZAAPAX$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@0@AAP6APAXPAX@ZAAPAX@Z
_TEXT	SEGMENT
___$ReturnUdt$ = -4					; size = 4
_<_Args_1>$ = 8						; size = 4
??$make_unique@V?$tuple@P6APAXPAX@ZPAX@std@@AAP6APAXPAX@ZAAPAX$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@0@AAP6APAXPAX@ZAAPAX@Z PROC ; std::make_unique<std::tuple<void * (__cdecl*)(void *),void *>,void * (__cdecl*&)(void *),void * &,0>, COMDAT
; ___$ReturnUdt$ = ecx
; _<_Args_0>$ = edx

; 2067 : _NODISCARD unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	ebx, ecx
	mov	edi, edx

; 2068 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

	push	8
	mov	DWORD PTR ___$ReturnUdt$[esp+20], ebx
	call	??2@YAPAXI@Z				; operator new
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	mov	esi, DWORD PTR _<_Args_1>$[esp+16]
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory

; 2068 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

	add	esp, 4
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	mov	esi, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi
	mov	ecx, DWORD PTR [edi]
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory

; 2068 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

	pop	edi
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	mov	DWORD PTR [eax+4], ecx
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory

; 1333 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	DWORD PTR [ebx], eax
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory

; 2068 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

	mov	eax, ebx
	pop	esi
	pop	ebx

; 2069 : }

	pop	ecx
	ret	0
??$make_unique@V?$tuple@P6APAXPAX@ZPAX@std@@AAP6APAXPAX@ZAAPAX$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@0@AAP6APAXPAX@ZAAPAX@Z ENDP ; std::make_unique<std::tuple<void * (__cdecl*)(void *),void *>,void * (__cdecl*&)(void *),void * &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\utility
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>, COMDAT
; _this$ = ecx
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\utility

; 573  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	edx, DWORD PTR [eax]

; 574  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	DWORD PTR [eax], 0
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory

; 1833 :     }

	mov	eax, ecx
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory

; 1333 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	DWORD PTR [ecx], edx
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory

; 1833 :     }

	ret	4
??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
;	COMDAT ??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__RawVals$ = 8						; size = 4
??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z PROC ; std::thread::_Invoke<std::tuple<void * (__cdecl*)(void *),void *>,0,1>, COMDAT

; 39   :     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits

; 1612 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

	mov	esi, DWORD PTR __RawVals$[ebp]
	push	DWORD PTR [esi]
	mov	eax, DWORD PTR [esi+4]
	call	eax
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread

; 44   :         _Cnd_do_broadcast_at_thread_exit(); // TRANSITION, ABI

	call	DWORD PTR __imp___Cnd_do_broadcast_at_thread_exit
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory

; 1762 :         delete _Ptr;

	push	8
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread

; 46   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory

; 1762 :         delete _Ptr;

	add	esp, 12					; 0000000cH
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread

; 45   :         return 0;

	xor	eax, eax

; 46   :     }

	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z:
	npad	1
	npad	1
	mov	eax, OFFSET __ehfuncinfo$??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z ENDP ; std::thread::_Invoke<std::tuple<void * (__cdecl*)(void *),void *>,0,1>
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\utility
;	COMDAT ??$exchange@PAV?$tuple@P6APAXPAX@ZPAX@std@@PAV12@@std@@YAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@$$QAPAV10@@Z
_TEXT	SEGMENT
??$exchange@PAV?$tuple@P6APAXPAX@ZPAX@std@@PAV12@@std@@YAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@$$QAPAV10@@Z PROC ; std::exchange<std::tuple<void * (__cdecl*)(void *),void *> *,std::tuple<void * (__cdecl*)(void *),void *> *>, COMDAT
; __Val$ = ecx
; __New_val$ = edx

; 572  :     // assign _New_val to _Val, return previous _Val
; 573  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR [ecx]

; 574  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], edx

; 575  :     return _Old_val;
; 576  : }

	ret	0
??$exchange@PAV?$tuple@P6APAXPAX@ZPAX@std@@PAV12@@std@@YAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@$$QAPAV10@@Z ENDP ; std::exchange<std::tuple<void * (__cdecl*)(void *),void *> *,std::tuple<void * (__cdecl*)(void *),void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ??D?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEAAV?$tuple@P6APAXPAX@ZPAX@1@XZ
_TEXT	SEGMENT
??D?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEAAV?$tuple@P6APAXPAX@ZPAX@1@XZ PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::operator*, COMDAT
; _this$ = ecx

; 1890 :         return *_Mypair._Myval2;

	mov	eax, DWORD PTR [ecx]

; 1891 :     }

	ret	0
??D?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEAAV?$tuple@P6APAXPAX@ZPAX@1@XZ ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ?get_deleter@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ
_TEXT	SEGMENT
?get_deleter@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get_deleter, COMDAT
; _this$ = ecx

; 1882 :         return _Mypair._Get_first();

	mov	eax, ecx

; 1883 :     }

	ret	0
?get_deleter@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get_deleter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$?0AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@AAP6APAXPAX@ZAAPAX@Z
_TEXT	SEGMENT
__This_arg$ = 8						; size = 4
_<_Rest_arg_0>$ = 12					; size = 4
??$?0AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@AAP6APAXPAX@ZAAPAX@Z PROC ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><void * (__cdecl*&)(void *),void * &,0>, COMDAT
; _this$ = ecx

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	mov	eax, DWORD PTR _<_Rest_arg_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __This_arg$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 315  :         : tuple(_Exact_args_t{}, _STD forward<_This2>(_This_arg), _STD forward<_Rest2>(_Rest_arg)...) {}

	mov	eax, ecx
	ret	8
??$?0AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@AAP6APAXPAX@ZAAPAX@Z ENDP ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><void * (__cdecl*&)(void *),void * &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>, COMDAT
; _this$ = ecx
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory

; 1328 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	eax, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [ecx], eax
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory

; 1815 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

	mov	eax, ecx
	ret	4
??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z
_TEXT	SEGMENT
??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z PROC ; std::forward<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >, COMDAT
; __Arg$ = ecx

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, ecx

; 1456 : }

	ret	0
??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z ENDP ; std::forward<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@1@$$QAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$dead$ = 12					; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@1@$$QAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *>, COMDAT
; _this$ = ecx

; 1333 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	eax, DWORD PTR _<_Val2_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	ret	12					; 0000000cH
??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@1@$$QAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$get@$0A@P6APAXPAX@ZPAX@std@@YAAAP6APAXPAX@ZAAV?$tuple@P6APAXPAX@ZPAX@0@@Z
_TEXT	SEGMENT
??$get@$0A@P6APAXPAX@ZPAX@std@@YAAAP6APAXPAX@ZAAV?$tuple@P6APAXPAX@ZPAX@0@@Z PROC ; std::get<0,void * (__cdecl*)(void *),void *>, COMDAT
; __Tuple$ = ecx

; 762  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 763  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

	lea	eax, DWORD PTR [ecx+4]

; 764  : }

	ret	0
??$get@$0A@P6APAXPAX@ZPAX@std@@YAAAP6APAXPAX@ZAAV?$tuple@P6APAXPAX@ZPAX@0@@Z ENDP ; std::get<0,void * (__cdecl*)(void *),void *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$move@AAP6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z
_TEXT	SEGMENT
??$move@AAP6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z PROC ; std::move<void * (__cdecl*&)(void *)>, COMDAT
; __Arg$ = ecx

; 1467 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, ecx

; 1468 : }

	ret	0
??$move@AAP6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z ENDP ; std::move<void * (__cdecl*&)(void *)>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$get@$00P6APAXPAX@ZPAX@std@@YAAAPAXAAV?$tuple@P6APAXPAX@ZPAX@0@@Z
_TEXT	SEGMENT
??$get@$00P6APAXPAX@ZPAX@std@@YAAAPAXAAV?$tuple@P6APAXPAX@ZPAX@0@@Z PROC ; std::get<1,void * (__cdecl*)(void *),void *>, COMDAT
; __Tuple$ = ecx

; 762  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 763  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

	mov	eax, ecx

; 764  : }

	ret	0
??$get@$00P6APAXPAX@ZPAX@std@@YAAAPAXAAV?$tuple@P6APAXPAX@ZPAX@0@@Z ENDP ; std::get<1,void * (__cdecl*)(void *),void *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$move@AAPAX@std@@YA$$QAPAXAAPAX@Z
_TEXT	SEGMENT
??$move@AAPAX@std@@YA$$QAPAXAAPAX@Z PROC		; std::move<void * &>, COMDAT
; __Arg$ = ecx

; 1467 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, ecx

; 1468 : }

	ret	0
??$move@AAPAX@std@@YA$$QAPAXAAPAX@Z ENDP		; std::move<void * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$invoke@P6APAXPAX@ZPAX@std@@YAPAX$$QAP6APAXPAX@Z$$QAPAX@Z
_TEXT	SEGMENT
??$invoke@P6APAXPAX@ZPAX@std@@YAPAX$$QAP6APAXPAX@Z$$QAPAX@Z PROC ; std::invoke<void * (__cdecl*)(void *),void *>, COMDAT
; __Obj$ = ecx
; _<_Args_0>$ = edx

; 1612 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

	push	DWORD PTR [edx]
	mov	eax, DWORD PTR [ecx]
	call	eax
	add	esp, 4
	ret	0
??$invoke@P6APAXPAX@ZPAX@std@@YAPAX$$QAP6APAXPAX@Z$$QAPAX@Z ENDP ; std::invoke<void * (__cdecl*)(void *),void *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z
_TEXT	SEGMENT
??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z PROC ; std::forward<void * (__cdecl*)(void *)>, COMDAT
; __Arg$ = ecx

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, ecx

; 1456 : }

	ret	0
??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z ENDP ; std::forward<void * (__cdecl*)(void *)>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@PAX@std@@YA$$QAPAXAAPAX@Z
_TEXT	SEGMENT
??$forward@PAX@std@@YA$$QAPAXAAPAX@Z PROC		; std::forward<void *>, COMDAT
; __Arg$ = ecx

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, ecx

; 1456 : }

	ret	0
??$forward@PAX@std@@YA$$QAPAXAAPAX@Z ENDP		; std::forward<void *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$_Call@P6APAXPAX@ZPAX@_Invoker_functor@std@@SAPAX$$QAP6APAXPAX@Z$$QAPAX@Z
_TEXT	SEGMENT
??$_Call@P6APAXPAX@ZPAX@_Invoker_functor@std@@SAPAX$$QAP6APAXPAX@Z$$QAPAX@Z PROC ; std::_Invoker_functor::_Call<void * (__cdecl*)(void *),void *>, COMDAT
; __Obj$ = ecx
; _<_Args_0>$ = edx

; 1612 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

	push	DWORD PTR [edx]
	mov	eax, DWORD PTR [ecx]
	call	eax
	add	esp, 4
	ret	0
??$_Call@P6APAXPAX@ZPAX@_Invoker_functor@std@@SAPAX$$QAP6APAXPAX@Z$$QAPAX@Z ENDP ; std::_Invoker_functor::_Call<void * (__cdecl*)(void *),void *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@U_Exact_args_t@1@AAP6APAXPAX@ZAAPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__This_arg$ = 12					; size = 4
_<_Rest_arg_0>$ = 16					; size = 4
??$?0U_Exact_args_t@std@@AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@U_Exact_args_t@1@AAP6APAXPAX@ZAAPAX@Z PROC ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><std::_Exact_args_t,void * (__cdecl*&)(void *),void * &,0>, COMDAT
; _this$ = ecx

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	mov	eax, DWORD PTR _<_Rest_arg_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __This_arg$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 234  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...), _Myfirst(_STD forward<_This2>(_This_arg)) {}

	mov	eax, ecx
	ret	12					; 0000000cH
??$?0U_Exact_args_t@std@@AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@U_Exact_args_t@1@AAP6APAXPAX@ZAAPAX@Z ENDP ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><std::_Exact_args_t,void * (__cdecl*&)(void *),void * &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory
;	COMDAT ??$?0AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
_<_Val2_0>$ = 12					; size = 4
??$?0AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::tuple<void * (__cdecl*)(void *),void *> * &>, COMDAT
; _this$ = ecx

; 1328 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	eax, DWORD PTR _<_Val2_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	ret	8
??$?0AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::tuple<void * (__cdecl*)(void *),void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@PAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YA$$QAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z
_TEXT	SEGMENT
??$forward@PAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YA$$QAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z PROC ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> *>, COMDAT
; __Arg$ = ecx

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, ecx

; 1456 : }

	ret	0
??$forward@PAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YA$$QAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z ENDP ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AAPAX$$V$0A@@?$tuple@PAX@std@@QAE@U_Exact_args_t@1@AAPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__This_arg$ = 12					; size = 4
??$?0U_Exact_args_t@std@@AAPAX$$V$0A@@?$tuple@PAX@std@@QAE@U_Exact_args_t@1@AAPAX@Z PROC ; std::tuple<void *>::tuple<void *><std::_Exact_args_t,void * &,0>, COMDAT
; _this$ = ecx

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	mov	eax, DWORD PTR __This_arg$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 234  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...), _Myfirst(_STD forward<_This2>(_This_arg)) {}

	mov	eax, ecx
	ret	8
??$?0U_Exact_args_t@std@@AAPAX$$V$0A@@?$tuple@PAX@std@@QAE@U_Exact_args_t@1@AAPAX@Z ENDP ; std::tuple<void *>::tuple<void *><std::_Exact_args_t,void * &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$?0AAP6APAXPAX@Z@?$_Tuple_val@P6APAXPAX@Z@std@@QAE@AAP6APAXPAX@Z@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$?0AAP6APAXPAX@Z@?$_Tuple_val@P6APAXPAX@Z@std@@QAE@AAP6APAXPAX@Z@Z PROC ; std::_Tuple_val<void * (__cdecl*)(void *)>::_Tuple_val<void * (__cdecl*)(void *)><void * (__cdecl*&)(void *)>, COMDAT
; _this$ = ecx

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	mov	eax, DWORD PTR __Arg$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	ret	4
??$?0AAP6APAXPAX@Z@?$_Tuple_val@P6APAXPAX@Z@std@@QAE@AAP6APAXPAX@Z@Z ENDP ; std::_Tuple_val<void * (__cdecl*)(void *)>::_Tuple_val<void * (__cdecl*)(void *)><void * (__cdecl*&)(void *)>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YAAAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z
_TEXT	SEGMENT
??$forward@AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YAAAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z PROC ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> * &>, COMDAT
; __Arg$ = ecx

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, ecx

; 1456 : }

	ret	0
??$forward@AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YAAAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z ENDP ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT
; _this$ = ecx

; 210  :     constexpr tuple(_Tag) noexcept /* strengthened */ {}

	mov	eax, ecx
	ret	4
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$?0AAPAX@?$_Tuple_val@PAX@std@@QAE@AAPAX@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$?0AAPAX@?$_Tuple_val@PAX@std@@QAE@AAPAX@Z PROC	; std::_Tuple_val<void *>::_Tuple_val<void *><void * &>, COMDAT
; _this$ = ecx

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	mov	eax, DWORD PTR __Arg$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	ret	4
??$?0AAPAX@?$_Tuple_val@PAX@std@@QAE@AAPAX@Z ENDP	; std::_Tuple_val<void *>::_Tuple_val<void *><void * &>
_TEXT	ENDS
END
