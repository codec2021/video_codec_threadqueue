; Listing generated by Microsoft (R) Optimizing Compiler Version 19.26.28806.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__1850469A_corecrt_stdio_config@h DB 01H
__01D10305_corecrt_wstdio@h DB 01H
__9FF75F13_stdio@h DB 01H
__ED9CC025_corecrt_memcpy_s@h DB 01H
__45AE7532_corecrt_wconio@h DB 01H
__F82F49DA_corecrt_wio@h DB 01H
__875914C9_corecrt_wstring@h DB 01H
__8DC84CAD_corecrt_wtime@h DB 01H
__1DD914C8_stat@h DB 01H
__61D1BCEE_wchar@h DB 01H
__E2865EBA_corecrt_math@h DB 01H
__F5601360_stdlib@h DB 01H
__180FC352_cstdlib DB 01H
__3932F226_limits DB 01H
__6750BE0F_type_traits DB 01H
__B2B7B48F_ratio DB 01H
__CF01F9AA_time@h DB 01H
__39C46D1D_vcruntime_new@h DB 01H
__5DDFF4AC_chrono DB 01H
__614D3496_malloc@h DB 01H
__41172C56_vcruntime_exception@h DB 01H
__8EEC81FD_exception DB 01H
__241EEA0C_corecrt_memory@h DB 01H
__731387C4_string@h DB 01H
__07599918_vcruntime_typeinfo@h DB 01H
__7A726CBB_typeinfo DB 01H
__0AAD9FA2_xutility DB 01H
__4597251A_xmemory DB 01H
__859CFEA8_memory DB 01H
__3144A386_xstring DB 01H
__07A2BBA0_stdexcept DB 01H
__78819C50_xcall_once@h DB 01H
__C7DC8E70_system_error DB 01H
__78273460_tuple DB 01H
__A7A88A06_xthreads@h DB 01H
__5ED1861E_thread DB 01H
__A01ABEDF_mutex DB 01H
__5DFCCD2F_condition_variable DB 01H
__1768872F_semaphore@cpp DB 01H
__2F0246D9_utility DB 01H
__84E00D2B_xatomic@h DB 01H
__D81DD1CB_xstddef DB 01H
msvcjmc	ENDS
PUBLIC	sem_destroy
PUBLIC	sem_init
PUBLIC	sem_post
PUBLIC	sem_wait
PUBLIC	?_Check_C_return@std@@YAHH@Z			; std::_Check_C_return
PUBLIC	??0_Mutex_base@std@@QEAA@H@Z			; std::_Mutex_base::_Mutex_base
PUBLIC	??1_Mutex_base@std@@QEAA@XZ			; std::_Mutex_base::~_Mutex_base
PUBLIC	?lock@_Mutex_base@std@@QEAAXXZ			; std::_Mutex_base::lock
PUBLIC	?unlock@_Mutex_base@std@@QEAAXXZ		; std::_Mutex_base::unlock
PUBLIC	?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
PUBLIC	??0mutex@std@@QEAA@XZ				; std::mutex::mutex
PUBLIC	??1mutex@std@@QEAA@XZ				; std::mutex::~mutex
PUBLIC	??0condition_variable@std@@QEAA@XZ		; std::condition_variable::condition_variable
PUBLIC	??1condition_variable@std@@QEAA@XZ		; std::condition_variable::~condition_variable
PUBLIC	?notify_one@condition_variable@std@@QEAAXXZ	; std::condition_variable::notify_one
PUBLIC	?wait@condition_variable@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@2@@Z ; std::condition_variable::wait
PUBLIC	?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
PUBLIC	??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
PUBLIC	??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ	; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
PUBLIC	?mutex@?$unique_lock@Vmutex@std@@@std@@QEBAPEAV02@XZ ; std::unique_lock<std::mutex>::mutex
PUBLIC	??0Semaphore@@QEAA@H@Z				; Semaphore::Semaphore
PUBLIC	?post@Semaphore@@QEAAXXZ			; Semaphore::post
PUBLIC	?wait@Semaphore@@QEAAXXZ			; Semaphore::wait
PUBLIC	??1Semaphore@@QEAA@XZ				; Semaphore::~Semaphore
PUBLIC	??_GSemaphore@@QEAAPEAXI@Z			; Semaphore::`scalar deleting destructor'
PUBLIC	??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z ; std::addressof<std::mutex>
PUBLIC	__JustMyCode_Default
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	_Mtx_init_in_situ:PROC
EXTRN	_Mtx_destroy_in_situ:PROC
EXTRN	_Mtx_lock:PROC
EXTRN	_Mtx_unlock:PROC
EXTRN	_Cnd_init_in_situ:PROC
EXTRN	_Cnd_destroy_in_situ:PROC
EXTRN	_Cnd_wait:PROC
EXTRN	_Cnd_signal:PROC
EXTRN	?_Throw_C_error@std@@YAXH@Z:PROC		; std::_Throw_C_error
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$sem_destroy DD imagerel $LN5
	DD	imagerel $LN5+144
	DD	imagerel $unwind$sem_destroy
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sem_init DD imagerel $LN5
	DD	imagerel $LN5+171
	DD	imagerel $unwind$sem_init
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sem_post DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$sem_post
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sem_wait DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$sem_wait
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_C_return@std@@YAHH@Z DD imagerel $LN4
	DD	imagerel $LN4+88
	DD	imagerel $unwind$?_Check_C_return@std@@YAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Mutex_base@std@@QEAA@H@Z DD imagerel $LN3
	DD	imagerel $LN3+118
	DD	imagerel $unwind$??0_Mutex_base@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Mutex_base@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??1_Mutex_base@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?lock@_Mutex_base@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$?lock@_Mutex_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?unlock@_Mutex_base@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$?unlock@_Mutex_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0mutex@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??0mutex@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1mutex@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1mutex@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0condition_variable@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??0condition_variable@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1condition_variable@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??1condition_variable@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?notify_one@condition_variable@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?notify_one@condition_variable@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?wait@condition_variable@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$?wait@condition_variable@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+95
	DD	imagerel $unwind$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?mutex@?$unique_lock@Vmutex@std@@@std@@QEBAPEAV02@XZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?mutex@?$unique_lock@Vmutex@std@@@std@@QEBAPEAV02@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Semaphore@@QEAA@H@Z DD imagerel $LN5
	DD	imagerel $LN5+128
	DD	imagerel $unwind$??0Semaphore@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?post@Semaphore@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+172
	DD	imagerel $unwind$?post@Semaphore@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?wait@Semaphore@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+178
	DD	imagerel $unwind$?wait@Semaphore@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??wait@Semaphore@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??wait@Semaphore@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??wait@Semaphore@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??wait@Semaphore@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Semaphore@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??1Semaphore@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GSemaphore@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GSemaphore@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GSemaphore@@QEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Semaphore@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??wait@Semaphore@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?wait@Semaphore@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	09cH
	DB	02H
	DB	082H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?wait@Semaphore@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??wait@Semaphore@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?wait@Semaphore@@QEAAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?wait@Semaphore@@QEAAXXZ
	DD	imagerel $ip2state$?wait@Semaphore@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?wait@Semaphore@@QEAAXXZ DD 025052a11H
	DD	010e2313H
	DD	070070023H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?wait@Semaphore@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?wait@Semaphore@@QEAAXXZ$rtcName$0 DB 06cH		; Semaphore::wait
	DB	063H
	DB	06bH
	DB	00H
	ORG $+12
?wait@Semaphore@@QEAAXXZ$rtcVarDesc DD 028H		; Semaphore::wait
	DD	010H
	DQ	FLAT:?wait@Semaphore@@QEAAXXZ$rtcName$0
	ORG $+48
?wait@Semaphore@@QEAAXXZ$rtcFrameData DD 01H		; Semaphore::wait
	DD	00H
	DQ	FLAT:?wait@Semaphore@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?post@Semaphore@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	070070023H
	DD	05006H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?post@Semaphore@@QEAAXXZ$rtcName$0 DB 06cH		; Semaphore::post
	DB	063H
	DB	06bH
	DB	00H
	ORG $+12
?post@Semaphore@@QEAAXXZ$rtcVarDesc DD 028H		; Semaphore::post
	DD	010H
	DQ	FLAT:?post@Semaphore@@QEAAXXZ$rtcName$0
	ORG $+48
?post@Semaphore@@QEAAXXZ$rtcFrameData DD 01H		; Semaphore::post
	DD	00H
	DQ	FLAT:?post@Semaphore@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Semaphore@@QEAA@H@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?mutex@?$unique_lock@Vmutex@std@@@std@@QEBAPEAV02@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?mutex@?$unique_lock@Vmutex@std@@@std@@QEBAPEAV02@XZ DB 060H
	DD	imagerel $ip2state$?mutex@?$unique_lock@Vmutex@std@@@std@@QEBAPEAV02@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?mutex@?$unique_lock@Vmutex@std@@@std@@QEBAPEAV02@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?mutex@?$unique_lock@Vmutex@std@@@std@@QEBAPEAV02@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ DB 060H
	DD	imagerel $ip2state$?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?wait@condition_variable@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@2@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?notify_one@condition_variable@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?notify_one@condition_variable@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?notify_one@condition_variable@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?notify_one@condition_variable@std@@QEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?notify_one@condition_variable@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1condition_variable@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1condition_variable@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1condition_variable@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1condition_variable@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1condition_variable@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0condition_variable@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1mutex@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0mutex@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0mutex@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0mutex@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0mutex@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0mutex@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ DB 060H
	DD	imagerel $ip2state$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?unlock@_Mutex_base@std@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?lock@_Mutex_base@std@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Mutex_base@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Mutex_base@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Mutex_base@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Mutex_base@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Mutex_base@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Mutex_base@std@@QEAA@H@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Mutex_base@std@@QEAA@H@Z DB 060H
	DD	imagerel $ip2state$??0_Mutex_base@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Mutex_base@std@@QEAA@H@Z DD 025052e19H
	DD	01122317H
	DD	0700b001fH
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Mutex_base@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_C_return@std@@YAHH@Z DD 025052801H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sem_wait DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sem_post DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sem_init DD 025053301H
	DD	0117231cH
	DD	070100025H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sem_destroy DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xstddef
;	COMDAT ??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z PROC ; std::addressof<std::mutex>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__D81DD1CB_xstddef
	call	__CheckForDebuggerJustMyCode

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rbp]

; 276  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z ENDP ; std::addressof<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSemaphore@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GSemaphore@@QEAAPEAXI@Z PROC				; Semaphore::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Semaphore@@QEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 160				; 000000a0H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_GSemaphore@@QEAAPEAXI@Z ENDP				; Semaphore::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Semaphore@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1Semaphore@@QEAA@XZ PROC				; Semaphore::~Semaphore, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 80					; 00000050H
	mov	rcx, rax
	call	??1mutex@std@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??1condition_variable@std@@QEAA@XZ	; std::condition_variable::~condition_variable
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1Semaphore@@QEAA@XZ ENDP				; Semaphore::~Semaphore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\semaphore.cpp
;	COMDAT ?wait@Semaphore@@QEAAXXZ
_TEXT	SEGMENT
lck$ = 8
tv71 = 228
this$ = 272
?wait@Semaphore@@QEAAXXZ PROC				; Semaphore::wait, COMDAT

; 36   :     void wait() {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+312]
	lea	rcx, OFFSET FLAT:__1768872F_semaphore@cpp
	call	__CheckForDebuggerJustMyCode

; 37   :         std::unique_lock<std::mutex> lck(mtx_);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 80					; 00000050H
	mov	rdx, rax
	lea	rcx, QWORD PTR lck$[rbp]
	call	??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
	npad	1

; 38   :         if (--val_ < 0) {

	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	DWORD PTR tv71[rbp], eax
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR tv71[rbp]
	mov	DWORD PTR [rax], ecx
	cmp	DWORD PTR tv71[rbp], 0
	jge	SHORT $LN2@wait

; 39   :             cvar_.wait(lck);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	lea	rdx, QWORD PTR lck$[rbp]
	mov	rcx, rax
	call	?wait@condition_variable@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@2@@Z ; std::condition_variable::wait
	npad	1
$LN2@wait:

; 40   :         }
; 41   :     }

	lea	rcx, QWORD PTR lck$[rbp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?wait@Semaphore@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?wait@Semaphore@@QEAAXXZ ENDP				; Semaphore::wait
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
lck$ = 8
tv71 = 228
this$ = 272
?dtor$0@?0??wait@Semaphore@@QEAAXXZ@4HA PROC		; `Semaphore::wait'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR lck$[rbp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??wait@Semaphore@@QEAAXXZ@4HA ENDP		; `Semaphore::wait'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
lck$ = 8
tv71 = 228
this$ = 272
?dtor$0@?0??wait@Semaphore@@QEAAXXZ@4HA PROC		; `Semaphore::wait'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR lck$[rbp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??wait@Semaphore@@QEAAXXZ@4HA ENDP		; `Semaphore::wait'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\semaphore.cpp
;	COMDAT ?post@Semaphore@@QEAAXXZ
_TEXT	SEGMENT
lck$ = 8
tv71 = 228
this$ = 272
?post@Semaphore@@QEAAXXZ PROC				; Semaphore::post, COMDAT

; 29   :     void post() {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+312]
	lea	rcx, OFFSET FLAT:__1768872F_semaphore@cpp
	call	__CheckForDebuggerJustMyCode

; 30   :         std::unique_lock<std::mutex> lck(mtx_);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 80					; 00000050H
	mov	rdx, rax
	lea	rcx, QWORD PTR lck$[rbp]
	call	??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>

; 31   :         if (++val_ <= 0) {

	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	DWORD PTR tv71[rbp], eax
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR tv71[rbp]
	mov	DWORD PTR [rax], ecx
	cmp	DWORD PTR tv71[rbp], 0
	jg	SHORT $LN2@post

; 32   :             cvar_.notify_one();

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	?notify_one@condition_variable@std@@QEAAXXZ ; std::condition_variable::notify_one
$LN2@post:

; 33   :         }
; 34   :     }

	lea	rcx, QWORD PTR lck$[rbp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?post@Semaphore@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?post@Semaphore@@QEAAXXZ ENDP				; Semaphore::post
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\semaphore.cpp
;	COMDAT ??0Semaphore@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 224
value$ = 232
??0Semaphore@@QEAA@H@Z PROC				; Semaphore::Semaphore, COMDAT

; 26   :         val_(value) {

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__1768872F_semaphore@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR value$[rbp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??0condition_variable@std@@QEAA@XZ	; std::condition_variable::condition_variable
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 80					; 00000050H
	mov	rcx, rax
	call	??0mutex@std@@QEAA@XZ			; std::mutex::mutex

; 27   :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0Semaphore@@QEAA@H@Z ENDP				; Semaphore::Semaphore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?mutex@?$unique_lock@Vmutex@std@@@std@@QEBAPEAV02@XZ
_TEXT	SEGMENT
this$ = 224
?mutex@?$unique_lock@Vmutex@std@@@std@@QEBAPEAV02@XZ PROC ; std::unique_lock<std::mutex>::mutex, COMDAT

; 256  :     _NODISCARD _Mutex* mutex() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode

; 257  :         return _Pmtx;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]

; 258  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?mutex@?$unique_lock@Vmutex@std@@@std@@QEBAPEAV02@XZ ENDP ; std::unique_lock<std::mutex>::mutex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ PROC		; std::unique_lock<std::mutex>::~unique_lock<std::mutex>, COMDAT

; 186  :     ~unique_lock() noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode

; 187  :         if (_Owns) {

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+8]
	test	eax, eax
	je	SHORT $LN2@unique_loc

; 188  :             _Pmtx->unlock();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?unlock@_Mutex_base@std@@QEAAXXZ	; std::_Mutex_base::unlock
	npad	1
$LN2@unique_loc:

; 189  :         }
; 190  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ENDP		; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z
_TEXT	SEGMENT
this$ = 224
_Mtx$ = 232
??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z PROC ; std::unique_lock<std::mutex>::unique_lock<std::mutex>, COMDAT

; 135  :     explicit unique_lock(_Mutex& _Mtx) : _Pmtx(_STD addressof(_Mtx)), _Owns(false) { // construct and lock

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Mtx$[rbp]
	call	??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z ; std::addressof<std::mutex>
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8], 0

; 136  :         _Pmtx->lock();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?lock@_Mutex_base@std@@QEAAXXZ		; std::_Mutex_base::lock

; 137  :         _Owns = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8], 1

; 138  :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ENDP ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ
_TEXT	SEGMENT
this$ = 224
?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ PROC ; std::condition_variable::_Mycnd, COMDAT

; 697  :     _Cnd_t _Mycnd() noexcept { // get pointer to _Cnd_internal_imp_t inside _Cnd_storage

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode

; 698  :         return reinterpret_cast<_Cnd_t>(&_Cnd_storage);

	mov	rax, QWORD PTR this$[rbp]

; 699  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ ENDP ; std::condition_variable::_Mycnd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?wait@condition_variable@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@2@@Z
_TEXT	SEGMENT
tv73 = 192
this$ = 240
_Lck$ = 248
?wait@condition_variable@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@2@@Z PROC ; std::condition_variable::wait, COMDAT

; 596  :     void wait(unique_lock<mutex>& _Lck) { // wait for signal

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode

; 597  :         // Nothing to do to comply with LWG-2135 because std::mutex lock/unlock are nothrow
; 598  :         _Check_C_return(_Cnd_wait(_Mycnd(), _Lck.mutex()->_Mymtx()));

	mov	rcx, QWORD PTR _Lck$[rbp]
	call	?mutex@?$unique_lock@Vmutex@std@@@std@@QEBAPEAV02@XZ ; std::unique_lock<std::mutex>::mutex
	mov	rcx, rax
	call	?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	mov	QWORD PTR tv73[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
	mov	rcx, QWORD PTR tv73[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	_Cnd_wait
	mov	ecx, eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return

; 599  :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?wait@condition_variable@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@2@@Z ENDP ; std::condition_variable::wait
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?notify_one@condition_variable@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?notify_one@condition_variable@std@@QEAAXXZ PROC	; std::condition_variable::notify_one, COMDAT

; 588  :     void notify_one() noexcept { // wake up one waiter

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode

; 589  :         _Check_C_return(_Cnd_signal(_Mycnd()));

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
	mov	rcx, rax
	call	_Cnd_signal
	mov	ecx, eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	npad	1

; 590  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?notify_one@condition_variable@std@@QEAAXXZ ENDP	; std::condition_variable::notify_one
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??1condition_variable@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1condition_variable@std@@QEAA@XZ PROC			; std::condition_variable::~condition_variable, COMDAT

; 581  :     ~condition_variable() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode

; 582  :         _Cnd_destroy_in_situ(_Mycnd());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
	mov	rcx, rax
	call	_Cnd_destroy_in_situ
	npad	1

; 583  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1condition_variable@std@@QEAA@XZ ENDP			; std::condition_variable::~condition_variable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??0condition_variable@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0condition_variable@std@@QEAA@XZ PROC			; std::condition_variable::condition_variable, COMDAT

; 577  :     condition_variable() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode

; 578  :         _Cnd_init_in_situ(_Mycnd());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mycnd@condition_variable@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
	mov	rcx, rax
	call	_Cnd_init_in_situ

; 579  :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0condition_variable@std@@QEAA@XZ ENDP			; std::condition_variable::condition_variable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1mutex@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1mutex@std@@QEAA@XZ PROC				; std::mutex::~mutex, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Mutex_base@std@@QEAA@XZ		; std::_Mutex_base::~_Mutex_base
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1mutex@std@@QEAA@XZ ENDP				; std::mutex::~mutex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??0mutex@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0mutex@std@@QEAA@XZ PROC				; std::mutex::mutex, COMDAT

; 89   :     /* constexpr */ mutex() noexcept // TRANSITION, ABI

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode

; 90   :         : _Mutex_base() {}

	xor	edx, edx
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Mutex_base@std@@QEAA@H@Z		; std::_Mutex_base::_Mutex_base
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0mutex@std@@QEAA@XZ ENDP				; std::mutex::mutex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ
_TEXT	SEGMENT
this$ = 224
?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ PROC ; std::_Mutex_base::_Mymtx, COMDAT

; 82   :     _Mtx_t _Mymtx() noexcept { // get pointer to _Mtx_internal_imp_t inside _Mtx_storage

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode

; 83   :         return reinterpret_cast<_Mtx_t>(&_Mtx_storage);

	mov	rax, QWORD PTR this$[rbp]

; 84   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ENDP ; std::_Mutex_base::_Mymtx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?unlock@_Mutex_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?unlock@_Mutex_base@std@@QEAAXXZ PROC			; std::_Mutex_base::unlock, COMDAT

; 66   :     void unlock() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode

; 67   :         _Check_C_return(_Mtx_unlock(_Mymtx()));

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	mov	rcx, rax
	call	_Mtx_unlock
	mov	ecx, eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return

; 68   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?unlock@_Mutex_base@std@@QEAAXXZ ENDP			; std::_Mutex_base::unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?lock@_Mutex_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?lock@_Mutex_base@std@@QEAAXXZ PROC			; std::_Mutex_base::lock, COMDAT

; 50   :     void lock() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode

; 51   :         _Check_C_return(_Mtx_lock(_Mymtx()));

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	mov	rcx, rax
	call	_Mtx_lock
	mov	ecx, eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return

; 52   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?lock@_Mutex_base@std@@QEAAXXZ ENDP			; std::_Mutex_base::lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??1_Mutex_base@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1_Mutex_base@std@@QEAA@XZ PROC			; std::_Mutex_base::~_Mutex_base, COMDAT

; 43   :     ~_Mutex_base() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode

; 44   :         _Mtx_destroy_in_situ(_Mymtx());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	mov	rcx, rax
	call	_Mtx_destroy_in_situ
	npad	1

; 45   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1_Mutex_base@std@@QEAA@XZ ENDP			; std::_Mutex_base::~_Mutex_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??0_Mutex_base@std@@QEAA@H@Z
_TEXT	SEGMENT
tv64 = 192
this$ = 240
_Flags$ = 248
??0_Mutex_base@std@@QEAA@H@Z PROC			; std::_Mutex_base::_Mutex_base, COMDAT

; 39   :     _Mutex_base(int _Flags = 0) noexcept {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__A01ABEDF_mutex
	call	__CheckForDebuggerJustMyCode

; 40   :         _Mtx_init_in_situ(_Mymtx(), _Flags | _Mtx_try);

	mov	eax, DWORD PTR _Flags$[rbp]
	or	eax, 2
	mov	DWORD PTR tv64[rbp], eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	mov	ecx, DWORD PTR tv64[rbp]
	mov	edx, ecx
	mov	rcx, rax
	call	_Mtx_init_in_situ

; 41   :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??0_Mutex_base@std@@QEAA@H@Z ENDP			; std::_Mutex_base::_Mutex_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
;	COMDAT ?_Check_C_return@std@@YAHH@Z
_TEXT	SEGMENT
_Res$ = 224
?_Check_C_return@std@@YAHH@Z PROC			; std::_Check_C_return, COMDAT

; 129  : inline int _Check_C_return(int _Res) { // throw exception on failure

$LN4:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__A7A88A06_xthreads@h
	call	__CheckForDebuggerJustMyCode

; 130  :     if (_Res != _Thrd_success) {

	cmp	DWORD PTR _Res$[rbp], 0
	je	SHORT $LN2@Check_C_re

; 131  :         _Throw_C_error(_Res);

	mov	ecx, DWORD PTR _Res$[rbp]
	call	?_Throw_C_error@std@@YAXH@Z		; std::_Throw_C_error
$LN2@Check_C_re:

; 132  :     }
; 133  : 
; 134  :     return _Res;

	mov	eax, DWORD PTR _Res$[rbp]
$LN3@Check_C_re:

; 135  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Check_C_return@std@@YAHH@Z ENDP			; std::_Check_C_return
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\semaphore.cpp
;	COMDAT sem_wait
_TEXT	SEGMENT
sem$ = 224
sem_wait PROC						; COMDAT

; 69   : int sem_wait(sem_t* sem) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__1768872F_semaphore@cpp
	call	__CheckForDebuggerJustMyCode

; 70   :     static_cast<Semaphore*>(*sem)->wait();

	mov	rax, QWORD PTR sem$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?wait@Semaphore@@QEAAXXZ		; Semaphore::wait

; 71   :     return 0;

	xor	eax, eax

; 72   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
sem_wait ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\semaphore.cpp
;	COMDAT sem_post
_TEXT	SEGMENT
sem$ = 224
sem_post PROC						; COMDAT

; 64   : int sem_post(sem_t* sem) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__1768872F_semaphore@cpp
	call	__CheckForDebuggerJustMyCode

; 65   :     static_cast<Semaphore*>(*sem)->post();

	mov	rax, QWORD PTR sem$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?post@Semaphore@@QEAAXXZ		; Semaphore::post

; 66   :     return 0;

	xor	eax, eax

; 67   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
sem_post ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\semaphore.cpp
;	COMDAT sem_init
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv76 = 248
sem$ = 288
__formal$ = 296
value$ = 304
sem_init PROC						; COMDAT

; 59   : int sem_init(sem_t* sem, int, unsigned int value) {

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__1768872F_semaphore@cpp
	call	__CheckForDebuggerJustMyCode

; 60   :     *sem = new Semaphore(value);

	mov	ecx, 160				; 000000a0H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T2[rbp], rax
	cmp	QWORD PTR $T2[rbp], 0
	je	SHORT $LN3@sem_init
	mov	edx, DWORD PTR value$[rbp]
	mov	rcx, QWORD PTR $T2[rbp]
	call	??0Semaphore@@QEAA@H@Z			; Semaphore::Semaphore
	mov	QWORD PTR tv76[rbp], rax
	jmp	SHORT $LN4@sem_init
$LN3@sem_init:
	mov	QWORD PTR tv76[rbp], 0
$LN4@sem_init:
	mov	rax, QWORD PTR tv76[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR sem$[rbp]
	mov	rcx, QWORD PTR $T1[rbp]
	mov	QWORD PTR [rax], rcx

; 61   :     return 0;

	xor	eax, eax

; 62   : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
sem_init ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\84038\Desktop\video_codec_thread_test\src\threadwrapper\src\semaphore.cpp
;	COMDAT sem_destroy
_TEXT	SEGMENT
$T1 = 200
tv68 = 216
sem$ = 256
sem_destroy PROC					; COMDAT

; 53   : int sem_destroy(sem_t* sem) {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__1768872F_semaphore@cpp
	call	__CheckForDebuggerJustMyCode

; 54   :     delete static_cast<Semaphore*>(*sem);

	mov	rax, QWORD PTR sem$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T1[rbp], rax
	cmp	QWORD PTR $T1[rbp], 0
	je	SHORT $LN3@sem_destro
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rbp]
	call	??_GSemaphore@@QEAAPEAXI@Z
	mov	QWORD PTR tv68[rbp], rax
	jmp	SHORT $LN4@sem_destro
$LN3@sem_destro:
	mov	QWORD PTR tv68[rbp], 0
$LN4@sem_destro:

; 55   :     *sem = nullptr;

	mov	rax, QWORD PTR sem$[rbp]
	mov	QWORD PTR [rax], 0

; 56   :     return 0;

	xor	eax, eax

; 57   : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
sem_destroy ENDP
_TEXT	ENDS
END
