; Listing generated by Microsoft (R) Optimizing Compiler Version 19.26.28806.0 

	TITLE	F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__1850469A_corecrt_stdio_config@h DB 01H
__01D10305_corecrt_wstdio@h DB 01H
__9FF75F13_stdio@h DB 01H
__ED9CC025_corecrt_memcpy_s@h DB 01H
__45AE7532_corecrt_wconio@h DB 01H
__F82F49DA_corecrt_wio@h DB 01H
__875914C9_corecrt_wstring@h DB 01H
__8DC84CAD_corecrt_wtime@h DB 01H
__1DD914C8_stat@h DB 01H
__61D1BCEE_wchar@h DB 01H
__E2865EBA_corecrt_math@h DB 01H
__F5601360_stdlib@h DB 01H
__180FC352_cstdlib DB 01H
__3932F226_limits DB 01H
__6750BE0F_type_traits DB 01H
__B2B7B48F_ratio DB 01H
__CF01F9AA_time@h DB 01H
__39C46D1D_vcruntime_new@h DB 01H
__5DDFF4AC_chrono DB 01H
__614D3496_malloc@h DB 01H
__41172C56_vcruntime_exception@h DB 01H
__8EEC81FD_exception DB 01H
__241EEA0C_corecrt_memory@h DB 01H
__731387C4_string@h DB 01H
__07599918_vcruntime_typeinfo@h DB 01H
__7A726CBB_typeinfo DB 01H
__0AAD9FA2_xutility DB 01H
__4597251A_xmemory DB 01H
__859CFEA8_memory DB 01H
__3144A386_xstring DB 01H
__07A2BBA0_stdexcept DB 01H
__78819C50_xcall_once@h DB 01H
__C7DC8E70_system_error DB 01H
__78273460_tuple DB 01H
__A7A88A06_xthreads@h DB 01H
__5ED1861E_thread DB 01H
__A01ABEDF_mutex DB 01H
__5DFCCD2F_condition_variable DB 01H
__DE6DF6A9_shared_mutex DB 01H
__51F79D98_pthread@cpp DB 01H
__2F0246D9_utility DB 01H
__84E00D2B_xatomic@h DB 01H
__D81DD1CB_xstddef DB 01H
msvcjmc	ENDS
CONST	SEGMENT
?adopt_lock@std@@3Uadopt_lock_t@1@B	ORG $+1		; std::adopt_lock
CONST	ENDS
PUBLIC	_pthread_cond_broadcast
PUBLIC	_pthread_cond_destroy
PUBLIC	_pthread_cond_init
PUBLIC	_pthread_cond_signal
PUBLIC	_pthread_cond_wait
PUBLIC	_pthread_create
PUBLIC	_pthread_exit
PUBLIC	_pthread_join
PUBLIC	_pthread_mutex_destroy
PUBLIC	_pthread_mutex_init
PUBLIC	_pthread_mutex_lock
PUBLIC	_pthread_mutex_unlock
PUBLIC	_pthread_rwlock_init
PUBLIC	_pthread_rwlock_destroy
PUBLIC	_pthread_rwlock_rdlock
PUBLIC	_pthread_rwlock_wrlock
PUBLIC	_pthread_rwlock_unlock
PUBLIC	?_Check_C_return@std@@YAHH@Z			; std::_Check_C_return
PUBLIC	??1thread@std@@QAE@XZ				; std::thread::~thread
PUBLIC	?joinable@thread@std@@QBE_NXZ			; std::thread::joinable
PUBLIC	?join@thread@std@@QAEXXZ			; std::thread::join
PUBLIC	??_Gthread@std@@QAEPAXI@Z			; std::thread::`scalar deleting destructor'
PUBLIC	??0_Mutex_base@std@@QAE@H@Z			; std::_Mutex_base::_Mutex_base
PUBLIC	??1_Mutex_base@std@@QAE@XZ			; std::_Mutex_base::~_Mutex_base
PUBLIC	?lock@_Mutex_base@std@@QAEXXZ			; std::_Mutex_base::lock
PUBLIC	?unlock@_Mutex_base@std@@QAEXXZ			; std::_Mutex_base::unlock
PUBLIC	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
PUBLIC	??0mutex@std@@QAE@XZ				; std::mutex::mutex
PUBLIC	??1mutex@std@@QAE@XZ				; std::mutex::~mutex
PUBLIC	??_Gmutex@std@@QAEPAXI@Z			; std::mutex::`scalar deleting destructor'
PUBLIC	??0condition_variable@std@@QAE@XZ		; std::condition_variable::condition_variable
PUBLIC	??1condition_variable@std@@QAE@XZ		; std::condition_variable::~condition_variable
PUBLIC	?notify_one@condition_variable@std@@QAEXXZ	; std::condition_variable::notify_one
PUBLIC	?notify_all@condition_variable@std@@QAEXXZ	; std::condition_variable::notify_all
PUBLIC	?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z ; std::condition_variable::wait
PUBLIC	?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
PUBLIC	??_Gcondition_variable@std@@QAEPAXI@Z		; std::condition_variable::`scalar deleting destructor'
PUBLIC	??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@Uadopt_lock_t@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
PUBLIC	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ	; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
PUBLIC	?release@?$unique_lock@Vmutex@std@@@std@@QAEPAVmutex@2@XZ ; std::unique_lock<std::mutex>::release
PUBLIC	?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ ; std::unique_lock<std::mutex>::mutex
PUBLIC	??0shared_mutex@std@@QAE@XZ			; std::shared_mutex::shared_mutex
PUBLIC	??1shared_mutex@std@@QAE@XZ			; std::shared_mutex::~shared_mutex
PUBLIC	?lock@shared_mutex@std@@QAEXXZ			; std::shared_mutex::lock
PUBLIC	?unlock@shared_mutex@std@@QAEXXZ		; std::shared_mutex::unlock
PUBLIC	?lock_shared@shared_mutex@std@@QAEXXZ		; std::shared_mutex::lock_shared
PUBLIC	?unlock_shared@shared_mutex@std@@QAEXXZ		; std::shared_mutex::unlock_shared
PUBLIC	??_Gshared_mutex@std@@QAEPAXI@Z			; std::shared_mutex::`scalar deleting destructor'
PUBLIC	??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z ; std::thread::thread<void * (__cdecl*&)(void *),void * &,0>
PUBLIC	??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z ; std::addressof<std::mutex>
PUBLIC	??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::forward<void * (__cdecl*&)(void *)>
PUBLIC	??$forward@AAPAX@std@@YAAAPAXAAPAX@Z		; std::forward<void * &>
PUBLIC	??$make_unique@V?$tuple@P6APAXPAX@ZPAX@std@@AAP6APAXPAX@ZAAPAX$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@0@AAP6APAXPAX@ZAAPAX@Z ; std::make_unique<std::tuple<void * (__cdecl*)(void *),void *>,void * (__cdecl*&)(void *),void * &,0>
PUBLIC	??R?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@QBEXPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ; std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >::operator()
PUBLIC	??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::~unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
PUBLIC	?get_deleter@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get_deleter
PUBLIC	??D?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEAAV?$tuple@P6APAXPAX@ZPAX@1@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::operator*
PUBLIC	?get@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get
PUBLIC	?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::release
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Get_first
PUBLIC	??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>
PUBLIC	??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z ; std::thread::_Invoke<std::tuple<void * (__cdecl*)(void *),void *>,0,1>
PUBLIC	??$exchange@PAV?$tuple@P6APAXPAX@ZPAX@std@@PAV12@@std@@YAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@$$QAPAV10@@Z ; std::exchange<std::tuple<void * (__cdecl*)(void *),void *> *,std::tuple<void * (__cdecl*)(void *),void *> *>
PUBLIC	??$?0AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@AAP6APAXPAX@ZAAPAX@Z ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><void * (__cdecl*&)(void *),void * &,0>
PUBLIC	??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>
PUBLIC	??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z ; std::forward<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
PUBLIC	??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@1@$$QAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *>
PUBLIC	??$get@$0A@P6APAXPAX@ZPAX@std@@YAAAP6APAXPAX@ZAAV?$tuple@P6APAXPAX@ZPAX@0@@Z ; std::get<0,void * (__cdecl*)(void *),void *>
PUBLIC	??$move@AAP6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::move<void * (__cdecl*&)(void *)>
PUBLIC	??$get@$00P6APAXPAX@ZPAX@std@@YAAAPAXAAV?$tuple@P6APAXPAX@ZPAX@0@@Z ; std::get<1,void * (__cdecl*)(void *),void *>
PUBLIC	??$move@AAPAX@std@@YA$$QAPAXAAPAX@Z		; std::move<void * &>
PUBLIC	??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::forward<void * (__cdecl*)(void *)>
PUBLIC	??$forward@PAX@std@@YA$$QAPAXAAPAX@Z		; std::forward<void *>
PUBLIC	??$_Call@P6APAXPAX@ZPAX@_Invoker_functor@std@@SAPAX$$QAP6APAXPAX@Z$$QAPAX@Z ; std::_Invoker_functor::_Call<void * (__cdecl*)(void *),void *>
PUBLIC	??$invoke@P6APAXPAX@ZPAX@std@@YAPAX$$QAP6APAXPAX@Z$$QAPAX@Z ; std::invoke<void * (__cdecl*)(void *),void *>
PUBLIC	??$?0U_Exact_args_t@std@@AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@U_Exact_args_t@1@AAP6APAXPAX@ZAAPAX@Z ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><std::_Exact_args_t,void * (__cdecl*&)(void *),void * &,0>
PUBLIC	??$?0AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::tuple<void * (__cdecl*)(void *),void *> * &>
PUBLIC	??$forward@PAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YA$$QAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> *>
PUBLIC	??$?0U_Exact_args_t@std@@AAPAX$$V$0A@@?$tuple@PAX@std@@QAE@U_Exact_args_t@1@AAPAX@Z ; std::tuple<void *>::tuple<void *><std::_Exact_args_t,void * &,0>
PUBLIC	??$?0AAP6APAXPAX@Z@?$_Tuple_val@P6APAXPAX@Z@std@@QAE@AAP6APAXPAX@Z@Z ; std::_Tuple_val<void * (__cdecl*)(void *)>::_Tuple_val<void * (__cdecl*)(void *)><void * (__cdecl*&)(void *)>
PUBLIC	??$forward@AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YAAAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> * &>
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$?0AAPAX@?$_Tuple_val@PAX@std@@QAE@AAPAX@Z	; std::_Tuple_val<void *>::_Tuple_val<void *><void * &>
PUBLIC	__JustMyCode_Default
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__terminate:PROC
EXTRN	__imp___beginthreadex:PROC
EXTRN	__Thrd_join:PROC
EXTRN	__Thrd_id:PROC
EXTRN	__Mtx_init_in_situ:PROC
EXTRN	__Mtx_destroy_in_situ:PROC
EXTRN	__Mtx_lock:PROC
EXTRN	__Mtx_unlock:PROC
EXTRN	__Smtx_lock_exclusive:PROC
EXTRN	__Smtx_lock_shared:PROC
EXTRN	__Smtx_unlock_exclusive:PROC
EXTRN	__Smtx_unlock_shared:PROC
EXTRN	__Cnd_init_in_situ:PROC
EXTRN	__Cnd_destroy_in_situ:PROC
EXTRN	__Cnd_wait:PROC
EXTRN	__Cnd_broadcast:PROC
EXTRN	__Cnd_signal:PROC
EXTRN	__Cnd_do_broadcast_at_thread_exit:PROC
EXTRN	?_Throw_C_error@std@@YAXH@Z:PROC		; std::_Throw_C_error
EXTRN	?_Throw_Cpp_error@std@@YAXH@Z:PROC		; std::_Throw_Cpp_error
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$forward@AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YAAAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$forward@PAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YA$$QAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$forward@PAX@std@@YA$$QAPAXAAPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$move@AAPAX@std@@YA$$QAPAXAAPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$get@$00P6APAXPAX@ZPAX@std@@YAAAPAXAAV?$tuple@P6APAXPAX@ZPAX@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$move@AAP6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$get@$0A@P6APAXPAX@ZPAX@std@@YAAAP6APAXPAX@ZAAV?$tuple@P6APAXPAX@ZPAX@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@1@$$QAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@AAP6APAXPAX@ZAAPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$exchange@PAV?$tuple@P6APAXPAX@ZPAX@std@@PAV12@@std@@YAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@$$QAPAV10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?get@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??D?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEAAV?$tuple@P6APAXPAX@ZPAX@1@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?get_deleter@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??R?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@QBEXPAV?$tuple@P6APAXPAX@ZPAX@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$forward@AAPAX@std@@YAAAPAXAAPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z$1
__ehfuncinfo$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?unlock_shared@shared_mutex@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?lock_shared@shared_mutex@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?unlock@shared_mutex@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?lock@shared_mutex@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1shared_mutex@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0shared_mutex@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?release@?$unique_lock@Vmutex@std@@@std@@QAEPAVmutex@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?notify_all@condition_variable@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?notify_one@condition_variable@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1condition_variable@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0mutex@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Mutex_base@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0_Mutex_base@std@@QAE@H@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?joinable@thread@std@@QBE_NXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1thread@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$?0AAPAX@?$_Tuple_val@PAX@std@@QAE@AAPAX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Arg$ = 8						; size = 4
??$?0AAPAX@?$_Tuple_val@PAX@std@@QAE@AAPAX@Z PROC	; std::_Tuple_val<void *>::_Tuple_val<void *><void * &>, COMDAT
; _this$ = ecx

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __78273460_tuple
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@AAPAX@std@@YAAAPAXAAPAX@Z	; std::forward<void * &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAPAX@?$_Tuple_val@PAX@std@@QAE@AAPAX@Z ENDP	; std::_Tuple_val<void *>::_Tuple_val<void *><void * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 1
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT
; _this$ = ecx

; 210  :     constexpr tuple(_Tag) noexcept /* strengthened */ {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __78273460_tuple
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YAAAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$forward@AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YAAAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z PROC ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> * &>, COMDAT

; 1454 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$forward@AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YAAAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __6750BE0F_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$forward@AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YAAAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$forward@AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YAAAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$forward@AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YAAAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z ENDP ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> * &>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$?0AAP6APAXPAX@Z@?$_Tuple_val@P6APAXPAX@Z@std@@QAE@AAP6APAXPAX@Z@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Arg$ = 8						; size = 4
??$?0AAP6APAXPAX@Z@?$_Tuple_val@P6APAXPAX@Z@std@@QAE@AAP6APAXPAX@Z@Z PROC ; std::_Tuple_val<void * (__cdecl*)(void *)>::_Tuple_val<void * (__cdecl*)(void *)><void * (__cdecl*&)(void *)>, COMDAT
; _this$ = ecx

; 163  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __78273460_tuple
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::forward<void * (__cdecl*&)(void *)>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAP6APAXPAX@Z@?$_Tuple_val@P6APAXPAX@Z@std@@QAE@AAP6APAXPAX@Z@Z ENDP ; std::_Tuple_val<void * (__cdecl*)(void *)>::_Tuple_val<void * (__cdecl*)(void *)><void * (__cdecl*&)(void *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AAPAX$$V$0A@@?$tuple@PAX@std@@QAE@U_Exact_args_t@1@AAPAX@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__This_arg$ = 12					; size = 4
??$?0U_Exact_args_t@std@@AAPAX$$V$0A@@?$tuple@PAX@std@@QAE@U_Exact_args_t@1@AAPAX@Z PROC ; std::tuple<void *>::tuple<void *><std::_Exact_args_t,void * &,0>, COMDAT
; _this$ = ecx

; 234  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...), _Myfirst(_STD forward<_This2>(_This_arg)) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __78273460_tuple
	call	@__CheckForDebuggerJustMyCode@4
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
	mov	eax, DWORD PTR __This_arg$[ebp]
	push	eax
	call	??$forward@AAPAX@std@@YAAAPAXAAPAX@Z	; std::forward<void * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAPAX@?$_Tuple_val@PAX@std@@QAE@AAPAX@Z ; std::_Tuple_val<void *>::_Tuple_val<void *><void * &>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0U_Exact_args_t@std@@AAPAX$$V$0A@@?$tuple@PAX@std@@QAE@U_Exact_args_t@1@AAPAX@Z ENDP ; std::tuple<void *>::tuple<void *><std::_Exact_args_t,void * &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@PAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YA$$QAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$forward@PAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YA$$QAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z PROC ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> *>, COMDAT

; 1454 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$forward@PAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YA$$QAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __6750BE0F_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$forward@PAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YA$$QAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$forward@PAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YA$$QAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$forward@PAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YA$$QAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z ENDP ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> *>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory
;	COMDAT ??$?0AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 1
_<_Val2_0>$ = 12					; size = 4
??$?0AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::tuple<void * (__cdecl*)(void *),void *> * &>, COMDAT
; _this$ = ecx

; 1328 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4597251A_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	push	eax
	call	??$forward@AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YAAAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> * &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::tuple<void * (__cdecl*)(void *),void *> * &>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@U_Exact_args_t@1@AAP6APAXPAX@ZAAPAX@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__This_arg$ = 12					; size = 4
_<_Rest_arg_0>$ = 16					; size = 4
??$?0U_Exact_args_t@std@@AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@U_Exact_args_t@1@AAP6APAXPAX@ZAAPAX@Z PROC ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><std::_Exact_args_t,void * (__cdecl*&)(void *),void * &,0>, COMDAT
; _this$ = ecx

; 234  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...), _Myfirst(_STD forward<_This2>(_This_arg)) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __78273460_tuple
	call	@__CheckForDebuggerJustMyCode@4
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR _<_Rest_arg_0>$[ebp]
	push	ecx
	call	??$forward@AAPAX@std@@YAAAPAXAAPAX@Z	; std::forward<void * &>
	add	esp, 4
	push	eax
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U_Exact_args_t@std@@AAPAX$$V$0A@@?$tuple@PAX@std@@QAE@U_Exact_args_t@1@AAPAX@Z ; std::tuple<void *>::tuple<void *><std::_Exact_args_t,void * &,0>
	mov	eax, DWORD PTR __This_arg$[ebp]
	push	eax
	call	??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::forward<void * (__cdecl*&)(void *)>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAP6APAXPAX@Z@?$_Tuple_val@P6APAXPAX@Z@std@@QAE@AAP6APAXPAX@Z@Z ; std::_Tuple_val<void * (__cdecl*)(void *)>::_Tuple_val<void * (__cdecl*)(void *)><void * (__cdecl*&)(void *)>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0U_Exact_args_t@std@@AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@U_Exact_args_t@1@AAP6APAXPAX@ZAAPAX@Z ENDP ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><std::_Exact_args_t,void * (__cdecl*&)(void *),void * &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$invoke@P6APAXPAX@ZPAX@std@@YAPAX$$QAP6APAXPAX@Z$$QAPAX@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$invoke@P6APAXPAX@ZPAX@std@@YAPAX$$QAP6APAXPAX@Z$$QAPAX@Z PROC ; std::invoke<void * (__cdecl*)(void *),void *>, COMDAT

; 1612 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __6750BE0F_type_traits
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@PAX@std@@YA$$QAPAXAAPAX@Z	; std::forward<void *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Obj$[ebp]
	push	ecx
	call	??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::forward<void * (__cdecl*)(void *)>
	add	esp, 4
	push	eax
	call	??$_Call@P6APAXPAX@ZPAX@_Invoker_functor@std@@SAPAX$$QAP6APAXPAX@Z$$QAPAX@Z ; std::_Invoker_functor::_Call<void * (__cdecl*)(void *),void *>
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@P6APAXPAX@ZPAX@std@@YAPAX$$QAP6APAXPAX@Z$$QAPAX@Z ENDP ; std::invoke<void * (__cdecl*)(void *),void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$_Call@P6APAXPAX@ZPAX@_Invoker_functor@std@@SAPAX$$QAP6APAXPAX@Z$$QAPAX@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Call@P6APAXPAX@ZPAX@_Invoker_functor@std@@SAPAX$$QAP6APAXPAX@Z$$QAPAX@Z PROC ; std::_Invoker_functor::_Call<void * (__cdecl*)(void *),void *>, COMDAT

; 1612 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __6750BE0F_type_traits
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@PAX@std@@YA$$QAPAXAAPAX@Z	; std::forward<void *>
	add	esp, 4
	mov	esi, esp
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Obj$[ebp]
	push	edx
	call	??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::forward<void * (__cdecl*)(void *)>
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Call@P6APAXPAX@ZPAX@_Invoker_functor@std@@SAPAX$$QAP6APAXPAX@Z$$QAPAX@Z ENDP ; std::_Invoker_functor::_Call<void * (__cdecl*)(void *),void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@PAX@std@@YA$$QAPAXAAPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$forward@PAX@std@@YA$$QAPAXAAPAX@Z PROC		; std::forward<void *>, COMDAT

; 1454 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$forward@PAX@std@@YA$$QAPAXAAPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __6750BE0F_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$forward@PAX@std@@YA$$QAPAXAAPAX@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$forward@PAX@std@@YA$$QAPAXAAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$forward@PAX@std@@YA$$QAPAXAAPAX@Z ENDP		; std::forward<void *>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z PROC ; std::forward<void * (__cdecl*)(void *)>, COMDAT

; 1454 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __6750BE0F_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$forward@P6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z ENDP ; std::forward<void * (__cdecl*)(void *)>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$move@AAPAX@std@@YA$$QAPAXAAPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$move@AAPAX@std@@YA$$QAPAXAAPAX@Z PROC		; std::move<void * &>, COMDAT

; 1466 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$move@AAPAX@std@@YA$$QAPAXAAPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __6750BE0F_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1467 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1468 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$move@AAPAX@std@@YA$$QAPAXAAPAX@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$move@AAPAX@std@@YA$$QAPAXAAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$move@AAPAX@std@@YA$$QAPAXAAPAX@Z ENDP		; std::move<void * &>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$get@$00P6APAXPAX@ZPAX@std@@YAAAPAXAAV?$tuple@P6APAXPAX@ZPAX@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Tuple$ = 8						; size = 4
??$get@$00P6APAXPAX@ZPAX@std@@YAAAPAXAAV?$tuple@P6APAXPAX@ZPAX@0@@Z PROC ; std::get<1,void * (__cdecl*)(void *),void *>, COMDAT

; 761  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$get@$00P6APAXPAX@ZPAX@std@@YAAAPAXAAV?$tuple@P6APAXPAX@ZPAX@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __78273460_tuple
	call	@__CheckForDebuggerJustMyCode@4

; 762  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 763  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

	mov	eax, DWORD PTR __Tuple$[ebp]

; 764  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$get@$00P6APAXPAX@ZPAX@std@@YAAAPAXAAV?$tuple@P6APAXPAX@ZPAX@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$get@$00P6APAXPAX@ZPAX@std@@YAAAPAXAAV?$tuple@P6APAXPAX@ZPAX@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$get@$00P6APAXPAX@ZPAX@std@@YAAAPAXAAV?$tuple@P6APAXPAX@ZPAX@0@@Z ENDP ; std::get<1,void * (__cdecl*)(void *),void *>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$move@AAP6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$move@AAP6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z PROC ; std::move<void * (__cdecl*&)(void *)>, COMDAT

; 1466 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$move@AAP6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __6750BE0F_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1467 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1468 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$move@AAP6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$move@AAP6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$move@AAP6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z ENDP ; std::move<void * (__cdecl*&)(void *)>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$get@$0A@P6APAXPAX@ZPAX@std@@YAAAP6APAXPAX@ZAAV?$tuple@P6APAXPAX@ZPAX@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Tuple$ = 8						; size = 4
??$get@$0A@P6APAXPAX@ZPAX@std@@YAAAP6APAXPAX@ZAAV?$tuple@P6APAXPAX@ZPAX@0@@Z PROC ; std::get<0,void * (__cdecl*)(void *),void *>, COMDAT

; 761  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$get@$0A@P6APAXPAX@ZPAX@std@@YAAAP6APAXPAX@ZAAV?$tuple@P6APAXPAX@ZPAX@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __78273460_tuple
	call	@__CheckForDebuggerJustMyCode@4

; 762  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 763  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

	mov	eax, DWORD PTR __Tuple$[ebp]
	add	eax, 4

; 764  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$get@$0A@P6APAXPAX@ZPAX@std@@YAAAP6APAXPAX@ZAAV?$tuple@P6APAXPAX@ZPAX@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$get@$0A@P6APAXPAX@ZPAX@std@@YAAAP6APAXPAX@ZAAV?$tuple@P6APAXPAX@ZPAX@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$get@$0A@P6APAXPAX@ZPAX@std@@YAAAP6APAXPAX@ZAAV?$tuple@P6APAXPAX@ZPAX@0@@Z ENDP ; std::get<0,void * (__cdecl*)(void *),void *>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@1@$$QAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@1@$$QAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *>, COMDAT
; _this$ = ecx

; 1333 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@1@$$QAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4597251A_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z ; std::forward<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
	add	esp, 4
	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	push	eax
	call	??$forward@PAV?$tuple@P6APAXPAX@ZPAX@std@@@std@@YA$$QAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@@Z ; std::forward<std::tuple<void * (__cdecl*)(void *),void *> *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@1@$$QAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@1@$$QAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@1@$$QAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z PROC ; std::forward<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >, COMDAT

; 1454 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __6750BE0F_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z ENDP ; std::forward<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>, COMDAT
; _this$ = ecx

; 1815 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __859CFEA8_memory
	call	@__CheckForDebuggerJustMyCode@4
	lea	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAPAV?$tuple@P6APAXPAX@ZPAX@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@AAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::tuple<void * (__cdecl*)(void *),void *> * &>
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\tuple
;	COMDAT ??$?0AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@AAP6APAXPAX@ZAAPAX@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__This_arg$ = 8						; size = 4
_<_Rest_arg_0>$ = 12					; size = 4
??$?0AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@AAP6APAXPAX@ZAAPAX@Z PROC ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><void * (__cdecl*&)(void *),void * &,0>, COMDAT
; _this$ = ecx

; 315  :         : tuple(_Exact_args_t{}, _STD forward<_This2>(_This_arg), _STD forward<_Rest2>(_Rest_arg)...) {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@AAP6APAXPAX@ZAAPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __78273460_tuple
	call	@__CheckForDebuggerJustMyCode@4
	xor	eax, eax
	mov	BYTE PTR $T2[ebp], al
	mov	ecx, DWORD PTR _<_Rest_arg_0>$[ebp]
	push	ecx
	call	??$forward@AAPAX@std@@YAAAPAXAAPAX@Z	; std::forward<void * &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __This_arg$[ebp]
	push	edx
	call	??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::forward<void * (__cdecl*&)(void *)>
	add	esp, 4
	push	eax
	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U_Exact_args_t@std@@AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@U_Exact_args_t@1@AAP6APAXPAX@ZAAPAX@Z ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><std::_Exact_args_t,void * (__cdecl*&)(void *),void * &,0>
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@AAP6APAXPAX@ZAAPAX@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@AAP6APAXPAX@ZAAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@AAP6APAXPAX@ZAAPAX@Z ENDP ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><void * (__cdecl*&)(void *),void * &,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\utility
;	COMDAT ??$exchange@PAV?$tuple@P6APAXPAX@ZPAX@std@@PAV12@@std@@YAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@$$QAPAV10@@Z
_TEXT	SEGMENT
__Old_val$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAV?$tuple@P6APAXPAX@ZPAX@std@@PAV12@@std@@YAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@$$QAPAV10@@Z PROC ; std::exchange<std::tuple<void * (__cdecl*)(void *),void *> *,std::tuple<void * (__cdecl*)(void *),void *> *>, COMDAT

; 571  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$exchange@PAV?$tuple@P6APAXPAX@ZPAX@std@@PAV12@@std@@YAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@$$QAPAV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __2F0246D9_utility
	call	@__CheckForDebuggerJustMyCode@4

; 572  :     // assign _New_val to _Val, return previous _Val
; 573  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 574  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR __New_val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 575  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 576  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$exchange@PAV?$tuple@P6APAXPAX@ZPAX@std@@PAV12@@std@@YAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@$$QAPAV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$exchange@PAV?$tuple@P6APAXPAX@ZPAX@std@@PAV12@@std@@YAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@$$QAPAV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$exchange@PAV?$tuple@P6APAXPAX@ZPAX@std@@PAV12@@std@@YAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@$$QAPAV10@@Z ENDP ; std::exchange<std::tuple<void * (__cdecl*)(void *),void *> *,std::tuple<void * (__cdecl*)(void *),void *> *>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
;	COMDAT ??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z
_TEXT	SEGMENT
$T2 = -236						; size = 4
__Tup$ = -32						; size = 4
__FnVals$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__RawVals$ = 8						; size = 4
??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z PROC ; std::thread::_Invoke<std::tuple<void * (__cdecl*)(void *),void *>,0,1>, COMDAT

; 39   :     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __5ED1861E_thread
	call	@__CheckForDebuggerJustMyCode@4

; 40   :         // adapt invoke of user's callable object to _beginthreadex's thread procedure
; 41   :         const unique_ptr<_Tuple> _FnVals(static_cast<_Tuple*>(_RawVals));

	mov	eax, DWORD PTR __RawVals$[ebp]
	push	eax
	lea	ecx, DWORD PTR __FnVals$[ebp]
	call	??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>

; 42   :         _Tuple& _Tup = *_FnVals;

	lea	ecx, DWORD PTR __FnVals$[ebp]
	call	??D?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEAAV?$tuple@P6APAXPAX@ZPAX@1@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::operator*
	mov	DWORD PTR __Tup$[ebp], eax

; 43   :         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);

	mov	eax, DWORD PTR __Tup$[ebp]
	push	eax
	call	??$get@$00P6APAXPAX@ZPAX@std@@YAAAPAXAAV?$tuple@P6APAXPAX@ZPAX@0@@Z ; std::get<1,void * (__cdecl*)(void *),void *>
	add	esp, 4
	push	eax
	call	??$move@AAPAX@std@@YA$$QAPAXAAPAX@Z	; std::move<void * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Tup$[ebp]
	push	ecx
	call	??$get@$0A@P6APAXPAX@ZPAX@std@@YAAAP6APAXPAX@ZAAV?$tuple@P6APAXPAX@ZPAX@0@@Z ; std::get<0,void * (__cdecl*)(void *),void *>
	add	esp, 4
	push	eax
	call	??$move@AAP6APAXPAX@Z@std@@YA$$QAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::move<void * (__cdecl*&)(void *)>
	add	esp, 4
	push	eax
	call	??$invoke@P6APAXPAX@ZPAX@std@@YAPAX$$QAP6APAXPAX@Z$$QAPAX@Z ; std::invoke<void * (__cdecl*)(void *),void *>
	add	esp, 8

; 44   :         _Cnd_do_broadcast_at_thread_exit(); // TRANSITION, ABI

	call	__Cnd_do_broadcast_at_thread_exit

; 45   :         return 0;

	mov	DWORD PTR $T2[ebp], 0
	lea	ecx, DWORD PTR __FnVals$[ebp]
	call	??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::~unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
	mov	eax, DWORD PTR $T2[ebp]

; 46   :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Invoke
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN6@Invoke:
	DD	1
	DD	$LN5@Invoke
$LN5@Invoke:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Invoke
$LN3@Invoke:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z ENDP ; std::thread::_Invoke<std::tuple<void * (__cdecl*)(void *),void *>,0,1>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T2 = -233						; size = 1
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>, COMDAT
; _this$ = ecx

; 1832 :         : _Mypair(_One_then_variadic_args_t(), _STD forward<_Dx>(_Right.get_deleter()), _Right.release()) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __859CFEA8_memory
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::release
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_deleter@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get_deleter
	push	eax
	call	??$forward@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@@std@@YA$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@0@AAU10@@Z ; std::forward<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
	add	esp, 4
	push	eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@1@$$QAPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *>

; 1833 :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Get_first, COMDAT
; _this$ = ecx

; 1335 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4597251A_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1336 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1337 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Get_first
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::release, COMDAT
; _this$ = ecx

; 1905 :     pointer release() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __859CFEA8_memory
	call	@__CheckForDebuggerJustMyCode@4

; 1906 :         return _STD exchange(_Mypair._Myval2, pointer());

	mov	DWORD PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$exchange@PAV?$tuple@P6APAXPAX@ZPAX@std@@PAV12@@std@@YAPAV?$tuple@P6APAXPAX@ZPAX@0@AAPAV10@$$QAPAV10@@Z ; std::exchange<std::tuple<void * (__cdecl*)(void *),void *> *,std::tuple<void * (__cdecl*)(void *),void *> *>
	add	esp, 8

; 1907 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::release
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ?get@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?get@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get, COMDAT
; _this$ = ecx

; 1897 :     _NODISCARD pointer get() const noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __859CFEA8_memory
	call	@__CheckForDebuggerJustMyCode@4

; 1898 :         return _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1899 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?get@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?get@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ??D?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEAAV?$tuple@P6APAXPAX@ZPAX@1@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??D?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEAAV?$tuple@P6APAXPAX@ZPAX@1@XZ PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::operator*, COMDAT
; _this$ = ecx

; 1889 :     _NODISCARD add_lvalue_reference_t<_Ty> operator*() const noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??D?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEAAV?$tuple@P6APAXPAX@ZPAX@1@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __859CFEA8_memory
	call	@__CheckForDebuggerJustMyCode@4

; 1890 :         return *_Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1891 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??D?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEAAV?$tuple@P6APAXPAX@ZPAX@1@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??D?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEAAV?$tuple@P6APAXPAX@ZPAX@1@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??D?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEAAV?$tuple@P6APAXPAX@ZPAX@1@XZ ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::operator*
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ?get_deleter@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?get_deleter@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get_deleter, COMDAT
; _this$ = ecx

; 1881 :     _NODISCARD _Dx& get_deleter() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_deleter@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __859CFEA8_memory
	call	@__CheckForDebuggerJustMyCode@4

; 1882 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Get_first

; 1883 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?get_deleter@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_deleter@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_deleter@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get_deleter
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ PROC ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::~unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >, COMDAT
; _this$ = ecx

; 1875 :     ~unique_ptr() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __859CFEA8_memory
	call	@__CheckForDebuggerJustMyCode@4

; 1876 :         if (_Mypair._Myval2) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@unique_ptr

; 1877 :             _Mypair._Get_first()(_Mypair._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@PAV?$tuple@P6APAXPAX@ZPAX@2@$00@std@@QAEAAU?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,std::tuple<void * (__cdecl*)(void *),void *> *,1>::_Get_first
	mov	ecx, eax
	call	??R?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@QBEXPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ; std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >::operator()
$LN3@unique_ptr:

; 1878 :         }
; 1879 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ ENDP ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::~unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ??R?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@QBEXPAV?$tuple@P6APAXPAX@ZPAX@1@@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??R?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@QBEXPAV?$tuple@P6APAXPAX@ZPAX@1@@Z PROC ; std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >::operator(), COMDAT
; _this$ = ecx

; 1760 :     void operator()(_Ty* _Ptr) const noexcept /* strengthened */ { // delete a pointer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??R?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@QBEXPAV?$tuple@P6APAXPAX@ZPAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __859CFEA8_memory
	call	@__CheckForDebuggerJustMyCode@4

; 1761 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1762 :         delete _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	push	8
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 1763 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??R?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@QBEXPAV?$tuple@P6APAXPAX@ZPAX@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??R?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@QBEXPAV?$tuple@P6APAXPAX@ZPAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??R?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@QBEXPAV?$tuple@P6APAXPAX@ZPAX@1@@Z ENDP ; std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >::operator()
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\memory
;	COMDAT ??$make_unique@V?$tuple@P6APAXPAX@ZPAX@std@@AAP6APAXPAX@ZAAPAX$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@0@AAP6APAXPAX@ZAAPAX@Z
_TEXT	SEGMENT
tv90 = -236						; size = 4
tv82 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
$T3 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$make_unique@V?$tuple@P6APAXPAX@ZPAX@std@@AAP6APAXPAX@ZAAPAX$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@0@AAP6APAXPAX@ZAAPAX@Z PROC ; std::make_unique<std::tuple<void * (__cdecl*)(void *),void *>,void * (__cdecl*&)(void *),void * &,0>, COMDAT

; 2067 : _NODISCARD unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __859CFEA8_memory
	call	@__CheckForDebuggerJustMyCode@4

; 2068 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@make_uniqu
	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@AAPAX@std@@YAAAPAXAAPAX@Z	; std::forward<void * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::forward<void * (__cdecl*&)(void *)>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??$?0AAP6APAXPAX@ZAAPAX$0A@@?$tuple@P6APAXPAX@ZPAX@std@@QAE@AAP6APAXPAX@ZAAPAX@Z ; std::tuple<void * (__cdecl*)(void *),void *>::tuple<void * (__cdecl*)(void *),void *><void * (__cdecl*&)(void *),void * &,0>
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN4@make_uniqu
$LN3@make_uniqu:
	mov	DWORD PTR tv82[ebp], 0
$LN4@make_uniqu:
	mov	edx, DWORD PTR tv82[ebp]
	push	edx
	lea	ecx, DWORD PTR $T3[ebp]
	call	??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@PAV?$tuple@P6APAXPAX@ZPAX@1@@Z ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>
	mov	DWORD PTR tv90[ebp], eax
	mov	eax, DWORD PTR tv90[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::~unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2069 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$make_unique@V?$tuple@P6APAXPAX@ZPAX@std@@AAP6APAXPAX@ZAAPAX$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@0@AAP6APAXPAX@ZAAPAX@Z ENDP ; std::make_unique<std::tuple<void * (__cdecl*)(void *),void *>,void * (__cdecl*&)(void *),void * &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@AAPAX@std@@YAAAPAXAAPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$forward@AAPAX@std@@YAAAPAXAAPAX@Z PROC		; std::forward<void * &>, COMDAT

; 1454 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$forward@AAPAX@std@@YAAAPAXAAPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __6750BE0F_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$forward@AAPAX@std@@YAAAPAXAAPAX@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$forward@AAPAX@std@@YAAAPAXAAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$forward@AAPAX@std@@YAAAPAXAAPAX@Z ENDP		; std::forward<void * &>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\type_traits
;	COMDAT ??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z PROC ; std::forward<void * (__cdecl*&)(void *)>, COMDAT

; 1454 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __6750BE0F_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z ENDP ; std::forward<void * (__cdecl*&)(void *)>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xstddef
;	COMDAT ??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z PROC ; std::addressof<std::mutex>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __D81DD1CB_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z ENDP ; std::addressof<std::mutex>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
;	COMDAT ??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z
_TEXT	SEGMENT
tv132 = -256						; size = 4
$T2 = -248						; size = 4
__Invoker_proc$ = -44					; size = 4
__Decay_copied$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Fx$ = 8						; size = 4
_<_Ax_0>$ = 12						; size = 4
??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z PROC ; std::thread::thread<void * (__cdecl*&)(void *),void * &,0>, COMDAT
; _this$ = ecx

; 55   :     explicit thread(_Fn&& _Fx, _Args&&... _Ax) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5ED1861E_thread
	call	@__CheckForDebuggerJustMyCode@4

; 56   :         using _Tuple                 = tuple<decay_t<_Fn>, decay_t<_Args>...>;
; 57   :         auto _Decay_copied           = _STD make_unique<_Tuple>(_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...);

	mov	eax, DWORD PTR _<_Ax_0>$[ebp]
	push	eax
	call	??$forward@AAPAX@std@@YAAAPAXAAPAX@Z	; std::forward<void * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Fx$[ebp]
	push	ecx
	call	??$forward@AAP6APAXPAX@Z@std@@YAAAP6APAXPAX@ZAAP6APAX0@Z@Z ; std::forward<void * (__cdecl*&)(void *)>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??$make_unique@V?$tuple@P6APAXPAX@ZPAX@std@@AAP6APAXPAX@ZAAPAX$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@0@AAP6APAXPAX@ZAAPAX@Z ; std::make_unique<std::tuple<void * (__cdecl*)(void *),void *>,void * (__cdecl*&)(void *),void * &,0>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv132[ebp], eax
	mov	eax, DWORD PTR tv132[ebp]
	push	eax
	lea	ecx, DWORD PTR __Decay_copied$[ebp]
	call	??$?0U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@$$QAV01@@Z ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > ><std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> >,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::~unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >

; 58   :         constexpr auto _Invoker_proc = _Get_invoke<_Tuple>(make_index_sequence<1 + sizeof...(_Args)>{});

	mov	DWORD PTR __Invoker_proc$[ebp], OFFSET ??$_Invoke@V?$tuple@P6APAXPAX@ZPAX@std@@$0A@$00@thread@std@@CGIPAX@Z ; std::thread::_Invoke<std::tuple<void * (__cdecl*)(void *),void *>,0,1>

; 59   : 
; 60   : #pragma warning(push)
; 61   : #pragma warning(disable : 5039) // pointer or reference to potentially throwing function passed to
; 62   :                                 // extern C function under -EHc. Undefined behavior may occur
; 63   :                                 // if this function throws an exception. (/Wall)
; 64   :         _Thr._Hnd =

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	push	0
	lea	ecx, DWORD PTR __Decay_copied$[ebp]
	call	?get@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QBEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::get
	push	eax
	mov	ecx, DWORD PTR __Invoker_proc$[ebp]
	push	ecx
	push	0
	push	0
	call	DWORD PTR __imp___beginthreadex
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 65   :             reinterpret_cast<void*>(_CSTD _beginthreadex(nullptr, 0, _Invoker_proc, _Decay_copied.get(), 0, &_Thr._Id));
; 66   : #pragma warning(pop)
; 67   : 
; 68   :         if (_Thr._Hnd) { // ownership transferred to the thread

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@thread

; 69   :             (void) _Decay_copied.release();

	lea	ecx, DWORD PTR __Decay_copied$[ebp]
	call	?release@?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAEPAV?$tuple@P6APAXPAX@ZPAX@2@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::release

; 70   :         } else { // failed to start thread

	jmp	SHORT $LN3@thread
$LN2@thread:

; 71   :             _Thr._Id = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 72   :             _Throw_Cpp_error(_RESOURCE_UNAVAILABLE_TRY_AGAIN);

	push	6
	call	?_Throw_Cpp_error@std@@YAXH@Z		; std::_Throw_Cpp_error
$LN3@thread:

; 73   :         }
; 74   :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Decay_copied$[ebp]
	call	??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::~unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
	mov	eax, DWORD PTR _this$[ebp]
$LN4@thread:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@thread
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN10@thread:
	DD	1
	DD	$LN9@thread
$LN9@thread:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@thread
$LN7@thread:
	DB	95					; 0000005fH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z$1:
	lea	ecx, DWORD PTR __Decay_copied$[ebp]
	jmp	??1?$unique_ptr@V?$tuple@P6APAXPAX@ZPAX@std@@U?$default_delete@V?$tuple@P6APAXPAX@ZPAX@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >::~unique_ptr<std::tuple<void * (__cdecl*)(void *),void *>,std::default_delete<std::tuple<void * (__cdecl*)(void *),void *> > >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z ENDP ; std::thread::thread<void * (__cdecl*&)(void *),void * &,0>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gshared_mutex@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gshared_mutex@std@@QAEPAXI@Z PROC			; std::shared_mutex::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1shared_mutex@std@@QAE@XZ		; std::shared_mutex::~shared_mutex
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gshared_mutex@std@@QAEPAXI@Z ENDP			; std::shared_mutex::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
;	COMDAT ?unlock_shared@shared_mutex@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?unlock_shared@shared_mutex@std@@QAEXXZ PROC		; std::shared_mutex::unlock_shared, COMDAT
; _this$ = ecx

; 61   :     void unlock_shared() noexcept /* strengthened */ { // unlock non-exclusive

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?unlock_shared@shared_mutex@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DE6DF6A9_shared_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 62   :         _Smtx_unlock_shared(&_Myhandle);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	__Smtx_unlock_shared
	add	esp, 4

; 63   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?unlock_shared@shared_mutex@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?unlock_shared@shared_mutex@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?unlock_shared@shared_mutex@std@@QAEXXZ ENDP		; std::shared_mutex::unlock_shared
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
;	COMDAT ?lock_shared@shared_mutex@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?lock_shared@shared_mutex@std@@QAEXXZ PROC		; std::shared_mutex::lock_shared, COMDAT
; _this$ = ecx

; 53   :     void lock_shared() noexcept /* strengthened */ { // lock non-exclusive

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lock_shared@shared_mutex@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DE6DF6A9_shared_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 54   :         _Smtx_lock_shared(&_Myhandle);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	__Smtx_lock_shared
	add	esp, 4

; 55   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?lock_shared@shared_mutex@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lock_shared@shared_mutex@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?lock_shared@shared_mutex@std@@QAEXXZ ENDP		; std::shared_mutex::lock_shared
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
;	COMDAT ?unlock@shared_mutex@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?unlock@shared_mutex@std@@QAEXXZ PROC			; std::shared_mutex::unlock, COMDAT
; _this$ = ecx

; 49   :     void unlock() noexcept /* strengthened */ { // unlock exclusive

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?unlock@shared_mutex@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DE6DF6A9_shared_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 50   :         _Smtx_unlock_exclusive(&_Myhandle);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	__Smtx_unlock_exclusive
	add	esp, 4

; 51   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?unlock@shared_mutex@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?unlock@shared_mutex@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?unlock@shared_mutex@std@@QAEXXZ ENDP			; std::shared_mutex::unlock
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
;	COMDAT ?lock@shared_mutex@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?lock@shared_mutex@std@@QAEXXZ PROC			; std::shared_mutex::lock, COMDAT
; _this$ = ecx

; 41   :     void lock() noexcept /* strengthened */ { // lock exclusive

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lock@shared_mutex@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DE6DF6A9_shared_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 42   :         _Smtx_lock_exclusive(&_Myhandle);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	__Smtx_lock_exclusive
	add	esp, 4

; 43   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?lock@shared_mutex@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lock@shared_mutex@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?lock@shared_mutex@std@@QAEXXZ ENDP			; std::shared_mutex::lock
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
;	COMDAT ??1shared_mutex@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1shared_mutex@std@@QAE@XZ PROC			; std::shared_mutex::~shared_mutex, COMDAT
; _this$ = ecx

; 39   :     ~shared_mutex() noexcept {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1shared_mutex@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DE6DF6A9_shared_mutex
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1shared_mutex@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1shared_mutex@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1shared_mutex@std@@QAE@XZ ENDP			; std::shared_mutex::~shared_mutex
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\shared_mutex
;	COMDAT ??0shared_mutex@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0shared_mutex@std@@QAE@XZ PROC			; std::shared_mutex::shared_mutex, COMDAT
; _this$ = ecx

; 36   :     shared_mutex() noexcept // strengthened

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0shared_mutex@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DE6DF6A9_shared_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 37   :         : _Myhandle(nullptr) {}

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0shared_mutex@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0shared_mutex@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0shared_mutex@std@@QAE@XZ ENDP			; std::shared_mutex::shared_mutex
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ PROC	; std::unique_lock<std::mutex>::mutex, COMDAT
; _this$ = ecx

; 256  :     _NODISCARD _Mutex* mutex() const noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 257  :         return _Pmtx;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 258  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ ENDP	; std::unique_lock<std::mutex>::mutex
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?release@?$unique_lock@Vmutex@std@@@std@@QAEPAVmutex@2@XZ
_TEXT	SEGMENT
__Res$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?release@?$unique_lock@Vmutex@std@@@std@@QAEPAVmutex@2@XZ PROC ; std::unique_lock<std::mutex>::release, COMDAT
; _this$ = ecx

; 241  :     _Mutex* release() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?release@?$unique_lock@Vmutex@std@@@std@@QAEPAVmutex@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 242  :         _Mutex* _Res = _Pmtx;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Res$[ebp], ecx

; 243  :         _Pmtx        = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 244  :         _Owns        = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0

; 245  :         return _Res;

	mov	eax, DWORD PTR __Res$[ebp]

; 246  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?release@?$unique_lock@Vmutex@std@@@std@@QAEPAVmutex@2@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?release@?$unique_lock@Vmutex@std@@@std@@QAEPAVmutex@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?release@?$unique_lock@Vmutex@std@@@std@@QAEPAVmutex@2@XZ ENDP ; std::unique_lock<std::mutex>::release
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ PROC		; std::unique_lock<std::mutex>::~unique_lock<std::mutex>, COMDAT
; _this$ = ecx

; 186  :     ~unique_lock() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 187  :         if (_Owns) {

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN3@unique_loc

; 188  :             _Pmtx->unlock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?unlock@_Mutex_base@std@@QAEXXZ		; std::_Mutex_base::unlock
$LN3@unique_loc:

; 189  :         }
; 190  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ENDP		; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@Uadopt_lock_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Mtx$ = 8						; size = 4
___formal$ = 12						; size = 1
??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@Uadopt_lock_t@1@@Z PROC ; std::unique_lock<std::mutex>::unique_lock<std::mutex>, COMDAT
; _this$ = ecx

; 141  :         : _Pmtx(_STD addressof(_Mtx)), _Owns(true) { // construct and assume already locked

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Mtx$[ebp]
	push	eax
	call	??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z ; std::addressof<std::mutex>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 1

; 142  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@Uadopt_lock_t@1@@Z ENDP ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gcondition_variable@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gcondition_variable@std@@QAEPAXI@Z PROC		; std::condition_variable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1condition_variable@std@@QAE@XZ	; std::condition_variable::~condition_variable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gcondition_variable@std@@QAEPAXI@Z ENDP		; std::condition_variable::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ PROC ; std::condition_variable::_Mycnd, COMDAT
; _this$ = ecx

; 697  :     _Cnd_t _Mycnd() noexcept { // get pointer to _Cnd_internal_imp_t inside _Cnd_storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 698  :         return reinterpret_cast<_Cnd_t>(&_Cnd_storage);

	mov	eax, DWORD PTR _this$[ebp]

; 699  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ENDP ; std::condition_variable::_Mycnd
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Lck$ = 8						; size = 4
?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z PROC ; std::condition_variable::wait, COMDAT
; _this$ = ecx

; 596  :     void wait(unique_lock<mutex>& _Lck) { // wait for signal

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 597  :         // Nothing to do to comply with LWG-2135 because std::mutex lock/unlock are nothrow
; 598  :         _Check_C_return(_Cnd_wait(_Mycnd(), _Lck.mutex()->_Mymtx()));

	mov	ecx, DWORD PTR __Lck$[ebp]
	call	?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ ; std::unique_lock<std::mutex>::mutex
	mov	ecx, eax
	call	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
	push	eax
	call	__Cnd_wait
	add	esp, 8
	push	eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 599  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z ENDP ; std::condition_variable::wait
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?notify_all@condition_variable@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?notify_all@condition_variable@std@@QAEXXZ PROC		; std::condition_variable::notify_all, COMDAT
; _this$ = ecx

; 592  :     void notify_all() noexcept { // wake up all waiters

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?notify_all@condition_variable@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 593  :         _Check_C_return(_Cnd_broadcast(_Mycnd()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
	push	eax
	call	__Cnd_broadcast
	add	esp, 4
	push	eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 594  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?notify_all@condition_variable@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?notify_all@condition_variable@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?notify_all@condition_variable@std@@QAEXXZ ENDP		; std::condition_variable::notify_all
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?notify_one@condition_variable@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?notify_one@condition_variable@std@@QAEXXZ PROC		; std::condition_variable::notify_one, COMDAT
; _this$ = ecx

; 588  :     void notify_one() noexcept { // wake up one waiter

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?notify_one@condition_variable@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 589  :         _Check_C_return(_Cnd_signal(_Mycnd()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
	push	eax
	call	__Cnd_signal
	add	esp, 4
	push	eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 590  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?notify_one@condition_variable@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?notify_one@condition_variable@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?notify_one@condition_variable@std@@QAEXXZ ENDP		; std::condition_variable::notify_one
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??1condition_variable@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1condition_variable@std@@QAE@XZ PROC			; std::condition_variable::~condition_variable, COMDAT
; _this$ = ecx

; 581  :     ~condition_variable() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1condition_variable@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 582  :         _Cnd_destroy_in_situ(_Mycnd());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
	push	eax
	call	__Cnd_destroy_in_situ
	add	esp, 4

; 583  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1condition_variable@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1condition_variable@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1condition_variable@std@@QAE@XZ ENDP			; std::condition_variable::~condition_variable
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??0condition_variable@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0condition_variable@std@@QAE@XZ PROC			; std::condition_variable::condition_variable, COMDAT
; _this$ = ecx

; 577  :     condition_variable() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 578  :         _Cnd_init_in_situ(_Mycnd());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
	push	eax
	call	__Cnd_init_in_situ
	add	esp, 4

; 579  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0condition_variable@std@@QAE@XZ ENDP			; std::condition_variable::condition_variable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gmutex@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gmutex@std@@QAEPAXI@Z PROC				; std::mutex::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1mutex@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	48					; 00000030H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gmutex@std@@QAEPAXI@Z ENDP				; std::mutex::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1mutex@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1mutex@std@@QAE@XZ PROC				; std::mutex::~mutex, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Mutex_base@std@@QAE@XZ		; std::_Mutex_base::~_Mutex_base
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1mutex@std@@QAE@XZ ENDP				; std::mutex::~mutex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??0mutex@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0mutex@std@@QAE@XZ PROC				; std::mutex::mutex, COMDAT
; _this$ = ecx

; 89   :     /* constexpr */ mutex() noexcept // TRANSITION, ABI

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0mutex@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 90   :         : _Mutex_base() {}

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Mutex_base@std@@QAE@H@Z		; std::_Mutex_base::_Mutex_base
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0mutex@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0mutex@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0mutex@std@@QAE@XZ ENDP				; std::mutex::mutex
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ PROC ; std::_Mutex_base::_Mymtx, COMDAT
; _this$ = ecx

; 82   :     _Mtx_t _Mymtx() noexcept { // get pointer to _Mtx_internal_imp_t inside _Mtx_storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 83   :         return reinterpret_cast<_Mtx_t>(&_Mtx_storage);

	mov	eax, DWORD PTR _this$[ebp]

; 84   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ENDP ; std::_Mutex_base::_Mymtx
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?unlock@_Mutex_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?unlock@_Mutex_base@std@@QAEXXZ PROC			; std::_Mutex_base::unlock, COMDAT
; _this$ = ecx

; 66   :     void unlock() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 67   :         _Check_C_return(_Mtx_unlock(_Mymtx()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	push	eax
	call	__Mtx_unlock
	add	esp, 4
	push	eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 68   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?unlock@_Mutex_base@std@@QAEXXZ ENDP			; std::_Mutex_base::unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ?lock@_Mutex_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lock@_Mutex_base@std@@QAEXXZ PROC			; std::_Mutex_base::lock, COMDAT
; _this$ = ecx

; 50   :     void lock() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 51   :         _Check_C_return(_Mtx_lock(_Mymtx()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	push	eax
	call	__Mtx_lock
	add	esp, 4
	push	eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 52   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lock@_Mutex_base@std@@QAEXXZ ENDP			; std::_Mutex_base::lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??1_Mutex_base@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Mutex_base@std@@QAE@XZ PROC				; std::_Mutex_base::~_Mutex_base, COMDAT
; _this$ = ecx

; 43   :     ~_Mutex_base() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Mutex_base@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 44   :         _Mtx_destroy_in_situ(_Mymtx());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	push	eax
	call	__Mtx_destroy_in_situ
	add	esp, 4

; 45   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Mutex_base@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Mutex_base@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Mutex_base@std@@QAE@XZ ENDP				; std::_Mutex_base::~_Mutex_base
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\mutex
;	COMDAT ??0_Mutex_base@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Flags$ = 8						; size = 4
??0_Mutex_base@std@@QAE@H@Z PROC			; std::_Mutex_base::_Mutex_base, COMDAT
; _this$ = ecx

; 39   :     _Mutex_base(int _Flags = 0) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Mutex_base@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A01ABEDF_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 40   :         _Mtx_init_in_situ(_Mymtx(), _Flags | _Mtx_try);

	mov	eax, DWORD PTR __Flags$[ebp]
	or	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	push	eax
	call	__Mtx_init_in_situ
	add	esp, 8

; 41   :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0_Mutex_base@std@@QAE@H@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Mutex_base@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Mutex_base@std@@QAE@H@Z ENDP			; std::_Mutex_base::_Mutex_base
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gthread@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gthread@std@@QAEPAXI@Z PROC				; std::thread::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1thread@std@@QAE@XZ			; std::thread::~thread
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gthread@std@@QAEPAXI@Z ENDP				; std::thread::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
;	COMDAT ?join@thread@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -216						; size = 8
_this$ = -8						; size = 4
?join@thread@std@@QAEXXZ PROC				; std::thread::join, COMDAT
; _this$ = ecx

; 104  :     void join() {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5ED1861E_thread
	call	@__CheckForDebuggerJustMyCode@4

; 105  :         if (!joinable()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?joinable@thread@std@@QBE_NXZ		; std::thread::joinable
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@join

; 106  :             _Throw_Cpp_error(_INVALID_ARGUMENT);

	push	1
	call	?_Throw_Cpp_error@std@@YAXH@Z		; std::_Throw_Cpp_error
$LN2@join:

; 107  :         }
; 108  : 
; 109  :         if (_Thr._Id == _Thrd_id()) {

	call	__Thrd_id
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], eax
	jne	SHORT $LN3@join

; 110  :             _Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

	push	5
	call	?_Throw_Cpp_error@std@@YAXH@Z		; std::_Throw_Cpp_error
$LN3@join:

; 111  :         }
; 112  : 
; 113  :         if (_Thrd_join(_Thr, nullptr) != _Thrd_success) {

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	__Thrd_join
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@join

; 114  :             _Throw_Cpp_error(_NO_SUCH_PROCESS);

	push	2
	call	?_Throw_Cpp_error@std@@YAXH@Z		; std::_Throw_Cpp_error
$LN4@join:

; 115  :         }
; 116  : 
; 117  :         _Thr = {};

	xor	eax, eax
	mov	DWORD PTR $T1[ebp], eax
	mov	DWORD PTR $T1[ebp+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN5@join:

; 118  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?join@thread@std@@QAEXXZ ENDP				; std::thread::join
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
;	COMDAT ?joinable@thread@std@@QBE_NXZ
_TEXT	SEGMENT
tv67 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?joinable@thread@std@@QBE_NXZ PROC			; std::thread::joinable, COMDAT
; _this$ = ecx

; 100  :     _NODISCARD bool joinable() const noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?joinable@thread@std@@QBE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5ED1861E_thread
	call	@__CheckForDebuggerJustMyCode@4

; 101  :         return _Thr._Id != 0;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@joinable
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@joinable
$LN3@joinable:
	mov	DWORD PTR tv67[ebp], 0
$LN4@joinable:
	mov	al, BYTE PTR tv67[ebp]

; 102  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?joinable@thread@std@@QBE_NXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?joinable@thread@std@@QBE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?joinable@thread@std@@QBE_NXZ ENDP			; std::thread::joinable
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\thread
;	COMDAT ??1thread@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1thread@std@@QAE@XZ PROC				; std::thread::~thread, COMDAT
; _this$ = ecx

; 76   :     ~thread() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1thread@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5ED1861E_thread
	call	@__CheckForDebuggerJustMyCode@4

; 77   :         if (joinable()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?joinable@thread@std@@QBE_NXZ		; std::thread::joinable
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@thread

; 78   :             _STD terminate();

	mov	esi, esp
	call	DWORD PTR __imp__terminate
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@thread:

; 79   :         }
; 80   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1thread@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1thread@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1thread@std@@QAE@XZ ENDP				; std::thread::~thread
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\software_install\VS2019\VC\Tools\MSVC\14.26.28801\include\xthreads.h
;	COMDAT ?_Check_C_return@std@@YAHH@Z
_TEXT	SEGMENT
__Res$ = 8						; size = 4
?_Check_C_return@std@@YAHH@Z PROC			; std::_Check_C_return, COMDAT

; 129  : inline int _Check_C_return(int _Res) { // throw exception on failure

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A7A88A06_xthreads@h
	call	@__CheckForDebuggerJustMyCode@4

; 130  :     if (_Res != _Thrd_success) {

	cmp	DWORD PTR __Res$[ebp], 0
	je	SHORT $LN2@Check_C_re

; 131  :         _Throw_C_error(_Res);

	mov	eax, DWORD PTR __Res$[ebp]
	push	eax
	call	?_Throw_C_error@std@@YAXH@Z		; std::_Throw_C_error
$LN2@Check_C_re:

; 132  :     }
; 133  : 
; 134  :     return _Res;

	mov	eax, DWORD PTR __Res$[ebp]
$LN3@Check_C_re:

; 135  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Check_C_return@std@@YAHH@Z ENDP			; std::_Check_C_return
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_rwlock_unlock
_TEXT	SEGMENT
_rwlock$ = 8						; size = 4
_pthread_rwlock_unlock PROC				; COMDAT

; 124  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 125  :   if (static_cast<rw_lock_internal*>(*rwlock)->write_lock) {

	mov	eax, DWORD PTR _rwlock$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, BYTE PTR [ecx+4]
	test	edx, edx
	je	SHORT $LN2@pthread_rw

; 126  :     static_cast<rw_lock_internal*>(*rwlock)->write_lock = false;

	mov	eax, DWORD PTR _rwlock$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+4], 0

; 127  :     static_cast<rw_lock_internal*>(*rwlock)->lock->unlock();

	mov	eax, DWORD PTR _rwlock$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	call	?unlock@shared_mutex@std@@QAEXXZ	; std::shared_mutex::unlock

; 128  :   }

	jmp	SHORT $LN3@pthread_rw
$LN2@pthread_rw:

; 129  :   else {
; 130  :     static_cast<rw_lock_internal*>(*rwlock)->lock->unlock_shared();

	mov	eax, DWORD PTR _rwlock$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	call	?unlock_shared@shared_mutex@std@@QAEXXZ	; std::shared_mutex::unlock_shared
$LN3@pthread_rw:

; 131  :   }
; 132  :   return 0;

	xor	eax, eax

; 133  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_rwlock_unlock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_rwlock_wrlock
_TEXT	SEGMENT
_rwlock$ = 8						; size = 4
_pthread_rwlock_wrlock PROC				; COMDAT

; 117  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 118  :   static_cast<rw_lock_internal*>(*rwlock)->lock->lock();

	mov	eax, DWORD PTR _rwlock$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	call	?lock@shared_mutex@std@@QAEXXZ		; std::shared_mutex::lock

; 119  :   static_cast<rw_lock_internal*>(*rwlock)->write_lock = true;

	mov	eax, DWORD PTR _rwlock$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+4], 1

; 120  :   return 0;

	xor	eax, eax

; 121  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_rwlock_wrlock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_rwlock_rdlock
_TEXT	SEGMENT
_rwlock$ = 8						; size = 4
_pthread_rwlock_rdlock PROC				; COMDAT

; 111  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 112  :   static_cast<rw_lock_internal*>(*rwlock)->lock->lock_shared();

	mov	eax, DWORD PTR _rwlock$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	call	?lock_shared@shared_mutex@std@@QAEXXZ	; std::shared_mutex::lock_shared

; 113  :   return 0;

	xor	eax, eax

; 114  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_rwlock_rdlock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_rwlock_destroy
_TEXT	SEGMENT
tv69 = -220						; size = 4
$T1 = -212						; size = 4
$T2 = -200						; size = 4
_rwlock$ = 8						; size = 4
_pthread_rwlock_destroy PROC				; COMDAT

; 104  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 105  :   delete static_cast<rw_lock_internal*>(*rwlock)->lock;

	mov	eax, DWORD PTR _rwlock$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@pthread_rw
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_Gshared_mutex@std@@QAEPAXI@Z
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@pthread_rw
$LN3@pthread_rw:
	mov	DWORD PTR tv69[ebp], 0
$LN4@pthread_rw:

; 106  :   delete static_cast<rw_lock_internal*>(*rwlock);

	mov	eax, DWORD PTR _rwlock$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	push	8
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 107  :   return 0;

	xor	eax, eax

; 108  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_rwlock_destroy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_rwlock_init
_TEXT	SEGMENT
tv78 = -220						; size = 4
$T1 = -212						; size = 4
$T2 = -200						; size = 4
_lock$ = 8						; size = 4
___formal$ = 12						; size = 4
_pthread_rwlock_init PROC				; COMDAT

; 96   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 97   :   *lock = new rw_lock_internal;

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR _lock$[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax], ecx

; 98   :   static_cast<rw_lock_internal*>(*lock)->lock = new std::shared_mutex;

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@pthread_rw
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0shared_mutex@std@@QAE@XZ		; std::shared_mutex::shared_mutex
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN4@pthread_rw
$LN3@pthread_rw:
	mov	DWORD PTR tv78[ebp], 0
$LN4@pthread_rw:
	mov	eax, DWORD PTR _lock$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR [ecx], edx

; 99   :   static_cast<rw_lock_internal*>(*lock)->write_lock = false;

	mov	eax, DWORD PTR _lock$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+4], 0

; 100  :   return 0;

	xor	eax, eax

; 101  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_rwlock_init ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_mutex_unlock
_TEXT	SEGMENT
_mutex$ = 8						; size = 4
_pthread_mutex_unlock PROC				; COMDAT

; 90   : int pthread_mutex_unlock(pthread_mutex_t* mutex) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 91   :     static_cast<std::mutex*>(*mutex)->unlock();

	mov	eax, DWORD PTR _mutex$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?unlock@_Mutex_base@std@@QAEXXZ		; std::_Mutex_base::unlock

; 92   :     return 0;

	xor	eax, eax

; 93   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_mutex_unlock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_mutex_lock
_TEXT	SEGMENT
_mutex$ = 8						; size = 4
_pthread_mutex_lock PROC				; COMDAT

; 85   : int pthread_mutex_lock(pthread_mutex_t* mutex) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 86   :     static_cast<std::mutex*>(*mutex)->lock();

	mov	eax, DWORD PTR _mutex$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?lock@_Mutex_base@std@@QAEXXZ		; std::_Mutex_base::lock

; 87   :     return 0;

	xor	eax, eax

; 88   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_mutex_lock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_mutex_init
_TEXT	SEGMENT
tv72 = -208						; size = 4
$T1 = -200						; size = 4
_mutex$ = 8						; size = 4
___formal$ = 12						; size = 4
_pthread_mutex_init PROC				; COMDAT

; 80   : int pthread_mutex_init(pthread_mutex_t* mutex, const pthread_mutexattr_t*) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 81   :     *mutex = new std::mutex();

	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@pthread_mu
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0mutex@std@@QAE@XZ			; std::mutex::mutex
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@pthread_mu
$LN3@pthread_mu:
	mov	DWORD PTR tv72[ebp], 0
$LN4@pthread_mu:
	mov	eax, DWORD PTR _mutex$[ebp]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR [eax], ecx

; 82   :     return 0;

	xor	eax, eax

; 83   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_mutex_init ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_mutex_destroy
_TEXT	SEGMENT
tv68 = -208						; size = 4
$T1 = -200						; size = 4
_mutex$ = 8						; size = 4
_pthread_mutex_destroy PROC				; COMDAT

; 74   : int pthread_mutex_destroy(pthread_mutex_t* mutex) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 75   :     delete static_cast<std::mutex*>(*mutex);

	mov	eax, DWORD PTR _mutex$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@pthread_mu
	push	1
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_Gmutex@std@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@pthread_mu
$LN3@pthread_mu:
	mov	DWORD PTR tv68[ebp], 0
$LN4@pthread_mu:

; 76   :     *mutex = nullptr;

	mov	eax, DWORD PTR _mutex$[ebp]
	mov	DWORD PTR [eax], 0

; 77   :     return 0;

	xor	eax, eax

; 78   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_mutex_destroy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_join
_TEXT	SEGMENT
tv69 = -220						; size = 4
$T1 = -212						; size = 4
_real_thread$ = -8					; size = 4
_thread$ = 8						; size = 4
___formal$ = 12						; size = 4
_pthread_join PROC					; COMDAT

; 67   : int pthread_join(pthread_t thread, void**) {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 68   :     std::thread* real_thread = static_cast<std::thread*>(thread);

	mov	eax, DWORD PTR _thread$[ebp]
	mov	DWORD PTR _real_thread$[ebp], eax

; 69   :     real_thread->join();

	mov	ecx, DWORD PTR _real_thread$[ebp]
	call	?join@thread@std@@QAEXXZ		; std::thread::join

; 70   :     delete real_thread;

	mov	eax, DWORD PTR _real_thread$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@pthread_jo
	push	1
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_Gthread@std@@QAEPAXI@Z
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@pthread_jo
$LN3@pthread_jo:
	mov	DWORD PTR tv69[ebp], 0
$LN4@pthread_jo:

; 71   :     return 0;

	xor	eax, eax

; 72   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_join ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_exit
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_pthread_exit PROC					; COMDAT

; 62   : void pthread_exit(void*) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 63   :     // It might be enough to do nothing here
; 64   :     // considering Kvazaar's current use of pthread_exit
; 65   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_exit ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_create
_TEXT	SEGMENT
tv77 = -220						; size = 4
$T1 = -212						; size = 4
$T2 = -200						; size = 4
_thread$ = 8						; size = 4
___formal$ = 12						; size = 4
_executee$ = 16						; size = 4
_arg$ = 20						; size = 4
_pthread_create PROC					; COMDAT

; 57   : int pthread_create(pthread_t* thread, const pthread_attr_t*, voidp_voidp_func executee, void* arg) {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 58   :     *thread = new std::thread(executee, arg);

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@pthread_cr
	lea	eax, DWORD PTR _arg$[ebp]
	push	eax
	lea	ecx, DWORD PTR _executee$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0AAP6APAXPAX@ZAAPAX$0A@@thread@std@@QAE@AAP6APAXPAX@ZAAPAX@Z ; std::thread::thread<void * (__cdecl*&)(void *),void * &,0>
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN4@pthread_cr
$LN3@pthread_cr:
	mov	DWORD PTR tv77[ebp], 0
$LN4@pthread_cr:
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR _thread$[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax], ecx

; 59   :     return 0;

	xor	eax, eax

; 60   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_create ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_cond_wait
_TEXT	SEGMENT
$T1 = -228						; size = 4
_lock$ = -24						; size = 8
_real_mutex$ = -8					; size = 4
_cond$ = 8						; size = 4
_mutex$ = 12						; size = 4
_pthread_cond_wait PROC					; COMDAT

; 49   : int pthread_cond_wait(pthread_cond_t* cond, pthread_mutex_t* mutex) {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 50   :     std::mutex* real_mutex = static_cast<std::mutex*>(*mutex);

	mov	eax, DWORD PTR _mutex$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _real_mutex$[ebp], ecx

; 51   :     std::unique_lock<std::mutex> lock(*real_mutex, std::adopt_lock);

	movzx	eax, BYTE PTR ?adopt_lock@std@@3Uadopt_lock_t@1@B
	push	eax
	mov	ecx, DWORD PTR _real_mutex$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@Uadopt_lock_t@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>

; 52   :     static_cast<std::condition_variable*>(*cond)->wait(lock);

	lea	eax, DWORD PTR _lock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cond$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z ; std::condition_variable::wait

; 53   :     lock.release();

	lea	ecx, DWORD PTR _lock$[ebp]
	call	?release@?$unique_lock@Vmutex@std@@@std@@QAEPAVmutex@2@XZ ; std::unique_lock<std::mutex>::release

; 54   :     return 0;

	mov	DWORD PTR $T1[ebp], 0
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	mov	eax, DWORD PTR $T1[ebp]

; 55   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@pthread_co
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@pthread_co:
	DD	1
	DD	$LN4@pthread_co
$LN4@pthread_co:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN3@pthread_co
$LN3@pthread_co:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_pthread_cond_wait ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_cond_signal
_TEXT	SEGMENT
_cond$ = 8						; size = 4
_pthread_cond_signal PROC				; COMDAT

; 44   : int pthread_cond_signal(pthread_cond_t* cond) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 45   :     static_cast<std::condition_variable*>(*cond)->notify_one();

	mov	eax, DWORD PTR _cond$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?notify_one@condition_variable@std@@QAEXXZ ; std::condition_variable::notify_one

; 46   :     return 0;

	xor	eax, eax

; 47   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_cond_signal ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_cond_init
_TEXT	SEGMENT
tv75 = -220						; size = 4
$T1 = -212						; size = 4
$T2 = -200						; size = 4
_cond$ = 8						; size = 4
___formal$ = 12						; size = 4
_pthread_cond_init PROC					; COMDAT

; 39   : int pthread_cond_init(pthread_cond_t* cond, const pthread_condattr_t*) {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 40   :     *cond = new std::condition_variable();

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@pthread_co
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0condition_variable@std@@QAE@XZ	; std::condition_variable::condition_variable
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@pthread_co
$LN3@pthread_co:
	mov	DWORD PTR tv75[ebp], 0
$LN4@pthread_co:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR _cond$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx

; 41   :     return 0;

	xor	eax, eax

; 42   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_cond_init ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_cond_destroy
_TEXT	SEGMENT
tv68 = -208						; size = 4
$T1 = -200						; size = 4
_cond$ = 8						; size = 4
_pthread_cond_destroy PROC				; COMDAT

; 33   : int pthread_cond_destroy(pthread_cond_t* cond) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 34   :     delete static_cast<std::condition_variable*>(*cond);

	mov	eax, DWORD PTR _cond$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@pthread_co
	push	1
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_Gcondition_variable@std@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@pthread_co
$LN3@pthread_co:
	mov	DWORD PTR tv68[ebp], 0
$LN4@pthread_co:

; 35   :     *cond = nullptr;

	mov	eax, DWORD PTR _cond$[ebp]
	mov	DWORD PTR [eax], 0

; 36   :     return 0;

	xor	eax, eax

; 37   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_cond_destroy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\open_codec_learn_2021\kvazaar-master\src\threadwrapper\src\pthread.cpp
;	COMDAT _pthread_cond_broadcast
_TEXT	SEGMENT
_cond$ = 8						; size = 4
_pthread_cond_broadcast PROC				; COMDAT

; 28   : int pthread_cond_broadcast(pthread_cond_t* cond) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __51F79D98_pthread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 29   :     static_cast<std::condition_variable*>(*cond)->notify_all();

	mov	eax, DWORD PTR _cond$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?notify_all@condition_variable@std@@QAEXXZ ; std::condition_variable::notify_all

; 30   :     return 0;

	xor	eax, eax

; 31   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pthread_cond_broadcast ENDP
_TEXT	ENDS
END
